{"version":3,"sources":["webpack:///../node_modules/d3-array/src/descending.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/zip.js","webpack:///../node_modules/d3-chord/src/math.js","webpack:///../node_modules/d3-chord/src/chord.js","webpack:///../node_modules/d3-chord/src/array.js","webpack:///../node_modules/d3-chord/src/constant.js","webpack:///../node_modules/d3-chord/src/ribbon.js","webpack:///../src/Chord.tsx","webpack:///../node_modules/d3-shape/src/arc.js"],"names":["b","a","NaN","f","ascending","length","compare","d","x","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","sqrt","cos","sin","pi","PI","halfPi","tau","compareValue","source","value","target","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Chord","width","height","padding","data","colorScheme","schemeSet3","inactive","stroke","fill","outerRadius","min","innerRadius","labels","Object","keys","matrix","values","thisArc","arc","chords","padAngle","sortGroups","sortSubgroups","sortChords","chord","k","x0","dx","j","groupSums","groupIndex","subgroupIndex","groups","subgroups","push","sort","forEach","di","dj","v","a0","a1","index","subindex","_","descending","rPath","context","ribbon","buffer","argv","call","s","apply","this","t","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","path","moveTo","quadraticCurveTo","closePath","useState","active","setActive","Base","className","transform","m","style","opacity","includes","mixBlendMode","onMouseEnter","onMouseLeave","undefined","y","dy","textAnchor","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","d2","r","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","r0","da","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","ax","ay","bx","by","kc","lc","lineTo","centroid"],"mappings":"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","file":"43ec5c4fa0b06b7598d463d7125378a1d55351c8-eaf39e64902e4aa0cab0.js","sourcesContent":["export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;","import { range } from \"d3-array\";\nimport { max, tau } from \"./math\";\n\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n\nexport default function () {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j; // Compute the sum.\n\n    k = 0, i = -1;\n\n    while (++i < n) {\n      x = 0, j = -1;\n\n      while (++j < n) {\n        x += matrix[i][j];\n      }\n\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    } // Sort groups…\n\n\n    if (sortGroups) groupIndex.sort(function (a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    }); // Sort subgroups…\n\n    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {\n      d.sort(function (a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    }); // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n; // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n\n    x = 0, i = -1;\n\n    while (++i < n) {\n      x0 = x, j = -1;\n\n      while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    } // Generate chords for each (non-empty) subgroup-subgroup link.\n\n\n    i = -1;\n\n    while (++i < n) {\n      j = i - 1;\n\n      while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n\n        if (source.value || target.value) {\n          chords.push(source.value < target.value ? {\n            source: target,\n            target: source\n          } : {\n            source: source,\n            target: target\n          });\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}","export var slice = Array.prototype.slice;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { slice } from \"./array\";\nimport constant from \"./constant\";\nimport { cos, halfPi, sin } from \"./math\";\nimport { path } from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function () {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n    if (!context) context = buffer = path();\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}","import { descending } from 'd3-array';\nimport {\n  chord,\n  ribbon,\n} from 'd3-chord';\nimport { schemeSet3 } from 'd3-scale-chromatic';\nimport { arc } from 'd3-shape';\nimport React, {\n  FC,\n  useState,\n} from 'react';\n\nimport Base from './components/Base';\n\nexport interface IProps {\n  width: number;\n  height: number;\n  padding?: number;\n  data: Record<string, number[]>;\n  colorScheme?: string[];\n  inactive?: {\n    stroke: string;\n    fill: string;\n  }\n}\n\nconst Chord: FC<IProps> = ({\n  width,\n  height,\n  padding = 10,\n  data,\n  colorScheme = schemeSet3,\n  inactive = {\n    stroke: '#ddd',\n    fill: '#eee',\n  },\n}) => {\n\n  const outerRadius = Math.min(width - padding, height - padding) * 0.5\n  const innerRadius = outerRadius - 10;\n\n  const labels = Object.keys(data);\n  const matrix = Object.values(data);\n\n  const thisArc = arc<any, any>()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius)\n\n  const chords = chord()\n    .sortSubgroups(descending)\n    .sortChords(descending)\n    .padAngle(10 / innerRadius)(matrix);\n\n  const rPath = ribbon().radius((width - padding) / 2 - 10);\n\n  const [active, setActive] = useState<number>();\n  return (\n    <Base width={width} height={height}>\n      <g className=\"ribbons\"\n        transform={`translate(${(width) / 2},${height / 2})`}>\n        {\n          chords\n            .map((m, i) => <g><path\n              stroke={inactive.stroke}\n\n              style={{\n                opacity: [m.source.index, m.target.index].includes(active as number) ? 1 : 0.5,\n                mixBlendMode: \"multiply\",\n              }}\n              fill={active === m.source.index ? colorScheme[m.source.index] :\n                active === m.target.index ? colorScheme[m.target.index]\n                  : inactive.fill}\n              d={`${rPath({\n                source: {\n                  ...m.source,\n                  radius: 100,\n                }, target: {\n                  ...m.target,\n                  radius: 100,\n                }\n              })}`}\n              onMouseEnter={() => setActive(m.source.index)}\n              onMouseLeave={() => setActive(undefined)}\n            >\n              <title>[{m.source.value}] {labels[m.source.index]} → [{m.target.value}] {labels[m.target.index]}</title>\n            </path>\n\n\n\n            </g>)\n        }\n      </g>\n      <g className=\"arcs\"\n        transform={`translate(${(width) / 2},${height / 2})`}>\n        {\n          chords.groups.map((arc, i: number) => {\n            return <><path\n              stroke={colorScheme[i]}\n              fill={colorScheme[i]}\n              onMouseEnter={() => setActive(i)}\n              onMouseLeave={() => setActive(undefined)}\n              d={thisArc(arc) ?? ''}\n\n            ></path>\n              <g transform={`rotate(${(arc.endAngle - ((arc.endAngle - arc.startAngle) / 2)) * 180 / Math.PI - 90}) translate(${outerRadius},0)`}>\n                <text x={0}\n                  y={-10}\n                  dy=\"0.55rem\"\n                  transform=\"rotate(90)\"\n                  textAnchor=\"middle\"\n                >{labels[arc.index]}</text>\n              </g>\n            </>;\n          }\n          )\n        }\n      </g>\n    </Base>\n  )\n}\n\nexport default Chord;\n","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport { abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau } from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n      y10 = y1 - y0,\n      x32 = x3 - x2,\n      y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n} // Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function () {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n    if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n    if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n        context.moveTo(r1 * cos(a0), r1 * sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n\n        if (r0 > epsilon) {\n          context.moveTo(r0 * cos(a1), r0 * sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      } // Or is it a circular or annular sector?\n      else {\n          var a01 = a0,\n              a11 = a1,\n              a00 = a0,\n              a10 = a1,\n              da0 = da,\n              da1 = da,\n              ap = padAngle.apply(this, arguments) / 2,\n              rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n              rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n              rc0 = rc,\n              rc1 = rc,\n              t0,\n              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n          if (rp > epsilon) {\n            var p0 = asin(rp / r0 * sin(ap)),\n                p1 = asin(rp / r1 * sin(ap));\n            if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n            if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n          }\n\n          var x01 = r1 * cos(a01),\n              y01 = r1 * sin(a01),\n              x10 = r0 * cos(a10),\n              y10 = r0 * sin(a10); // Apply rounded corners?\n\n          if (rc > epsilon) {\n            var x11 = r1 * cos(a11),\n                y11 = r1 * sin(a11),\n                x00 = r0 * cos(a00),\n                y00 = r0 * sin(a00),\n                oc; // Restrict the corner radius according to the sector angle.\n\n            if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n              var ax = x01 - oc[0],\n                  ay = y01 - oc[1],\n                  bx = x11 - oc[0],\n                  by = y11 - oc[1],\n                  kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                  lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n              rc0 = min(rc, (r0 - lc) / (kc - 1));\n              rc1 = min(rc, (r1 - lc) / (kc + 1));\n            }\n          } // Is the sector collapsed to a line?\n\n\n          if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n          else if (rc1 > epsilon) {\n              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n                  context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the outer ring just a circular arc?\n            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n          // Or perhaps it’s an annular sector collapsed due to padding?\n\n          if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n          else if (rc0 > epsilon) {\n              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n                  context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the inner ring just a circular arc?\n            else context.arc(0, 0, r0, a10, a00, cw);\n        }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}"],"sourceRoot":""}