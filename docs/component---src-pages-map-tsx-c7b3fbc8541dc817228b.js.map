{"version":3,"sources":["webpack:///../node_modules/d3-request/src/request.js","webpack:///../node_modules/d3-request/src/type.js","webpack:///../node_modules/d3-request/src/json.js","webpack:///../node_modules/d3-request/src/html.js","webpack:///../node_modules/d3-dsv/src/dsv.js","webpack:///../node_modules/d3-request/src/text.js","webpack:///../node_modules/d3-request/src/xml.js","webpack:///../node_modules/d3-dsv/src/csv.js","webpack:///../node_modules/d3-dsv/src/tsv.js","webpack:///../node_modules/d3-request/src/dsv.js","webpack:///../node_modules/d3-request/src/csv.js","webpack:///../node_modules/d3-request/src/tsv.js","webpack:///./src/pages/map.tsx","webpack:///../src/HistogramD3.ts","webpack:///../src/Histogram.tsx","webpack:///../src/utils/defaults.ts","webpack:///../src/colors/index.js","webpack:///../src/d3/attrs.ts","webpack:///../src/tip.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///../src/colors/filterRange.ts","webpack:///./src/components/seo.tsx","webpack:///../src/Legend.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/JoyplotD3.ts","webpack:///../src/JoyPlot.tsx","webpack:///../src/PieChartD3.ts","webpack:///../src/PieChart.tsx","webpack:///../src/grid.ts","webpack:///./src/data.ts","webpack:///../src/HorizontalHistogramD3.ts","webpack:///../src/HorizontalHistogram.tsx","webpack:///../src/utils/scales.ts","webpack:///../src/lineChartD3.ts","webpack:///../src/LineChart.tsx","webpack:///../src/ScatterPlotD3.ts","webpack:///../src/ScatterPlot.tsx","webpack:///../src/index.ts"],"names":["src_request","url","callback","request","mimeType","response","responseType","event","Object","d3_dispatch","headers","d3_collection","xhr","XMLHttpRequest","user","password","timeout","respond","o","result","status","type","responseText","hasResponse","call","e","XDomainRequest","test","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","name","value","toLowerCase","arguments","length","get","remove","set","data","send","post","method","open","has","setRequestHeader","each","overrideMimeType","error","fixCallback","on","abort","apply","Error","defaultMimeType","r","json","document","createRange","createContextualFragment","JSON","parse","EOL","xml","responseXML","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","i","stringify","join","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","rows","N","I","n","eof","eol","token","c","j","slice","replace","row","push","formatRow","formatValue","convert","object","customConverter","format","columnSet","create","forEach","column","inferColumns","concat","formatRows","csv","csvParse","tsv","tsvParse","src_dsv","_","responseOf","MapExample","_useState","useState","loading","setLoading","_useState2","geojson","setGeoJson","useEffect","collection","react_default","a","createElement","layout","seo","title","description","gatsby_browser_entry","to","src","height","width","histogramD3","svg","tipContainer","tipContent","props","y","scaleLinear","x","scaleBand","innerScaleBand","defaultProps","axis","defaultAxis","bar","groupMargin","margin","className","colorScheme","bins","counts","delay","domain","max","min","duration","grid","style","assign","lineStyle","fill","stroke","stroke-opacity","stroke-width","ticks","visible","left","top","color","dasharray","linecap","tip","tips","tipContentFn","d","el","newProps","this","mergeProps","_makeSvg","makeGrid","makeScales","container","append","attr","update","merge","selectAll","childNodes","getElementsByTagName","removeChild","_props","scale","Number","select","makeTip","valuesCount","reduce","b","appendDomainRange","yDomain","_props2","allCounts","prev","next","thisExtent","extent","hasOwnProperty","yRange","xAxisHeight","range","xAxis","yAxis","xAxisLabel","yAxisLabel","_drawScales","_props3","w","gridWidth","dataLabels","label","rangeRound","paddingInner","groupedMargin","bandwidth","barMargin","axisBottom","tickSize","undefined","tickValues","filter","dateFormat","tickFormat","v","timeFormat","Date","formatTickTime","yAxisWidth","dataSets","axisLeft","yTickSize","transition","attrs","m","barWidth","updateChart","groupData","_props4","colors","scaleOrdinal","gHeight","gridHeight","g","bars","enter","stackIndex","setIndex","findIndex","ix","html","fx","in","move","out","groupLabel","currentHeight","exit","xText","yText","gridX","gridY","_this","_props5","count","drawGrid","destroy","Histogram","_React$Component","chart","state","parentWidth","handleResize","_this2","elem","getDOMNode","ref","offsetWidth","setState","getChartState","componentDidMount","_this3","window","addEventListener","componentDidUpdate","_this$props","rest","children","objectWithoutPropertiesLoose_default","componentWillUnmount","removeEventListener","ReactDOM","render","_this4","react","React","rgb","darker","toString","toFixed","opacity","shape-rendering","curveCatmullRom","numberFormat","dy","text-anchor","transform","__webpack_exports__","selection","keys","k","__webpack_require__","d3_selection__WEBPACK_IMPORTED_MODULE_0__","pageX","pageY","selector","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","propTypes","PropTypes","string","isRequired","func","module","exports","require","default","Color","hsl","array","luminosity","index","self","indexOf","sort","Math","random","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","arrayOf","legendIconStyle","cursor","display","listStyle","Legend","_ref$theme","theme","onSelect","scheme","labels","react__WEBPACK_IMPORTED_MODULE_2__","active","key","backgroundColor","border","onClick","Header","siteTitle","index_es","position","variant","Layout","Fragment","flexGrow","padding","paddingTop","getFullYear","href","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","shape","joyPlotD3","yOuterScaleBand","joyTitle","containers","thisCounts","p","item","getBins","Array","from","Set","_props6","yLabels","yOuterBounds","_props7","_props8","_props9","borderColors","thisMax","joyLabel","_drawGrid","_props10","axisWidth","offset","make_x_gridlines","make_y_gridlines","_props11","lineData","pieChartD3","donutWidth","displayFn","previousData","dataSet","drawChartBg","drawCharts","outerRadius","_this$props2","_this$props2$donutWid","radius","innerRadius","_this$props3","_this$props3$donutWid","_this$props4","drawChart","_this$props5","tau","PI","bgArc","arc","startAngle","endAngle","background","_this$props6","thisPie","pie","arcs","thisArc","path","_current","attrTween","interpolate","arcTween","path2","_height","_width","centroid","PieChart","makeXGridlines","makeYGridlines","data2","filterRange","horizontalHistogramD3","xDomain","xRange","h","_drawBars","info","drawDataSet","barHeight","setCount","barItem","all","multiLineOffset","currentWidth","gy","HorizontalHistogram","histogram","componentWillReceiveProps","buildScales","scaleLog","clamp","scaleTime","lineChartD3","xParseTime","xFormatTime","lineProps","curveType","show","strokeDashArray","strokeDashOffset","pointProps","easeCubic","datumProps","line","point","_buildScales","lineContainer","_createLines","_drawDataPointSet","getYAxisWidth","pointContainer","points","dx","ys","xs","getXAxisHeight","datum","parsedY","parsedX","_drawLines","curve","drawAreas","area","y0","y1","_buildScales2","timeParse","LineChart","scatterPlotD3","yScale","xScale","domainByTrait","choices","legendWidth","xSize","ySize","_drawLegend","split","legend","cell","_drawPoints","traits","nx","cross","plotCell","values","distModels","trait","ScatterPlot","_Component","chartWidth","chartHeight","innerHeight","getBoundingClientRect","Component","src_HorizontalHistogram","src_LineChart"],"mappings":"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","file":"component---src-pages-map-tsx-c7b3fbc8541dc817228b.js","sourcesContent":["import {map} from \"d3-collection\";\nimport {dispatch} from \"d3-dispatch\";\n\nexport default function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n","import request from \"./request\";\n\nexport default function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n","import type from \"./type\";\n\nexport default type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n","import type from \"./type\";\n\nexport default type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import request from \"./request\";\n\nexport default function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request) {\n    return parse(request.responseText, row);\n  };\n}\n","import {csvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/csv\", csvParse);\n","import {tsvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/tab-separated-values\", tsvParse);\n","import { json } from 'd3-request';\nimport { Link } from 'gatsby';\nimport { FeatureCollection } from 'geojson';\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Map } from '../../../src';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data } from '../data';\n\nconst MapExample = () => {\n  const [loading, setLoading] = useState(true);\n\n  const [geojson, setGeoJson] = useState<FeatureCollection<any, any>>(null);\n  useEffect(() => {\n    const url = 'https://opendata.arcgis.com/datasets/8d3a9e6e7bd445e2bdcc26cdf007eac7_3.geojson';\n    json(url, (error, collection) => {\n      if (error) { throw error; }\n      setGeoJson(collection);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return <div>loading</div>;\n  }\n  return (\n    <Layout>\n      <SEO title=\"Histogram\" description=\"\" />\n      <h1>Map</h1>\n      <Link to=\"/\">Go back to the homepage</Link>\n      <div>\n        <Map\n          data={data}\n          geojson={geojson}\n          height={400}\n          width={400} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default MapExample;\n\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { select } from 'd3-selection';\nimport { timeFormat } from 'd3-time-format';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridHeight,\n  gridWidth,\n  xAxisHeight,\n  yAxisWidth,\n} from './grid';\nimport {\n  IAxis,\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n} from './Histogram';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  lineStyle,\n} from './utils/defaults';\n\nconst formatTickTime = (axis: IAxis) => (v: string) => {\n  return timeFormat(axis.dateFormat)(new Date(v));\n};\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const histogramD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let tipContent;\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n  // @TODO make this a prop\n  const stacked = false;\n\n  const defaultProps: IHistogramProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0.1,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: {\n      x: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  let props: IHistogramProps;\n\n  const HistogramD3 = {\n    /**\n     * Initialization\n     */\n    create(el: HTMLElement, newProps: Partial<IHistogramProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      this.container = svg\n        .append('g')\n        .attr('class', 'histogram-container');\n\n      this.update(el, newProps);\n    },\n\n    mergeProps(newProps: Partial<IHistogramProps>) {\n      props = merge<IHistogramProps>(defaultProps, newProps);\n      props.data = newProps.data;\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: HTMLElement) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n      const scale = {\n        x: 1 - (margin.left / Number(width)),\n        y: 1 - (margin.top / height),\n      };\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top}) scale(${scale.x},${scale.y})`);\n\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData): void {\n      const yDomain: number[] = [];\n      const { domain, margin, height } = props;\n      const allCounts: number[] = data.reduce((prev: number[], next): number[] => {\n        return [...prev, ...next.map((n) => n.value)];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : thisExtent[1];\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : thisExtent[0];\n      const yRange = [height - (margin.top * 2) - xAxisHeight(props.axis), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    makeScales() {\n      this.xAxis = svg.append('g').attr('class', 'x-axis');\n      this.yAxis = svg.append('g').attr('class', 'y-axis');\n\n      this.xAxisLabel = svg.append('g');\n      this.yAxisLabel = svg.append('g');\n    },\n\n    /**\n     * Draw scales\n     */\n    _drawScales(data: IHistogramData) {\n      const { axis, margin, height } = props;\n      const valuesCount = this.valuesCount(data.counts);\n      const w = gridWidth(props);\n\n      const dataLabels = data.counts.map((c) => c.label);\n\n      x\n        .domain(data.bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      if (stacked) {\n        innerScaleBand\n          .domain(['main'])\n          .rangeRound([0, x.bandwidth()])\n          .paddingInner(this.barMargin());\n      } else {\n        innerScaleBand\n          .domain(dataLabels)\n          .rangeRound([0, x.bandwidth()])\n          .paddingInner(this.barMargin());\n      }\n      const xAxis = axisBottom<string>(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n      if (axis.x.scale === 'TIME' && axis.x.dateFormat) {\n        xAxis.tickFormat(formatTickTime(axis.x));\n      }\n\n      this.xAxis\n        .attr('transform', 'translate(' + (yAxisWidth(axis) + axis.y.style['stroke-width']) + ',' +\n          (height - xAxisHeight(props.axis) - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      this.appendDomainRange(y, this.dataSets);\n\n      const yAxis = axisLeft(y).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n      if (axis.y.scale === 'TIME' && axis.y.dateFormat) {\n        yAxis.tickFormat(timeFormat(axis.y.dateFormat));\n      }\n      this.yAxis\n        .attr('transform', 'translate(' + yAxisWidth(axis) + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      bins: string[],\n      groupData: IGroupData,\n    ) {\n      const { axis, height, width, margin, delay, duration, tip } = props;\n      const barWidth = this.barWidth();\n\n      // const borderColors = set.borderColors ? d3.scaleOrdinal(set.borderColors) : null;\n      const colors = scaleOrdinal(props.colorScheme);\n      const gHeight = gridHeight(props);\n\n      const g = this.container\n        .selectAll('g')\n        .data(groupData);\n\n      const bars = g.enter()\n        .append('g')\n        .merge(g)\n        .attr('transform', (d) => {\n          const xdelta = yAxisWidth(axis)\n            + axis.y.style['stroke-width']\n            + x(d[0].label);\n          return `translate(${xdelta}, 0)`;\n        })\n        .selectAll('rect')\n        .data((d) => d);\n\n      // Don't ask why but we must reference tipContentFn as props.tipContentFn otherwise\n      // it doesn't update with props changes\n      const onMouseOver = (d: IGroupDataItem, i: number) => {\n        const ix = bins.findIndex((b) => b === d.label);\n        tipContent.html(() => props.tipContentFn(bins, ix, d.value));\n        tip.fx.in(tipContainer);\n      };\n\n      bars\n        .enter()\n        .append('rect')\n        .attr('height', 0)\n        .attr('y', (d: IGroupDataItem, stackIndex: number): number => {\n          const setIndex = bins.findIndex((b) => b === d.label);\n          const thisSetData = groupData[setIndex];\n          // @TODO stack charts\n          // const offset = stackIndex > 0\n          //   ? y(10)\n          //   : 0;\n          const offset = 0;\n          return gHeight - offset;\n        })\n        .attr('class', 'bar')\n        .on('mouseover', onMouseOver)\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .merge(bars)\n        .attr('x', (d) => {\n          return innerScaleBand(d.groupLabel);\n        })\n        .attr('width', (d) => barWidth)\n        .attr('fill', (d, i) => colors(i))\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        .attr('y', (d: IGroupDataItem, stackIndex: number): number => {\n          // const setIndex = bins.findIndex((b) => b === d.label);\n          // const thisSetData = groupData[setIndex];\n          // @TODO stack charts\n          // const offset = stackIndex > 0\n          //   ? 5\n          //   : 0;\n          const offset = 0;\n          return y(d.value + offset);\n        })\n        // Hide bar's bottom border\n        .attr('stroke-dasharray',\n          (d: IGroupDataItem): string => {\n            const currentHeight = gHeight - (y(d.value));\n            return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n          })\n        .attr('height', (d: IGroupDataItem): number => gHeight - (y(d.value)));\n\n      bars.exit().remove();\n      g.exit().remove();\n\n      const xText = this.xAxisLabel\n        .selectAll('text')\n        .data([axis.x.label]);\n\n      xText.enter().append('text')\n        .attr('class', 'x-axis-label')\n        .merge(xText)\n        .attr('transform',\n          'translate(' + (Number(width) / 2) + ' ,' +\n          ((height - xAxisHeight(props.axis) - (margin.left * 2)) + axis.x.margin) + ')')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n\n      const yText = this.yAxisLabel\n        .selectAll('text')\n        .data([axis.y.label]);\n\n      yText.enter().append('text')\n        .attr('class', 'y-axis-label')\n        .merge(yText)\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0)\n        .attr('x', 0 - (gHeight / 2 - (margin.top * 2)))\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n    },\n\n    makeGrid() {\n      this.gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      this.gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n    /**\n     * Update chart\n     */\n    update(el: HTMLElement, newProps: IHistogramProps) {\n      if (!props.data) {\n        return;\n      }\n      this.mergeProps(newProps);\n      if (!props.data.bins) {\n        return;\n      }\n\n      const { data, visible } = props;\n      this.dataSets = [] as IGroupData;\n\n      data.counts.forEach((count) => {\n        count.data.forEach((value, i) => {\n          if (!this.dataSets[i]) {\n            this.dataSets[i] = [];\n          }\n          this.dataSets[i].push({\n            groupLabel: count.label,\n            label: data.bins[i],\n            value: visible[data.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n          } as IGroupDataItem);\n        });\n      });\n\n      this._drawScales(props.data);\n      drawGrid(x, y, this.gridX, this.gridY, props, this.valuesCount(data.counts));\n      this.updateChart(data.bins, this.dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HistogramD3;\n});\n","import { rgb } from 'd3-color';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { histogramD3 } from './HistogramD3';\nimport {\n  axis as defaultAxis,\n  lineStyle,\n  stroke,\n} from './utils/defaults';\nimport Omit from './utils/types';\n\nexport interface IChartAdaptor {\n  create: (el: Element | Text, props: { [key: string]: any }) => void;\n  update: (el: Element | Text, props: { [key: string]: any }) => void;\n  destroy: (el: Element | Text) => void;\n}\n\nexport interface IHistogramBar {\n  groupMargin?: number;\n  margin?: number;\n  width?: number;\n}\n\nexport interface IGrid {\n  x?: {\n    height?: number;\n    ticks?: number;\n    visible?: boolean;\n    style?: ISVGLineStyle;\n  };\n  y?: {\n    style?: ISVGLineStyle;\n    ticks?: number;\n    visible?: boolean;\n  };\n}\n\nexport interface IStroke {\n  color: ((d, i: number, colors: (i: number) => string) => string) | string;\n  dasharray: string;\n  linecap: 'butt' | 'round' | 'square';\n  width: number;\n}\n\nexport interface IAxes {\n  y: IAxis;\n  x: IAxis;\n}\nexport interface IHistogramDataSet {\n  borderColors?: string[];\n  colors?: string[];\n  label: string;\n  data: number[];\n}\n\nexport interface IHistogramData {\n  bins: string[];\n  counts: IHistogramDataSet[];\n  colorScheme?: string[];\n  title?: string;\n}\n\nexport interface IDomain {\n  max: number;\n  min: number;\n}\n\nexport interface IMargin {\n  top?: number;\n  left?: number;\n  right?: number;\n  bottom?: number;\n}\nexport interface IHistogramProps {\n  axis: IAxes;\n  bar?: IHistogramBar;\n  className?: string;\n  data: IHistogramData;\n  delay?: number;\n  duration?: number;\n  colorScheme?: string[];\n  domain?: IDomain;\n  grid?: IGrid;\n  height: number;\n  margin?: IMargin;\n  stroke?: IStroke;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<string>;\n  visible?: { [key: string]: boolean };\n  width: number | string;\n}\n\ntype Scale = 'LINEAR' | 'TIME' | 'LOG';\n\nexport interface ISVGLineStyle {\n  'stroke': string;\n  'fill': string;\n  'opacity': number;\n  'stroke-width': number;\n  'stroke-opacity': number;\n  'shape-rendering': string;\n  'visible': boolean;\n}\n\ninterface ISVGTextStyle {\n  fill?: string;\n  'font-size'?: string;\n  dy?: string | number;\n  'stroke-opacity'?: number;\n  'text-anchor'?: string;\n  transform?: string;\n  x?: string | number;\n  y?: string | number;\n}\n\nexport interface IChartState {\n  parentWidth?: number;\n}\n\nexport interface IAxis {\n  dateFormat: string;\n  numberFormat: string;\n  ticks: number;\n  tickValues: number[];\n  height: number;\n  label: string;\n  margin: number;\n  scale: Scale;\n  style: ISVGLineStyle;\n  text: {\n    style: ISVGTextStyle;\n  };\n  width: number;\n  tickSize: number;\n  visible: boolean;\n}\n\nexport type TipContentFn<T> = (bins: T[], i: number, d: number, groupTitle?: string) => string;\n\n/**\n * Histogram component\n */\nclass Histogram extends React.Component<IHistogramProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Omit<IHistogramProps, 'data'> = {\n    axis: defaultAxis,\n    bar: {\n      margin: 0,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      ...stroke,\n      color: (d, i, colors) => rgb(colors(i)).darker(1).toString(),\n    },\n    tipContentFn: (bins: string[], i, d) =>\n      bins[i] + '<br />' + d.toFixed(2),\n    visible: {},\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IHistogramProps) {\n    super(props);\n    this.chart = histogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IHistogramProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default Histogram;\n","import { curveCatmullRom } from 'd3-shape';\n\nimport {\n  IAxes,\n  IStroke,\n} from '../';\nimport { ISVGLineStyle } from '../Histogram';\nimport { ILineProps } from '../LineChart';\n\nexport const lineStyle: ISVGLineStyle = {\n  'fill': '#000',\n  'opacity': 1,\n  'shape-rendering': 'auto',\n  'stroke': '#000',\n  'stroke-opacity': 1,\n  'stroke-width': 1,\n  'visible': true,\n};\n\nexport const stroke: IStroke = {\n  color: '#000',\n  dasharray: '0',\n  linecap: 'butt',\n  width: 1,\n};\n\nexport const line: ILineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: '#000',\n    show: true,\n  },\n  show: true,\n  stroke: '#000',\n  strokeDashArray: '0',\n  strokeDashOffset: 0,\n};\n\nexport const axis: IAxes = {\n  x: {\n    dateFormat: '',\n    height: 20,\n    label: 'X Axis',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        'dy': '.35em',\n        'text-anchor': 'start',\n        'transform': 'rotate(90)',\n        'x': 0,\n        'y': 0,\n      },\n    },\n    tickSize: 0,\n    tickValues: [],\n    ticks: 3,\n    visible: true,\n    width: 50,\n  },\n  y: {\n    dateFormat: '',\n    height: 20,\n    label: 'Y Axis!',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        fill: '#666',\n      },\n    },\n    tickSize: 20,\n    tickValues: [],\n    ticks: 3,\n    visible: true,\n    width: 50,\n  },\n};","export default ['#4bbcad',\n  '#d54539',\n  '#5ab94d',\n  '#8a5cd3',\n  '#a4b243',\n  '#ba5ccd',\n  '#54995c',\n  '#cf47a1',\n  '#d29f3e',\n  '#5c6fda',\n  '#c36528',\n  '#5fa6dc',\n  '#d74770',\n  '#7d7430',\n  '#8a529e',\n  '#df9273',\n  '#5f74b8',\n  '#ac5450',\n  '#d192d7',\n  '#b26088'];\n","import { ISVGLineStyle } from '../Histogram';\n\n/**\n * Apply style object to a d3 selection\n * @param {Object} selection D3 selection\n * @param {Object} style Css styling\n * @return {Object} selection\n */\nexport default (selection, style: ISVGLineStyle) => {\n  Object.keys(style).forEach((k: string) => {\n    selection.attr(k, style[k]);\n  });\n  return selection;\n};\n","import { event } from 'd3-selection';\nimport { select } from 'd3-selection';\n\nexport default {\n  fx: {\n    in: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n      container.transition()\n        .duration(200)\n        .style('opacity', 0.9);\n    },\n    move: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n    },\n    out: (container) => {\n      container.transition()\n        .duration(100)\n        .style('opacity', 0);\n    },\n  },\n};\n\nexport const makeTip = (selector, tipContainer): { tipContainer: any, tipContent: any } => {\n  if (tipContainer) {\n    // Chart could be rebuilt - remove old tip\n    tipContainer.remove();\n  }\n  tipContainer = select(selector).append('div')\n    .attr('class', 'tooltip top')\n    .style('opacity', 0);\n\n  tipContainer.append('div')\n    .attr('class', 'tooltip-arrow');\n  return {\n    tipContainer,\n    tipContent: tipContainer.append('div')\n      .attr('class', 'tooltip-inner'),\n  };\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { scaleOrdinal } from 'd3-scale';\nimport * as React from 'react';\n\nimport colorScheme from './colors';\nimport { IHistogramDataSet } from './Histogram';\n\ninterface IProps {\n  className?: string;\n  theme?: string[];\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  onSelect: (label: string) => void;\n  visible: { [key: string]: boolean };\n}\n\nconst legendIconStyle = {\n  cursor: 'pointer',\n  display: 'inline-block',\n  height: '1rem',\n  margin: '0.25rem 0.5rem',\n  width: '1rem',\n};\n\nconst listStyle = {\n  listStyle: 'none',\n};\n\nconst Legend: React.SFC<IProps> = ({ className, theme = colorScheme, data, onSelect, visible }) => {\n  const scheme: any = scaleOrdinal(theme);\n  const labels = data.bins;\n  return (\n    <div className={className}>\n      <ul style={listStyle}>\n        {\n          labels.map((label) => {\n            const active = (visible.hasOwnProperty(label) && visible[label]) || !visible.hasOwnProperty(label);\n            return (\n              <li key={label}>\n                <div style={{\n                  ...legendIconStyle,\n                  backgroundColor: active ? scheme(label) : '#FFF',\n                  border: '2px solid ' + scheme(label),\n                }}\n                  onClick={() => onSelect(label)}>\n                </div> {label}\n              </li>\n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default Legend;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"histogram\">Histogram</Link></Button>\n      <Button><Link to=\"line\">Line Chart</Link></Button>\n      <Button><Link to=\"pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n} from './Histogram';\nimport { IJoyPlotProps } from './JoyPlot';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  lineStyle,\n} from './utils/defaults';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const joyPlotD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let tipContent;\n  let props: IJoyPlotProps;\n  let dataSets: IGroupData[];\n  const yOuterScaleBand = scaleBand();\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisLeft(yOuterScaleBand)\n      .ticks(ticks);\n  }\n\n  const defaultProps: IJoyPlotProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [{\n      bins: [],\n      counts: [],\n    }],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: {\n      x: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins, i, d, joyTitle): string =>\n      joyTitle + ': ' +\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const JoyPlotD3 = {\n    /**\n     * Initialization\n     * @param {Node} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: HTMLElement, newProps: Partial<IJoyPlotProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      this.containers = props.data.map((d, i) => svg\n        .append('g')\n        .attr('class', `histogram-container-${i}`),\n      );\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: Partial<IJoyPlotProps>) {\n      props = merge<IJoyPlotProps>(defaultProps, newProps);\n      props.data = newProps.data;\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Dom} el Dom container node\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     * @param {Object} counts Histogram data set values\n     * @return {Number} count\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData[]): void {\n      const yDomain: number[] = [];\n      const { domain } = props;\n\n      const allCounts: number[] = data.reduce((prev, next) => {\n        const thisCounts: number[] = next.reduce((p, n) => {\n          return [...p, ...n.map((item) => item.value)];\n        }, [] as number[]);\n        return [...prev, ...thisCounts];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : thisExtent[1];\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : thisExtent[0];\n      const yRange = [yOuterScaleBand.bandwidth(), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    yAxisWidth() {\n      const { axis } = props;\n      return axis.y.label === ''\n        ? axis.y.width\n        : axis.y.width + 30;\n    },\n\n    xAxisHeight() {\n      const { axis } = props;\n      return axis.x.label === ''\n        ? axis.x.height\n        : axis.x.height + 30;\n    },\n\n    makeScales() {\n      const { axis, margin, height, width } = props;\n      this.xAxis = svg.append('g').attr('class', 'x-axis');\n      this.yAxis = svg.append('g').attr('class', 'y-axis');\n\n      if (axis.x.label !== '') {\n        svg.append('text')\n          .attr('class', 'x-axis-label')\n          .attr('transform',\n            'translate(' + (Number(width) / 2) + ' ,' +\n            ((height - this.xAxisHeight() - (margin.left * 2)) + 10 + axis.x.margin) + ')')\n          .style('text-anchor', 'middle')\n          .text(axis.x.label);\n      }\n\n      if (axis.y.label !== '') {\n        svg.append('text')\n          .attr('class', 'y-axis-label')\n          .attr('transform', 'translate(0, -' + this.gridHeight() + ')rotate(-90)')\n          .attr('y', 0 - margin.left)\n          .attr('x', 0 - (height / 2 - (margin.top * 2)))\n          .attr('dy', '1em')\n          .style('text-anchor', 'middle')\n          .text(axis.y.label);\n      }\n    },\n\n    getBins() {\n      return props.data.reduce((prev, next) => {\n        return Array.from(new Set(prev.concat(next.bins)));\n      }, [] as string[]);\n    },\n\n    /**\n     * Draw scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data: IHistogramData[]) {\n      const { bar, domain, margin, width, height, axis } = props;\n      const valuesCount = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? c : prev;\n      }, 0);\n      const w = this.gridWidth();\n\n      let xAxis;\n      const dataLabels = data[0].counts.map((c) => c.label);\n\n      const bins = this.getBins();\n      x\n        .domain(bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      innerScaleBand\n        .domain(dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(this.barMargin());\n\n      xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n\n      this.xAxis\n        .attr('transform', 'translate(' + (this.yAxisWidth() + axis.y.style['stroke-width']) + ',' +\n          (height - this.xAxisHeight() - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      const yLabels = data.map((d) => d.title);\n      const yOuterBounds: [number, number] = [height - (margin.top * 2) - this.xAxisHeight(), 0];\n      yOuterScaleBand.domain(yLabels)\n        .rangeRound(yOuterBounds);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft(yOuterScaleBand).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n\n      this.yAxis\n        .attr('transform', 'translate(' + this.yAxisWidth() + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      const { ...xLabelStyle } = axis.x.text.style;\n      const { ...yLabelStyle } = axis.y.text.style;\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     * @return {number} width\n     */\n    gridWidth(): number {\n      const { axis, width, margin } = props;\n      return Number(width) - (margin.left * 2) - this.yAxisWidth();\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     * @return {number} width\n     */\n    gridHeight(): number {\n      const { height, margin, axis } = props;\n      return height - (margin.top * 2) - this.xAxisHeight();\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     * @return {Number} Margin\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    /**\n     * Calculate the bar width\n     * @return {number} bar width\n     */\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      groupData: IGroupData[],\n    ) {\n      const bins = this.getBins();\n      const { height, width, margin, bar, delay, duration,\n        axis, stroke, tip, tipContentFn } = props;\n      const barWidth = this.barWidth();\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const borderColors = scaleOrdinal(['#FFF']);\n\n      const yAxisWidth = this.yAxisWidth();\n      const groupedMargin = this.groupedMargin();\n\n      const maxItems = groupData.reduce((prev, next) => {\n        const thisMax = next.reduce((p, n) => n.length > p ? n.length : p, 0);\n        return thisMax > prev ? thisMax : prev;\n      }, 0);\n      groupData.forEach((data, i) => {\n        const joyTitle = props.data[i].title;\n        const g = this.containers[i]\n          .selectAll('g')\n          .data(data);\n\n        const bars = g.enter()\n          .append('g')\n          .merge(g)\n          .attr('transform', (d) => {\n            const xdelta = yAxisWidth\n              + axis.y.style['stroke-width']\n              + x(d[0].label);\n\n            const ydelta = yOuterScaleBand(d[0].joyLabel);\n            return `translate(${xdelta}, ${ydelta})`;\n          })\n          .selectAll('rect')\n          .data((d) => d);\n\n        bars\n          .enter()\n          .append('rect')\n          .attr('height', 0)\n          .attr('y', (d: IGroupDataItem): number => yOuterScaleBand.bandwidth())\n\n          .attr('class', 'bar')\n          .attr('x', (d) => innerScaleBand(d.groupLabel))\n          .attr('width', (d) => barWidth)\n          .attr('fill', (d, ix) => colors(ix))\n\n          .on('mouseover', (d: IGroupDataItem) => {\n            const ix = bins.findIndex((b) => b === d.label);\n            tipContent.html(() => tipContentFn(bins, ix, d.value, joyTitle));\n            tip.fx.in(tipContainer);\n          })\n          .on('mousemove', () => tip.fx.move(tipContainer))\n          .on('mouseout', () => tip.fx.out(tipContainer))\n          .merge(bars)\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('y', (d: IGroupDataItem): number => y(d.value))\n          .attr('stroke', (d, ix) => {\n            if (borderColors) {\n              return borderColors(ix);\n            }\n          })\n          .attr('shape-rendering', 'crispEdges')\n          .attr('stroke-width', stroke.width)\n          .attr('stroke-linecap', stroke.linecap)\n\n          // Hide bar's bottom border\n          .attr('stroke-dasharray',\n            (d: IGroupDataItem): string => {\n              const currentHeight = yOuterScaleBand.bandwidth() - y(d.value);\n              return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n            })\n          .attr('height', (d: IGroupDataItem): number =>\n            yOuterScaleBand.bandwidth() - y(d.value),\n          );\n\n        g.exit().remove();\n      });\n    },\n\n    makeGrid() {\n      this.gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      this.gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     * @param {Object} props Props\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin, bar } = props;\n      const ticks = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? prev : c;\n      }, 0);\n      const axisWidth = axis.y.style['stroke-width'];\n\n      const offset = {\n        x: this.yAxisWidth() + axisWidth,\n        y: this.gridHeight(),\n      };\n\n      if (grid.x.visible) {\n        // Add the X gridlines\n        this.gridX.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        this.gridX.call(make_x_gridlines(get(grid, 'x.ticks', ticks))\n          .tickSize(-height + this.xAxisHeight() + (margin.top * 2))\n          .tickFormat(() => ''));\n\n        attrs(this.gridX.selectAll('.tick line'), grid.x.style);\n        attrs(this.gridX.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n      }\n\n      if (grid.y.visible) {\n        // add the Y gridlines\n        this.gridY.attr('transform', 'translate(' + (this.yAxisWidth() + axisWidth) + ', 0)')\n          .transition()\n          .call(make_y_gridlines(get(grid, 'y.ticks', ticks))\n            .tickSize(-width + (margin.left * 2) + this.yAxisWidth())\n            .tickFormat(() => ''),\n          );\n\n        attrs(this.gridY.selectAll('.tick line'), grid.y.style);\n\n        // Hide the first horizontal grid line to show axis\n        this.gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n          .attr('display', 'none');\n        attrs(this.gridY.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     * @param {HTMLElement} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: HTMLElement, newProps: IJoyPlotProps) {\n      if (!props.data) {\n        return;\n      }\n      this.mergeProps(newProps);\n      const { data, visible } = props;\n\n      dataSets = data.map((d) => {\n        const lineData = [] as IGroupData;\n        d.counts.forEach((count) => {\n          count.data.forEach((value, i) => {\n            if (!lineData[i]) {\n              lineData[i] = [];\n            }\n            lineData[i].push({\n              groupLabel: count.label,\n              joyLabel: d.title,\n              label: d.bins[i],\n              value: visible[d.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n            } as IGroupDataItem);\n          });\n        });\n        return lineData;\n      });\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this.updateChart(dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return JoyPlotD3;\n});\n","import { rgb } from 'd3-color';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IChartState,\n  IDomain,\n  IGrid,\n  IHistogramBar,\n  IHistogramData,\n  IMargin,\n  IStroke,\n  TipContentFn,\n} from './Histogram';\nimport { joyPlotD3 } from './JoyplotD3';\nimport {\n  axis as defaultAxis,\n  lineStyle,\n  stroke,\n} from './utils/defaults';\n\nexport interface IJoyPlotProps {\n  axis?: IAxes;\n  bar?: IHistogramBar;\n  className?: string;\n  data: IHistogramData[];\n  delay?: number;\n  duration?: number;\n  colorScheme?: string[];\n  domain?: IDomain;\n  grid?: IGrid;\n  height: number;\n  margin?: IMargin;\n  stroke?: IStroke;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<string>;\n  visible?: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * Histogram component\n */\nclass Histogram extends React.Component<IJoyPlotProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Partial<IJoyPlotProps> = {\n    axis: defaultAxis,\n    bar: {\n      margin: 0,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      ...stroke,\n      color: (d, i, colors) => rgb(colors(i)).darker(1).toString(),\n      width: 1,\n    },\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IJoyPlotProps) {\n    super(props);\n    this.chart = joyPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IJoyPlotProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default Histogram;\n","import 'd3-transition';\n\nimport { interpolate } from 'd3-interpolate';\nimport { scaleOrdinal } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport {\n  arc,\n  pie,\n  PieArcDatum,\n} from 'd3-shape';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\n\nimport colorScheme from './colors';\nimport {\n  IChartAdaptor,\n  IHistogramDataSet,\n} from './Histogram';\nimport {\n  IPieChartProps,\n  IPieDataItem,\n} from './PieChart';\nimport tips, { makeTip } from './tip';\n\nexport const pieChartD3 = ((): IChartAdaptor => {\n\n  let svg;\n  let tipContainer;\n  let tipContent;\n\n  const defaultProps: IPieChartProps = {\n    backgroundColor: '#ddd',\n    className: 'piechart-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    donutWidth: 0,\n    height: 200,\n    labels: {\n      display: true,\n      displayFn: (d, ix) => d.value,\n    },\n    margin: {\n      left: 10,\n      top: 10,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number, groupLabel): string => {\n      return groupLabel + ': ' + bins[i] + '<br />' + d;\n    },\n    visible: {},\n    width: 200,\n  };\n\n  const PieChartD3 = {\n\n    create(el: HTMLElement, props: Partial<IPieChartProps> = {}) {\n      this.props = merge(defaultProps, { ...props });\n      this.previousData = props.data.counts.map((set: IHistogramDataSet, setIndex: number) => {\n        return set.data\n          .map((count, i) => ({\n            count,\n            groupLabel: set.label,\n            label: props.data.bins[i],\n          }));\n      });\n      this._makeSvg(el);\n      this.containers = [];\n      this.previousData.forEach((dataSet, i) => {\n        this.drawChartBg(this.props.data, i);\n      });\n\n      this.update(el, props);\n    },\n\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = this.props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n\n      const r = makeTip(this.props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    update(el: HTMLElement, props: Partial<IPieChartProps>) {\n      if (!props.data) {\n        return;\n      }\n      this.props = merge(defaultProps, props);\n      if (props.colorScheme) {\n        this.props.colorScheme = props.colorScheme;\n      }\n      // this._makeSvg(el);\n      if (!this.props.data.bins) {\n        return;\n      }\n\n      this.drawCharts();\n    },\n\n    outerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = this.props;\n\n      const radius = Math.min(width, height) / 2;\n      return donutWidth === 0\n        ? radius - 10\n        : radius - 10 - (setIndex * (donutWidth + 10));\n    },\n\n    innerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = this.props;\n      const radius = Math.min(width, height) / 2;\n      return donutWidth === 0\n        ? 0\n        : radius - 10 - donutWidth - (setIndex * (donutWidth + 10));\n    },\n\n    drawCharts() {\n      const { data, visible } = this.props;\n      this.dataSets = data.counts.map((set: IHistogramDataSet) => {\n        return set.data\n          .map((count, i) => ({\n            count: visible[data.bins[i]] !== false ? count : 0,\n            groupLabel: set.label,\n            label: data.bins[i],\n          }));\n      });\n\n      this.dataSets.forEach((dataSet, i) => {\n        const theme = get(data.counts[i], 'colors', this.props.colorScheme);\n        this.drawChart(dataSet, i, data.bins, theme);\n      });\n      this.previousData = this.dataSets;\n    },\n\n    drawChartBg(data, i) {\n      const { backgroundColor, width, height } = this.props;\n      const tau = 2 * Math.PI; // http://tauday.com/tau-manifesto\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n      const bgArc = arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius)\n        .startAngle(0)\n        .endAngle(tau);\n      const container = svg\n        .append('g')\n        .attr('class', 'pie-bg');\n      const background = container.append('path')\n        .attr('class', 'pie-background')\n        .style('fill', backgroundColor);\n      background.enter()\n        .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')')\n        .attr('d', bgArc);\n\n      background.merge(background);\n\n      if (!this.containers[i]) {\n        this.containers[i] = svg\n          .append('g')\n          .attr('class', 'pie-container');\n      }\n    },\n\n    drawChart(data, i: number, bins: string[], theme: string[]) {\n      const { labels, width, height, tip, tipContentFn } = this.props;\n      // Stack multiple charts in concentric circles\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n\n      // Function to calculate pie chart paths from data\n      const thisPie = pie()\n        .sort(null)\n        .value((d: any) => {\n          return d.count;\n        });\n\n      // Formated pie chart arcs based on previous current data\n      const arcs = thisPie(this.previousData[i]);\n\n      const colors = scaleOrdinal(theme);\n\n      const thisArc = arc()\n        .outerRadius(outerRadius)\n        .innerRadius(innerRadius);\n\n      const path = this.containers[i].selectAll('path')\n        .data(thisPie(data));\n\n      const g = path.enter().append('g')\n        .attr('class', 'arc');\n\n      g.append('path')\n        .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')')\n        .attr('stroke', '#FFF')\n        .attr('fill', (d, j) => colors(j))\n\n        .each(function (d, j) { this._current = arcs[j]; }) // store the initial angles\n        .attr('d', thisArc)\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .style('opacity', 0)\n        .transition()\n        .duration(500)\n        .style('opacity', 1);\n\n      // Fade in when adding (merge)\n      path\n        .merge(path)\n\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .transition()\n        .delay(400)\n        .duration(500)\n        .attr('fill', (d, j) => colors(j))\n        .attrTween('d', arcTween(thisArc));\n\n      const path2 = this.containers[i].selectAll('text.label')\n        .data(thisPie(data));\n      const gLabel = path2.enter().append('text')\n        .attr('class', 'label')\n        .each(function () {\n          // Store initial offset incase we change chart heights.\n          this._height = height;\n          this._width = width;\n        })\n        .attr('transform', function (d) {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (this._width / 2);\n          const y = centroid[1] + (this._height / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .each(function (d, j) {\n          // Store current value to work out fx transition opacities\n          this._current = d;\n        })\n        .text((d, ix) => {\n          if (d.value === 0) {\n            return '';\n          }\n          return labels.displayFn(d, ix);\n        });\n\n      path2\n        .merge(path2)\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .transition()\n        .attr('transform', function (d) {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (this._width / 2);\n          const y = centroid[1] + (this._height / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .transition()\n        .duration(500)\n        .style('opacity', (d, ix, c) => {\n          // Only show if the new value is not 0 and labels are set to be displayed\n          return labels.display === false || d.data.count === 0 || c[ix]._current.value === 0 ? 0 : 1;\n        });\n\n      path2.exit().remove();\n\n      path.exit().transition()\n        .duration(500)\n        .style('opacity', 0).remove();\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n\n  return PieChartD3;\n});\n\n// Returns a tween for a transition’s \"d\" attribute, transitioning any selected\n// arcs from their current angle to the specified new angle.\nfunction arcTween(thisArc) {\n  return function (d) {\n    const i = interpolate(this._current, d);\n    this._current = i(0);\n    return function (t) {\n      return thisArc(i(t));\n    };\n  };\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramDataSet,\n  IMargin,\n  TipContentFn,\n} from './Histogram';\nimport { pieChartD3 } from './PieChartD3';\n\ninterface ILabels {\n  display: boolean;\n  displayFn?: (d: any, ix: number) => string | number;\n}\n\nexport interface IPieDataItem {\n  count: number;\n  groupLabel: string;\n  label: string;\n}\n\nexport interface IPieChartProps {\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  backgroundColor?: string;\n  className?: string;\n  colorScheme?: string[];\n  donutWidth?: number;\n  height: number;\n  labels?: ILabels;\n  margin?: IMargin;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<string>;\n  visible?: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * PieChart component\n */\nclass PieChart extends React.Component<IPieChartProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Partial<IPieChartProps> = {\n    backgroundColor: '#ddd',\n    donutWidth: 0,\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IPieChartProps) {\n    super(props);\n    this.chart = pieChartD3();\n\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(this.getDOMNode(), this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IPieChartProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"piechart-chart-container\"></div>);\n  }\n}\n\nexport default PieChart;\n","import {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport * as get from 'lodash.get';\n\nimport attrs from './d3/attrs';\nimport { IAxes } from './Histogram';\n\n// Gridlines in y axis function\nexport const makeYGridlines = (y, ticks: number = 5) => {\n  return axisLeft(y)\n    .ticks(ticks);\n};\n\n// Gridlines in x axis function\nexport const makeXGridlines = (x, ticks: number = 5) => {\n  return axisBottom(x)\n    .ticks(ticks);\n};\n\nexport const drawGrid = (x, y, gridX, gridY, props, ticks) => {\n  const { height, width, axis, grid, margin } = props;\n  const axisWidth = axis.y.style['stroke-width'];\n\n  const offset = {\n    x: yAxisWidth(axis) + axisWidth,\n    y: gridHeight(props),\n  };\n\n  if (grid.x.visible) {\n    // Add the X gridlines\n    gridX.attr('transform', `translate(${offset.x}, ${offset.y})`)\n      .transition()\n      .call(makeXGridlines(x, get(grid, 'x.ticks', ticks))\n        .tickSize(-height + xAxisHeight(props.axis) + (margin.top * 2))\n        .tickFormat(() => ''));\n\n    attrs(gridX.selectAll('.tick line'), grid.x.style);\n    attrs(gridX.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n  }\n\n  if (grid.y.visible) {\n    // add the Y gridlines\n    gridY.attr('transform', 'translate(' + (yAxisWidth(axis) + axisWidth) + ', 0)')\n      .transition()\n      .call(makeYGridlines(y, get(grid, 'y.ticks', ticks))\n        .tickSize(-width + (margin.left * 2) + yAxisWidth(axis))\n        .tickFormat(() => ''),\n      );\n\n    attrs(gridY.selectAll('.tick line'), grid.y.style);\n\n    // Hide the first horizontal grid line to show axis\n    gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n      .attr('display', 'none');\n    attrs(gridY.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n  }\n};\n\nexport const gridHeight = (props): number => {\n  const { height, margin, axis } = props;\n  return height - (margin.top * 2) - xAxisHeight(axis);\n};\n\nexport const yAxisWidth = (axis: IAxes) => {\n  return axis.y.label === ''\n    ? axis.y.width\n    : axis.y.width + 30;\n};\n\nexport const xAxisHeight = (axis: IAxes) => {\n  return axis.x.label === ''\n    ? axis.x.height\n    : axis.x.height + 30 + get(axis, 'x.margin', 0);\n};\n\nexport const gridWidth = (props): number => {\n  const { axis, width, margin } = props;\n  return width - (margin.left * 2) - yAxisWidth(axis);\n};\n","import { IHistogramData } from '../../src';\nimport filterRange from '../../src/colors/filterRange';\nimport { IGrid } from '../../src/Histogram';\nimport { lineStyle } from '../../src/utils/defaults';\n\nexport const grid: IGrid = {\n  x: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n} from './Histogram';\nimport tips, { makeTip } from './tip';\n\nexport const horizontalHistogramD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let tipContent;\n  const x = scaleLinear();\n  const y = scaleBand();\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisLeft(y)\n      .ticks(ticks);\n  }\n\n  const defaultProps = {\n    axis: {\n      x: {\n        height: 25,\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        ticks: 10,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        width: 20,\n      },\n    },\n    bar: {\n      height: 50,\n      margin: 10,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [],\n    delay: 0,\n    duration: 400,\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    width: 200,\n  };\n\n  const HorizontalHistogramD3 = {\n    /**\n     * Initialization\n     * @param {Node} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: HTMLElement, props = {}) {\n      this.props = merge(defaultProps, props);\n      this.update(el, this.props);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Dom} el Dom container node\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = this.props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(this.props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     * @param {Object} counts Histogram data set values\n     * @return {Number} count\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Draw scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data: IHistogramData) {\n      const { margin, width, height, axis } = this.props;\n      const valuesCount = this.valuesCount(data.counts);\n\n      svg.selectAll('.y-axis').remove();\n      svg.selectAll('.x-axis').remove();\n\n      const h = this.gridHeight();\n      let xDomain;\n      let xAxis;\n      let yAxis;\n      let xRange;\n      const allCounts = data.counts.reduce((a: number[], b: IHistogramDataSet): number[] => {\n        return [...a, ...b.data];\n      }, []);\n\n      y.domain(data.bins)\n        .rangeRound([0, h]);\n\n      xAxis = axisBottom(x).ticks(axis.x.ticks);\n      yAxis = axisLeft(y).ticks(axis.y.ticks);\n\n      if (h / valuesCount < 10) {\n        // Show one in 10 x axis labels\n        xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n      }\n\n      xDomain = extent(allCounts, (d) => d);\n      xDomain[0] = 0;\n      xRange = [0, width - (margin.top * 2) - axis.y.width];\n      x.range(xRange)\n        .domain(xDomain);\n\n      svg.append('g').attr('class', 'y-axis')\n        .attr('transform', 'translate(' + axis.y.width + ', 0)')\n        .call(yAxis);\n\n      svg.append('g').attr('class', 'x-axis')\n        .attr('transform', 'translate(' + axis.y.width + ',' +\n          (height - axis.x.height - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style);\n    },\n\n    /**\n     * Draw the bars\n     * @param {Object} info Bar data etc\n     */\n    _drawBars(info: IHistogramData) {\n      const valuesCount = this.valuesCount(info.counts);\n      info.counts.forEach((set: IHistogramDataSet, setIndex: number) => {\n        this.drawDataSet(info.bins, set, setIndex, info.counts.length);\n      });\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     * @return {number} width\n     */\n    gridWidth(): number {\n      const { axis, width, margin } = this.props;\n      return width - (margin.left * 2) - axis.y.width;\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     * @return {number} width\n     */\n    gridHeight(): number {\n      const { height, margin, axis } = this.props;\n      return height - (margin.top * 2) - axis.x.height;\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     * @return {Number} Margin\n     */\n    groupedMargin(): number {\n      const { data } = this.props;\n      return ((data.counts.length - 1) * 3);\n    },\n\n    /**\n     * Calculate the bar height\n     * @return {number} bar height\n     */\n    barHeight() {\n      const { axis, width, margin, data, bar, stroke } = this.props;\n      const h = this.gridHeight();\n      const valuesCount = this.valuesCount(data.counts);\n      const setCount = data.counts.length;\n      let barHeight = (h / valuesCount) - (bar.margin * 2) - this.groupedMargin();\n\n      // Small bars - reduce margin and re-calcualate bar width\n      if (barHeight < 5) {\n        bar.margin = 1;\n        barHeight = Math.max(1, (h - (valuesCount + 1) * bar.margin) /\n          valuesCount);\n      }\n\n      // show data sets next to each other...\n      return barHeight / setCount;\n    },\n\n    /**\n     * Draw a single data set into the chart\n     * @param {Array} bins Data set labels\n     * @param {Object} set HistogramDataSet\n     * @param {number} setIndex Data set index\n     * @param {number} setCount Total number of data sets\n     */\n    drawDataSet(\n      bins: string[], set: IHistogramDataSet,\n      setIndex: number, setCount: number,\n    ) {\n      const { height, width, margin, bar, delay, duration,\n        axis, stroke, tip, tipContentFn } = this.props;\n      let barItem;\n      const barHeight = this.barHeight();\n      const colors = scaleOrdinal(set.colors || this.props.colorScheme);\n      const borderColors = set.borderColors ? scaleOrdinal(set.borderColors) : null;\n\n      const selector = '.bar-' + setIndex;\n      const multiLineOffset = (index) => setCount === 1\n        ? 0\n        : ((index + setIndex) * (barHeight + this.groupedMargin()));\n\n      svg.selectAll(selector).remove();\n\n      // Set up bar initial props\n      barItem = svg.selectAll(selector)\n        .data(set.data)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar ' + selector)\n        .attr('y', (d, index, all) => {\n          return bar.margin\n            + (barHeight + (bar.margin * 2)) * (index)\n            + multiLineOffset(index);\n        })\n        .attr('height', (d) => barHeight)\n        .attr('fill', (d, i) => colors(i))\n        .on('mouseover', (d: number, i: number) => {\n          tipContent.html(() => tipContentFn(bins, i, d));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .attr('x', (d: number): number => axis.y.width + axis.y.style['stroke-width'])\n        .attr('width', 0);\n\n      barItem.attr('stroke', (d, i) => {\n        if (borderColors) {\n          return borderColors(i);\n        }\n        return typeof stroke.color === 'function'\n          ? stroke.color(d, i, colors)\n          : stroke.color;\n      })\n        .attr('shape-rendering', 'crispEdges')\n        .attr('stroke-width', stroke.width)\n        .attr('stroke-linecap', stroke.linecap);\n\n      barItem.attr('stroke-dasharray', stroke.dasharray);\n\n      // Animate in bar\n      barItem\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        // Hide bar's left border\n        .attr('stroke-dasharray',\n          (d: number): string => {\n            const currentWidth = x(d);\n            return `${currentWidth + barHeight + currentWidth} ${barHeight}`;\n          })\n        .attr('width',\n          (d: number): number => x(d));\n\n      barItem.exit().remove();\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     * @param {Object} props Props\n     */\n    _drawGrid(props: IHistogramProps) {\n      const { data, height, width, axis, grid, margin } = props;\n      const ticks = this.valuesCount(data.counts);\n      const axisWidth = axis.y.style['stroke-width'];\n      const offset = {\n        x: axis.y.width + this.groupedMargin() / 2,\n        y: 0,\n      };\n      let g;\n      let gy;\n\n      // Horizontal lines\n      if (grid.x.visible) {\n        // Add the X gridlines\n        g = svg.append('g')\n          .attr('class', 'grid gridX')\n          .attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        g.call(make_x_gridlines(grid.x.ticks || ticks)\n          .tickSize(-width + (margin.left * 2) + axis.y.width)\n          .tickFormat(() => ''));\n\n        attrs(g.selectAll('.tick line'), grid.x.style);\n        attrs(g.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n      }\n\n      // Vertical lines.....\n      if (grid.y.visible) {\n        // add the Y gridlines\n        gy = svg.append('g')\n          .attr('class', 'grid gridY')\n          .attr('transform', 'translate(' + (axis.y.width + axisWidth) + ', '\n            + (height - axis.x.height - (margin.top * 2)) + ')')\n          .call(make_y_gridlines(grid.y.ticks || ticks)\n            .tickSize(-height + (margin.left * 2) + axis.x.height) // Line Length\n            .tickFormat(() => ''),\n          );\n        attrs(gy.selectAll('.tick line'), grid.y.style);\n\n        attrs(gy.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     * @param {HTMLElement} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: HTMLElement, props: IHistogramProps) {\n      if (!props.data) {\n        return;\n      }\n      this.props = merge(defaultProps, props);\n      this._makeSvg(el);\n      if (!this.props.data.bins) {\n        return;\n      }\n\n      this._drawScales(this.props.data);\n      this._drawGrid(this.props);\n      this._drawBars(this.props.data);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HorizontalHistogramD3;\n});\n","import { rgb } from 'd3-color';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramProps,\n} from './Histogram';\nimport { horizontalHistogramD3 } from './HorizontalHistogramD3';\n\n/**\n * Horizontal Histogram component\n */\nclass HorizontalHistogram extends React.Component<IHistogramProps, IChartState> {\n\n  private histogram: IChartAdaptor;\n  private ref;\n\n  public static defaultProps = {\n    axis: {},\n    bar: {\n      margin: 2,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: (d, i, colors) => rgb(colors(i)).darker(1),\n      width: 1,\n    },\n    tipContentFn: (bins: string[], i, d) =>\n      bins[i] + '<br />' + d.toFixed(2),\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IHistogramProps) {\n    super(props);\n    this.histogram = horizontalHistogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.histogram.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.histogram.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.histogram.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IHistogramProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Props recieved, update the chart\n   * @param {Object} props Props\n   */\n  public componentWillReceiveProps(props: IHistogramProps) {\n    this.histogram.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.histogram.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default HorizontalHistogram;\n","import {\n  scaleLinear,\n  ScaleLinear,\n  scaleLog,\n  ScaleLogarithmic,\n  scaleTime,\n  ScaleTime,\n} from 'd3-scale';\n\nimport { IAxes } from '../';\n\nexport type AnyScale = ScaleLinear<number, number> | ScaleTime<any, any>\n  | ScaleLogarithmic<any, any>;\n\nexport const buildScales = (axis: IAxes) => {\n  let x: AnyScale;\n  let y: AnyScale;\n  switch (axis.x.scale) {\n    case 'LOG':\n      x = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      x = scaleTime();\n      break;\n    default:\n      x = scaleLinear();\n      break;\n  }\n\n  switch (axis.y.scale) {\n    case 'LOG':\n      y = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      x = scaleTime();\n      break;\n    default:\n      y = scaleLinear();\n      break;\n  }\n  return [x, y];\n};\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport { easeCubic } from 'd3-ease';\nimport { format } from 'd3-format';\nimport { select } from 'd3-selection';\nimport {\n  area,\n  curveCatmullRom,\n  line,\n} from 'd3-shape';\nimport {\n  timeFormat,\n  timeParse,\n} from 'd3-time-format';\nimport * as merge from 'deepmerge';\n\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridWidth,\n  xAxisHeight as getXAxisHeight,\n  yAxisWidth as getYAxisWidth,\n} from './grid';\nimport {\n  IChartAdaptor,\n  IHistogramDataSet,\n} from './Histogram';\nimport {\n  IChartPoint,\n  ILineChartDataSet,\n  ILineChartProps,\n  ILineProps,\n  ISVGPoint,\n} from './LineChart';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  lineStyle,\n} from './utils/defaults';\nimport { buildScales } from './utils/scales';\n\nconst ZERO_SUBSITUTE: number = 1e-6;\n\nexport const lineChartD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let xParseTime;\n  let xFormatTime;\n  let tipContent;\n\n  const lineProps: ILineProps = {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: '#eee',\n      show: false,\n    },\n    show: true,\n    stroke: '#005870',\n    strokeDashArray: '5 5',\n    strokeDashOffset: 0,\n  };\n\n  const pointProps: ISVGPoint = {\n    ...lineStyle,\n    fill: 'rgba(255, 255, 255, 0)',\n    radius: 4,\n    show: true,\n    stroke: '#005870',\n  };\n\n  const defaultProps: ILineChartProps = {\n    axis: defaultAxis,\n    className: 'line-chart-d3',\n    data: [],\n    fx: easeCubic,\n    grid: {\n      x: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 250,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (info, i, d) => {\n      switch (typeof info[i].x) {\n        case 'object': // date\n          return xFormatTime(info[i].x) + ', ' + info[i].y;\n        default:\n          return Number(info[i].x).toFixed(3) + ', ' + info[i].y;\n      }\n    },\n    width: 200,\n  };\n\n  const datumProps = {\n    line: lineProps,\n    point: pointProps,\n  };\n\n  const curve = (curveType, yAxisWidth, x, y) => line()\n    .curve(curveType)\n    .x((d: any) => x(d.x) + yAxisWidth)\n    .y((d: any) => y(d.y));\n\n  const LineChartD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Node, props: Object = {}) {\n      this.props = merge(defaultProps, props);\n      this._makeSvg(el);\n      this.makeScales();\n      [this.x, this.y] = buildScales(this.props.axis);\n      this.makeGrid();\n      this.container = svg\n        .append('g')\n        .attr('class', 'linechart-container');\n\n      this.lineContainer = this.container\n        .append('g')\n        .attr('class', 'line-container');\n      this._createLines(this.props.data);\n      this.update(el, this.props);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = this.props;\n      const scale = {\n        x: 1 - (margin.left / width),\n        y: 1 - (margin.top / height),\n      };\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top}) scale(${scale.x},${scale.y})`);\n\n      const r = makeTip(this.props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Iterate over the dataset drawing points for sets marked as\n     * requiring points.\n     */\n    _drawDataPointSet(data: Array<ILineChartDataSet<any>>) {\n      const { axis, tip } = this.props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      const pointContainer = this.container.selectAll('g').data(data);\n\n      // Don't ask why but we must reference tipContentFn as this.props.tipContentFn otherwise\n      // it doesn't update with props changes\n      const onMouseOver = (d: ILineChartDataSet<any>, i: number) => {\n        tipContent.html(() => this.props.tipContentFn([d], 0));\n        tip.fx.in(tipContainer);\n      };\n      const points = pointContainer.enter()\n        .append('g')\n        .attr('class', (d, i: number) => 'point-container' + i)\n        .merge(pointContainer)\n        .selectAll('circle')\n        .data((d) => {\n          return d.data.map((dx) => ({\n            ...dx,\n            point: d.point,\n          }));\n        });\n\n      // UPDATE - Update old elements as needed.\n      points.attr('class', 'update');\n\n      // ENTER + UPDATE\n      // After merging the entered elements with the update selection,\n      // apply operations to both.\n      points.enter().append('circle')\n        .attr('class', 'enter')\n        .on('mouseover', onMouseOver)\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .merge(points)\n        .attr('class', 'point')\n        .attr('cy', (d) => this.y(d.y))\n        .attr('r', (d, i: number) => 0)\n        .attr('fill', (d) => d.point.fill)\n        .attr('stroke', (d) => d.point.stroke)\n        .attr('cx', (d) => {\n          return this.x(d.x) + yAxisWidth;\n        })\n        .transition()\n        .duration(400)\n        .attr('r', (d) => d.point.show ? d.point.radius : 0)\n        .delay(650);\n\n      // EXIT - Remove old elements as needed.\n      pointContainer.exit().remove();\n      points.exit().remove();\n    },\n\n    makeScales() {\n      this.xAxis = svg.append('g').attr('class', 'x-axis');\n      this.yAxis = svg.append('g').attr('class', 'y-axis');\n\n      this.xAxisLabel = svg.append('g');\n      this.yAxisLabel = svg.append('g');\n    },\n\n    /**\n     * Draw the chart scales\n     */\n    _drawScales(data: Array<ILineChartDataSet<IChartPoint<number, number>>>) {\n      // @TODO Grid not rendering down to x axis\n      const { axis, height } = this.props;\n      const w = gridWidth(this.props);\n      let yDomain;\n      let xDomain;\n      const ys: any[] = [];\n      const xs: any[] = [];\n      const yAxis = axisLeft(this.y);\n      if (axis.y.tickValues) {\n        yAxis.tickValues(axis.y.tickValues);\n      } else {\n        yAxis.ticks(axis.y.ticks);\n      }\n      if (axis.y.numberFormat) {\n        yAxis.tickFormat(format(axis.y.numberFormat));\n      }\n\n      const xAxis = axisBottom(this.x); // .ticks(axis.x.ticks);\n      if (axis.x.tickValues) {\n        xAxis.tickValues(axis.x.tickValues);\n      }\n      if (axis.x.scale === 'TIME' && axis.x.dateFormat) {\n        xAxis.tickFormat(timeFormat(axis.x.dateFormat));\n      }\n      const xAxisHeight = getXAxisHeight(axis);\n      const yAxisWidth = getYAxisWidth(axis);\n\n      data.forEach((datum: ILineChartDataSet<IChartPoint<number, number>>) => {\n        datum.data.forEach((d: IChartPoint<number, number>) => {\n          let parsedY = d.y;\n          let parsedX = d.x;\n          if (axis.y.scale === 'LOG' && d.y === 0) {\n            parsedY = ZERO_SUBSITUTE;\n          }\n          if (axis.x.scale === 'LOG' && d.x === 0) {\n            parsedX = ZERO_SUBSITUTE;\n          }\n          ys.push((parsedY));\n          xs.push((parsedX));\n        });\n      });\n      yDomain = extent(ys);\n      xDomain = extent(xs);\n      // domain mustn't be 0 as log(0) gives Infinity. 1 lower domain gives better looking graphs\n      if (axis.y.scale === 'LOG' && yDomain[0] === ZERO_SUBSITUTE) {\n        yDomain[0] = 1;\n      }\n      if (axis.x.scale === 'LOG' && xDomain[0] === ZERO_SUBSITUTE) {\n        xDomain[0] = 1;\n      }\n      this.x\n        .domain(xDomain)\n        .rangeRound([0, w]);\n\n      this.y.domain(yDomain)\n        .range([height - xAxisHeight, 0]);\n\n      this.yAxis\n        .attr('transform', `translate(${yAxisWidth}, 0)`)\n        .transition()\n        .call(yAxis);\n\n      this.xAxis\n        .attr('transform', `translate(${yAxisWidth},${(height - xAxisHeight)})`)\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style);\n    },\n\n    _createLines(data: Array<ILineChartDataSet<any>>) {\n      data.forEach((d, i) => {\n        this.lineContainer.append('path')\n          .attr('class', `line-${i}`);\n      });\n\n      // change the line\n      data\n        .forEach((d, i) => {\n          this.lineContainer.append('path')\n            .attr('class', `fill-${i}`);\n\n        });\n\n    },\n\n    /**\n     * Iterate over data and update lines\n     */\n    _drawLines(data: Array<ILineChartDataSet<any>>) {\n      const { axis } = this.props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      // change the line\n      data.forEach((d, i) => {\n        this.lineContainer.select(`.line-${i}`)\n          .attr('fill', 'none')\n          .attr('stroke-dashoffset', d.line.strokeDashOffset)\n          .attr('stroke-dasharray', d.line.strokeDashOffset)\n          .attr('stroke', d.line.stroke)\n          .transition()\n          .duration(500)\n          .attr('d', curve(d.line.curveType, yAxisWidth, this.x, this.y)(d.data as any))\n          .delay(50);\n      });\n    },\n\n    /**\n     * Iterates ove data and updates area fills\n     */\n    drawAreas(data: Array<ILineChartDataSet<any>>) {\n      const { axis, height } = this.props;\n      const yAxisWidth = getYAxisWidth(axis);\n      const xAxisHeight = getXAxisHeight(axis);\n      const thisArea = (curveType) => area()\n        .curve(curveType)\n        .x((d: any) => this.x(d.x) + yAxisWidth)\n        .y0((d) => height - xAxisHeight)\n        .y1((d: any) => this.y(d.y));\n\n      // change the line\n      data\n        .forEach((d, i) => {\n          this.lineContainer.select(`.fill-${i}`)\n            .attr('fill', d.line.fill.fill)\n            .style('opacity', d.line.show && d.line.fill.show ? 1 : 0)\n            .transition()\n            .duration(500)\n            .delay(50)\n            .attr('d', thisArea(d.line.curveType)(d.data as any))\n\n            ;\n        });\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(data: IHistogramDataSet[]): number {\n      return data.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    makeGrid() {\n      this.gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      this.gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, props) {\n      if (!props.data) {\n        return;\n      }\n      this.props = merge(defaultProps, props);\n      [this.x, this.y] = buildScales(this.props.axis);\n      let data = props.data;\n\n      xParseTime = timeParse(props.axis.x.dateFormat);\n      xFormatTime = timeFormat(props.axis.x.dateFormat);\n      data = data.map((datum: ILineChartDataSet<IChartPoint<number, number>>) => {\n        if (props.axis.x.scale === 'TIME') {\n          datum.data = datum.data.map((d) => {\n            const newd = {\n              ...d,\n              x: typeof d.x === 'object'\n                ? d.x\n                : xParseTime(d.x.toString()),\n            };\n            return newd;\n          });\n        }\n        // Assign in default line & point styles\n        return Object.assign({}, datumProps, datum);\n      });\n      this._drawScales(data);\n      this._drawLines(data);\n      this.drawAreas(data);\n      drawGrid(this.x, this.y, this.gridX, this.gridY, this.props, this.valuesCount(data));\n      this._drawDataPointSet(data);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return LineChartD3;\n});\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IGrid,\n  IMargin,\n  ISVGLineStyle,\n  TipContentFn,\n} from './Histogram';\nimport { lineChartD3 } from './lineChartD3';\n\ninterface IState {\n  parentWidth?: number;\n}\n\nexport type IChartPointValue = number | string | Date | object;\nexport interface IChartPoint<X extends IChartPointValue = Date | number, Y extends IChartPointValue = number> {\n  x: X;\n  y: Y;\n}\nexport interface ILineProps {\n  show: boolean;\n  fill: {\n    show: boolean;\n    fill: string;\n  };\n  curveType: any;\n  stroke: string;\n  strokeDashOffset: number;\n  strokeDashArray: string;\n}\n\nexport interface ILineChartDataSet<T> {\n  label: string;\n  point?: {\n    radius: number;\n    stroke: string;\n    fill: string;\n    show: boolean;\n  };\n  line?: ILineProps;\n  data: T[];\n}\n\nexport interface ISVGPoint extends ISVGLineStyle {\n  radius?: 4;\n  show: boolean;\n}\n\nexport interface ILineChartProps<T extends IChartPoint<IChartPointValue, IChartPointValue> = IChartPoint> {\n  axis?: IAxes;\n  className?: string;\n  data: Array<ILineChartDataSet<T>>;\n  fx?: (n: number) => number;\n  grid?: IGrid;\n  height?: number | string;\n  margin?: IMargin;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<{ x: string | number, y: string | number }>;\n  visible?: { [key: string]: boolean };\n  width?: number | string;\n}\n\nclass LineChart extends React.Component<ILineChartProps, IState> {\n\n  private chart;\n  private ref;\n\n  constructor(props: ILineChartProps) {\n    super(props);\n    this.chart = lineChartD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n\n  }\n\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state. If a histogram has been assigned\n   * to the props, then render this data. Otherwise generate\n   * a random normal dist\n   */\n  public getChartState(): ILineChartProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  public getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  public render(): JSX.Element {\n    return <div ref={(ref) => this.ref = ref} className=\"chart-container\"></div>;\n  }\n}\n\nexport default LineChart;\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\n\nimport colorScheme from './colors';\nimport { IChartPoint } from './LineChart';\nimport {\n  IScatterPlotProps,\n  ScatterPlotData,\n} from './ScatterPlot';\n\nexport const scatterPlotD3 = (() => {\n  let svg;\n  const yScale = scaleLinear();\n  const xScale = scaleLinear();\n  const domainByTrait = {};\n  let xAxis;\n  let color;\n  let yAxis;\n\n  const defaultProps = {\n    choices: [],\n    className: 'scatter-plot-d3',\n    colorScheme,\n    data: [],\n    delay: 0,\n    duration: 400,\n    height: 300,\n    legendWidth: 100,\n    padding: 20,\n    radius: 4,\n    width: '100%',\n  };\n\n  const GenerateChart = {\n\n    /**\n     * Initialization\n     * @param {Element} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: Element, props: IScatterPlotProps = defaultProps) {\n      this.props = merge(defaultProps, props);\n      this.update(el, props);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Element} el Dom container node\n     * @param {Array} data Chart data\n     */\n    _makeSvg(el: Element, data: ScatterPlotData) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { width, className, height,\n        legendWidth, padding } = this.props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width + padding + legendWidth)\n        .attr('height', height + padding)\n        .append('g')\n        .attr('transform', 'translate(' + padding + ',' + padding / 2 + ')');\n\n      color = scaleOrdinal(this.props.colorScheme);\n    },\n\n    /**\n     * Draw the chart scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data) {\n      const { height, padding, width } = this.props;\n      const xSize = width / data.length;\n      const ySize = height / data.length;\n      xScale.range([padding / 2, xSize - padding / 2]);\n      yScale.range([height - padding / 2, padding / 2]);\n\n      svg.selectAll('.x.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'x axis')\n        .attr('transform', (d, i) =>\n          'translate(' + (data.length - i - 1) * xSize + ',0)')\n        .each(function (d) {\n          xScale.domain(domainByTrait[d]);\n          select(this).call(xAxis);\n        });\n\n      svg.selectAll('.y.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'y axis')\n        .attr('transform', (d: any, i: number) => 'translate(0,' + i * ySize + ')')\n        .each(function (d: any) {\n          yScale.domain(domainByTrait[d]);\n          select(this).call(yAxis);\n        });\n    },\n\n    /**\n     * Make a legend showing spit choice options\n     */\n    _drawLegend() {\n      const { choices, padding, width, split } = this.props;\n      if (choices === undefined) {\n        return;\n      }\n      const legend = svg.append('g')\n        .attr('transform', 'translate(' + (width + padding / 2) +\n          ', ' + (padding + 50) + ')');\n\n      legend.append('g').append('text')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('dy', '.71em')\n        .text((d) => split);\n      legend.selectAll('.legendItem')\n        .data(choices)\n        .enter().append('g')\n        .each(function (c, i: number) {\n          const cell = select(this);\n          cell.append('rect')\n            .attr('class', 'legendItem')\n            .attr('x', 0)\n            .attr('y', 20 + (i * 15))\n            .attr('fill', color(i))\n            .attr('height', 10)\n            .attr('width', 10);\n\n          cell.append('text')\n            .attr('x', 15)\n            .attr('y', 20 + (i * 15))\n            .attr('dy', '.71em')\n            .text((d) => c);\n        });\n\n      legend.exit().remove();\n    },\n\n    /**\n     * Draw scatter points\n     * @param {Object} traits Chart data\n     * @param {Number} size Chart size\n     */\n    _drawPoints(traits, width: number, height: number) {\n      const { data, delay, duration,\n        choices, split, padding, radius } = this.props;\n      const n = traits.length;\n      const cell = svg.selectAll('.cell')\n        .data(cross(traits, traits))\n        .enter().append('g')\n        .attr('class', 'cell')\n        .attr('transform', (d) => 'translate(' + (n - d.i - 1) * width +\n          ',' + d.j * width + ')')\n        .each(plot);\n\n      // Titles for the diagonal.\n      cell.filter((d) => d.i === d.j).append('text')\n        .attr('x', padding)\n        .attr('y', padding)\n        .attr('dy', '.71em')\n        .text((d) => d.x);\n\n      /**\n       * Plot a point\n       * @param {Object} p Point\n       */\n      function plot(p: IChartPoint) {\n        const plotCell = select(this);\n        let circle;\n        xScale.domain(domainByTrait[Number(p.x)]);\n        yScale.domain(domainByTrait[Number(p.y)]);\n\n        plotCell.append('rect')\n          .attr('class', 'frame')\n          .attr('x', padding / 2)\n          .attr('y', padding / 2)\n          .attr('width', width - padding)\n          .attr('height', height - padding);\n\n        circle = plotCell.selectAll('circle')\n          .data(data.values)\n          .enter().append('circle')\n          .attr('r', (d) => radius)\n          .attr('cx', (d) => xScale(d[Number(p.x)]))\n          .attr('cy', (d) => yScale(d[Number(p.y)]))\n          .style('fill', (d) => {\n            if (d[split]) {\n              const i = choices.findIndex((c) => c === d[split]);\n              return color(i);\n            }\n            return '#eeaabb';\n          });\n\n        circle\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('r', (d) => radius);\n      }\n\n      /**\n       * Create cross array\n       * // @TODO looks like d3 has its own cross function now...\n       * @param {Object} a point\n       * @param {Object} b point\n       * @return {Array} data\n       */\n      function cross(a, b) {\n        const c = [];\n        const nx = a.length;\n        const m = b.length;\n        let i: number;\n        let j: number;\n        for (i = -1; ++i < nx;) {\n          for (j = -1; ++j < m;) {\n            c.push({ x: a[i], i, y: b[j], j });\n          }\n        }\n        return c;\n      }\n    },\n\n    /**\n     * Update chart\n     * @param {Node} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: Element, props: IScatterPlotProps) {\n      this.props = { ...this.props, ...props };\n      if (!props.data) {\n        return;\n      }\n      const { data, distModels, height, width } = this.props;\n      this._makeSvg(el, props.data);\n      this._drawLegend();\n      const traits = data.keys.filter((k) => distModels.indexOf(k) !== -1);\n      const xSize = width / traits.length;\n      const ySize = height / traits.length;\n      const n = traits.length;\n\n      traits.forEach((trait) => {\n        domainByTrait[trait] = extent(data.values, (d) => d[trait]);\n      });\n      xAxis = axisBottom(xScale)\n        .ticks(6)\n        .tickSize(xSize * n);\n      yAxis = axisLeft(yScale)\n        .ticks(6)\n        .tickSize(-ySize * n);\n\n      this._drawScales(traits);\n      this._drawPoints(traits, xSize, ySize);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return GenerateChart;\n});\n","import * as React from 'react';\nimport { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { scatterPlotD3 } from './ScatterPlotD3';\n\ninterface IChartState {\n  choices: string[];\n  data: any[];\n  height: number;\n  distModels: string[];\n  split: string;\n  parentWidth: number;\n  width: number | string;\n}\n\nexport type ScatterPlotData = any[];\n\nexport interface IScatterPlotProps {\n  choices?: any[];\n  className?: string;\n  chartSize?: number;\n  data: ScatterPlotData;\n  delay?: number;\n  distModels?: string[];\n  duration?: number;\n  height: number;\n  legendWidth?: number;\n  colorScheme?: string[];\n  padding?: number;\n  radius?: number;\n  split?: string;\n  width: string | number;\n}\nclass ScatterPlot extends Component<IScatterPlotProps, IChartState> {\n\n  private chart;\n  private ref;\n\n  public static defaultProps = {\n    height: 400,\n    width: '100%',\n  };\n\n  constructor(props: IScatterPlotProps) {\n    super(props);\n    this.chart = scatterPlotD3();\n    this.state = {\n      choices: [],\n      data: [],\n      distModels: [],\n      height: this.props.height,\n      parentWidth: 400,\n      split: '',\n      width: this.props.width,\n    };\n  }\n\n  private handleResize() {\n    const { legendWidth, padding } = this.props;\n    const chartWidth = Math.max(200, this.ref.offsetWidth - padding - legendWidth);\n    const chartHeight = Math.max(200, window.innerHeight - padding -\n      this.ref.getBoundingClientRect().top);\n    const width = Math.min(chartHeight, chartWidth);\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(this.getDOMNode(), this.getChartState()));\n  }\n\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  private getChartState(): IChartState {\n    let { width } = this.props;\n    const { data, choices, split, distModels, height } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      choices,\n      data,\n      distModels,\n      height,\n      parentWidth: this.state.parentWidth,\n      split,\n      width,\n    };\n  }\n\n  public componentWillReceiveProps(props: IScatterPlotProps) {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  public componentWillUnmount() {\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  public render() {\n    return <div ref={(ref) => this.ref = ref} className=\"scatterplot-chart-container\"></div>;\n  }\n}\n\nexport default ScatterPlot;\n","import filterRange from './colors/filterRange';\nimport Histogram, {\n  IAxes,\n  IHistogramBar,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n  IStroke,\n} from './Histogram';\nimport HorizontalHistogram from './HorizontalHistogram';\nimport JoyPlot from './JoyPlot';\nimport Legend from './Legend';\nimport LineChart, {\n  IChartPoint,\n  ILineChartDataSet,\n  ILineChartProps,\n} from './LineChart';\n// import Map from './Map';\nimport PieChart from './PieChart';\nimport ScatterPlot from './ScatterPlot';\n\nexport {\n  filterRange,\n  JoyPlot,\n  Histogram,\n  HorizontalHistogram,\n  Legend,\n  LineChart,\n  // Map,\n  PieChart,\n  ScatterPlot,\n  ILineChartDataSet,\n  IChartPoint,\n  ILineChartProps,\n  IAxes,\n  IHistogramBar,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n  IStroke,\n};\n"],"sourceRoot":""}