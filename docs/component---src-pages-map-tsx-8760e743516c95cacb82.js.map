{"version":3,"sources":["webpack:///../node_modules/d3-collection/src/map.js","webpack:///../node_modules/d3-collection/src/set.js","webpack:///../node_modules/d3-request/src/request.js","webpack:///../node_modules/d3-request/src/type.js","webpack:///../node_modules/d3-request/src/json.js","webpack:///../node_modules/d3-request/src/html.js","webpack:///../node_modules/d3-dsv/src/dsv.js","webpack:///../node_modules/d3-request/src/text.js","webpack:///../node_modules/d3-request/src/xml.js","webpack:///../node_modules/d3-dsv/src/csv.js","webpack:///../node_modules/d3-dsv/src/tsv.js","webpack:///../node_modules/d3-request/src/dsv.js","webpack:///../node_modules/d3-request/src/csv.js","webpack:///../node_modules/d3-request/src/tsv.js","webpack:///./src/pages/map.tsx"],"names":["Map","map","object","f","each","value","key","set","Array","isArray","o","i","n","length","prototype","constructor","has","this","get","remove","property","clear","keys","push","slice","values","entries","size","empty","Set","proto","add","request","_mimeType","_response","_responseType","event","headers","xhr","XMLHttpRequest","_user","_password","_timeout","respond","result","status","type","responseType","response","responseText","hasResponse","call","e","XDomainRequest","test","url","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","name","toLowerCase","arguments","mimeType","timeout","user","password","data","callback","send","post","method","open","setRequestHeader","overrideMimeType","error","fixCallback","on","abort","apply","Error","r","defaultMimeType","document","createRange","createContextualFragment","JSON","parse","EOL","xml","responseXML","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","stringify","join","reFormat","RegExp","delimiter","DELIMITER","charCodeAt","parseRows","text","t","rows","N","I","eof","eol","token","c","j","replace","row","formatRow","formatValue","convert","customConverter","format","columnSet","Object","create","forEach","column","inferColumns","concat","formatRows","csv","dsv","csvParse","tsv","tsvParse","_","responseOf","MapExample","useState","loading","setLoading","geojson","setGeoJson","useEffect","json","collection","title","description","height","width"],"mappings":"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","file":"component---src-pages-map-tsx-8760e743516c95cacb82.js","sourcesContent":["import \"core-js/modules/es6.array.is-array\";\nexport var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function has(key) {\n    return prefix + key in this;\n  },\n  get: function get(key) {\n    return this[prefix + key];\n  },\n  set: function set(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map(); // Copy constructor.\n\n  if (object instanceof Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\nexport default map;","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport { default as map, prefix } from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function add(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set(); // Copy constructor.\n\n  if (object instanceof Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\nexport default set;","import { map } from \"d3-collection\";\nimport { dispatch } from \"d3-dispatch\";\nexport default function (url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      _mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest(),\n      _user = null,\n      _password = null,\n      _response,\n      _responseType,\n      _timeout = 0; // If IE does not support CORS, use XDomainRequest.\n\n\n  if (typeof XDomainRequest !== \"undefined\" && !(\"withCredentials\" in xhr) && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest();\n  \"onload\" in xhr ? xhr.onload = xhr.onerror = xhr.ontimeout = respond : xhr.onreadystatechange = function (o) {\n    xhr.readyState > 3 && respond(o);\n  };\n\n  function respond(o) {\n    var status = xhr.status,\n        result;\n\n    if (!status && hasResponse(xhr) || status >= 200 && status < 300 || status === 304) {\n      if (_response) {\n        try {\n          result = _response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function (e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function header(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);else headers.set(name, value + \"\");\n      return request;\n    },\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function mimeType(value) {\n      if (!arguments.length) return _mimeType;\n      _mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function responseType(value) {\n      if (!arguments.length) return _responseType;\n      _responseType = value;\n      return request;\n    },\n    timeout: function timeout(value) {\n      if (!arguments.length) return _timeout;\n      _timeout = +value;\n      return request;\n    },\n    user: function user(value) {\n      return arguments.length < 1 ? _user : (_user = value == null ? null : value + \"\", request);\n    },\n    password: function password(value) {\n      return arguments.length < 1 ? _password : (_password = value == null ? null : value + \"\", request);\n    },\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function response(value) {\n      _response = value;\n      return request;\n    },\n    // Alias for send(\"GET\", …).\n    get: function get(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n    // Alias for send(\"POST\", …).\n    post: function post(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n    // If callback is non-null, it will be used for error and load events.\n    send: function send(method, data, callback) {\n      xhr.open(method, url, true, _user, _password);\n      if (_mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", _mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n      if (_mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(_mimeType);\n      if (_responseType != null) xhr.responseType = _responseType;\n      if (_timeout > 0) xhr.timeout = _timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function (xhr) {\n        callback(null, xhr);\n      });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n    abort: function abort() {\n      xhr.abort();\n      return request;\n    },\n    on: function on() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function (error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\" ? xhr.response // null on error\n  : xhr.responseText; // \"\" on error\n}","import request from \"./request\";\nexport default function (defaultMimeType, response) {\n  return function (url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n\n    return r;\n  };\n}","import type from \"./type\";\nexport default type(\"application/json\", function (xhr) {\n  return JSON.parse(xhr.responseText);\n});","import type from \"./type\";\nexport default type(\"text/html\", function (xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.array.map\";\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n} // Compute unique columns in order of discovery.\n\n\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\n\nexport default function (delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert,\n        columns,\n        rows = parseRows(text, function (row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [],\n        // output rows\n    N = text.length,\n        I = 0,\n        // current character index\n    n = 0,\n        // current line number\n    t,\n        // current token\n    eof = N <= 0,\n        // current token followed by EOF?\n    eol = false; // current token followed by EOL?\n    // Strip the trailing newline.\n\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL; // Unescape quotes.\n\n      var i,\n          j = I,\n          c;\n\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n          ;\n        }\n\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      } // Find next delimiter or newline.\n\n\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      } // Return last token before EOF.\n\n\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n\n      while (t !== EOL && t !== EOF) {\n        row.push(t), t = token();\n      }\n\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\" : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}","import type from \"./type\";\nexport default type(\"text/plain\", function (xhr) {\n  return xhr.responseText;\n});","import type from \"./type\";\nexport default type(\"application/xml\", function (xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});","import dsv from \"./dsv\";\nvar csv = dsv(\",\");\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;","import dsv from \"./dsv\";\nvar tsv = dsv(\"\\t\");\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;","import request from \"./request\";\nexport default function (defaultMimeType, parse) {\n  return function (url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n\n    r.row = function (_) {\n      return arguments.length ? r.response(responseOf(parse, row = _)) : row;\n    };\n\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function (request) {\n    return parse(request.responseText, row);\n  };\n}","import { csvParse } from \"d3-dsv\";\nimport dsv from \"./dsv\";\nexport default dsv(\"text/csv\", csvParse);","import { tsvParse } from \"d3-dsv\";\nimport dsv from \"./dsv\";\nexport default dsv(\"text/tab-separated-values\", tsvParse);","import { json } from 'd3-request';\nimport { FeatureCollection } from 'geojson';\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Map } from '../../../src';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data } from '../data';\n\nconst MapExample = () => {\n  const [loading, setLoading] = useState(true);\n\n  const [geojson, setGeoJson] = useState<FeatureCollection<any, any>>(null);\n  useEffect(() => {\n    const url = 'https://opendata.arcgis.com/datasets/8d3a9e6e7bd445e2bdcc26cdf007eac7_3.geojson';\n    json(url, (error, collection) => {\n      if (error) { throw error; }\n      setGeoJson(collection);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return <div>loading</div>;\n  }\n  return (\n    <Layout>\n      <SEO title=\"Histogram\" description=\"\" />\n      <h1>Map</h1>\n      <div>\n        <Map\n          data={data}\n          geojson={geojson}\n          height={400}\n          width={400} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default MapExample;\n\n"],"sourceRoot":""}