{"version":3,"sources":["webpack:///./src/components/JSXToString.tsx","webpack:///./node_modules/react-element-to-jsx-string/dist/cjs/index.js"],"names":["style","backgroundColor","color","padding","JSXToString","component","variant","reactElementToJSXString","Object","defineProperty","exports","value","ex","React","React__default","spacer","times","tabStop","Array","fill","join","_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","toString","call","slice","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","length","i","arr2","isObjectObject","val","commonjsGlobal","globalThis","window","global","self","x","dist","fn","module","createCommonjsModule","__assign","assign","t","s","arguments","p","hasOwnProperty","apply","this","__spreadArrays","il","r","k","a","j","jl","seen","prettyPrint","input","options","pad","tokens","combinedOptions","indent","singleQuotes","undefined","inlineCharacterLimit","newLine","newLineOrSpace","object","expandWhiteSpace","string","oneLined","replace","RegExp","indexOf","String","Date","toISOString","push","ret","map","el","eol","transform","pop","type","isObj","objKeys_1","keys","getOwnPropertySymbols","filter","keySymbol","propertyIsEnumerable","isSymbol","isClassic","key","__esModule","dist_1","sortObject","sort","reduce","result","createStringTreeNode","supportFragment","Boolean","Fragment","getReactElementDisplayName","element","displayName","noChildren","propsValue","propName","onlyMeaningfulChildren","children","filterProps","originalProps","cb","filteredProps","forEach","parseReactElement","_options$displayName","displayNameFn","isValidElement","Error","concat","props","ref","search","defaultProps","childrens","Children","toArray","child","createReactFragmentTreeNode","createReactElementTreeNode","noRefCheck","inlineFunction","split","line","trim","defaultFunctionValue","formatFunction","_options$functionValu","functionValue","showFunctions","formatPropValue","propValue","inline","lvl","ctor","prot","symbolDescription","valueOf","formatTreeNode","normalizedValue","stringifiedValue","currentObj","prop","originalResult","currentValue","formatComplexDataStructure","mergeSiblingPlainStringChildrenReducer","previousNodes","currentNode","nodes","previousNode","formatOneChildren","formattedElement","offset","compensateMultilineStringElementIndentation","isInlineAttributeTooLong","attributes","inlineAttributeString","maxInlineAttributesLineLength","formatReactElementNode","node","_node$displayName","_node$props","_node$defaultProps","showDefaultProps","sortProps","out","outInlineAttr","outMultilineAttr","containsMultilineAttr","visibleAttributeNames","propFilter","createPropFilter","haveDefaultValue","includes","onlyPropsWithOriginalValue","defaultPropName","shouldSortUserProps","haveKeyProp","haveRefProp","userPropsOnly","oneProp","sortedProps","unshift","attributeName","_formatProp","hasValue","hasDefaultValue","defaultValue","usedValue","useBooleanShorthandSyntax","formattedPropValue","attributeFormattedInline","attributeFormattedMultiline","isMultilineAttribute","formatProp","shouldRenderMultilineAttr","newLvl","formatReactFragmentNode","useFragmentShortSyntax","_ref","isKeyedFragment","toReactElementTreeNode","jsxStopChars","escape$1","some","jsxStopChar","shouldBeEscaped","endsWith","startsWith","formatTree","default","_ref$filterProps","_ref$showDefaultProps","_ref$showFunctions","_ref$tabStop","_ref$useBooleanShorth","_ref$useFragmentShort","_ref$sortProps","preserveFunctionLineBreak"],"mappings":"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","file":"1875eec8dd4c2afa4fd3ed162cae2fe65fe99a3d-ee4bdda3230ec170c453.js","sourcesContent":["import React, {\n  FC,\n  ReactNode,\n} from 'react';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\nimport { Typography } from '@material-ui/core';\n\nconst style = {\n  backgroundColor: '#303030',\n  color: '#eee',\n  padding: '1rem',\n};\n\nconst JSXToString: FC<{ component: ReactNode }> = ({ component }) => {\n  return (\n    <>\n      <Typography variant=\"h6\">JSX</Typography>\n      <pre style={style}>\n        {reactElementToJSXString(component)}\n      </pre>\n    </>\n  );\n};\n\nexport default JSXToString;\n","'use strict';\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar spacer = function spacer(times, tabStop) {\n  if (times === 0) {\n    return '';\n  }\n\n  return new Array(times * tabStop).fill(' ').join('');\n};\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\nfunction isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\nfunction isObjectObject(o) {\n  return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor, prot;\n  if (isObjectObject(o) === false) return false; // If has modified constructor\n\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false; // If has modified prototype\n\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false; // If constructor does not have an Object-specific method\n\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar dist = createCommonjsModule(function (module, exports) {\n  var __assign = commonjsGlobal && commonjsGlobal.__assign || function () {\n    __assign = Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) {\n          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n\n  var __spreadArrays = commonjsGlobal && commonjsGlobal.__spreadArrays || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n      s += arguments[i].length;\n    }\n\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n        r[k] = a[j];\n      }\n    }\n\n    return r;\n  };\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var seen = [];\n  /**\n   * Check if a value is an object or a function. Keep in mind that array, function, regexp, etc, are objects in JavaScript.\n   *\n   * @param value the value to check\n   * @return true if the value is an object or a function\n   */\n\n  function isObj(value) {\n    var type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n  }\n  /**\n   * Check if a value is a regular expression.\n   *\n   * @param value the value to check\n   * @return true if the value is a regular expression\n   */\n\n\n  function isRegexp(value) {\n    return Object.prototype.toString.call(value) === '[object RegExp]';\n  }\n  /**\n   * Get an array of all of the enumerable symbols for an object.\n   *\n   * @param object the object to get the enumerable symbols for\n   */\n\n\n  function getOwnEnumPropSymbols(object) {\n    return Object.getOwnPropertySymbols(object).filter(function (keySymbol) {\n      return Object.prototype.propertyIsEnumerable.call(object, keySymbol);\n    });\n  }\n  /**\n   * pretty print an object\n   *\n   * @param input the object to pretty print\n   * @param options the formatting options, transforms, and filters\n   * @param pad the padding string\n   */\n\n\n  function prettyPrint(input, options, pad) {\n    if (pad === void 0) {\n      pad = '';\n    } // sensible option defaults\n\n\n    var defaultOptions = {\n      indent: '\\t',\n      singleQuotes: true\n    };\n\n    var combinedOptions = __assign(__assign({}, defaultOptions), options);\n\n    var tokens;\n\n    if (combinedOptions.inlineCharacterLimit === undefined) {\n      tokens = {\n        newLine: '\\n',\n        newLineOrSpace: '\\n',\n        pad: pad,\n        indent: pad + combinedOptions.indent\n      };\n    } else {\n      tokens = {\n        newLine: '@@__PRETTY_PRINT_NEW_LINE__@@',\n        newLineOrSpace: '@@__PRETTY_PRINT_NEW_LINE_OR_SPACE__@@',\n        pad: '@@__PRETTY_PRINT_PAD__@@',\n        indent: '@@__PRETTY_PRINT_INDENT__@@'\n      };\n    }\n\n    var expandWhiteSpace = function expandWhiteSpace(string) {\n      if (combinedOptions.inlineCharacterLimit === undefined) {\n        return string;\n      }\n\n      var oneLined = string.replace(new RegExp(tokens.newLine, 'g'), '').replace(new RegExp(tokens.newLineOrSpace, 'g'), ' ').replace(new RegExp(tokens.pad + '|' + tokens.indent, 'g'), '');\n\n      if (oneLined.length <= combinedOptions.inlineCharacterLimit) {\n        return oneLined;\n      }\n\n      return string.replace(new RegExp(tokens.newLine + '|' + tokens.newLineOrSpace, 'g'), '\\n').replace(new RegExp(tokens.pad, 'g'), pad).replace(new RegExp(tokens.indent, 'g'), pad + combinedOptions.indent);\n    };\n\n    if (seen.indexOf(input) !== -1) {\n      return '\"[Circular]\"';\n    }\n\n    if (input === null || input === undefined || typeof input === 'number' || typeof input === 'boolean' || typeof input === 'function' || typeof input === 'symbol' || isRegexp(input)) {\n      return String(input);\n    }\n\n    if (input instanceof Date) {\n      return \"new Date('\" + input.toISOString() + \"')\";\n    }\n\n    if (Array.isArray(input)) {\n      if (input.length === 0) {\n        return '[]';\n      }\n\n      seen.push(input);\n      var ret = '[' + tokens.newLine + input.map(function (el, i) {\n        var eol = input.length - 1 === i ? tokens.newLine : ',' + tokens.newLineOrSpace;\n        var value = prettyPrint(el, combinedOptions, pad + combinedOptions.indent);\n\n        if (combinedOptions.transform) {\n          value = combinedOptions.transform(input, i, value);\n        }\n\n        return tokens.indent + value + eol;\n      }).join('') + tokens.pad + ']';\n      seen.pop();\n      return expandWhiteSpace(ret);\n    }\n\n    if (isObj(input)) {\n      var objKeys_1 = __spreadArrays(Object.keys(input), getOwnEnumPropSymbols(input));\n\n      if (combinedOptions.filter) {\n        objKeys_1 = objKeys_1.filter(function (el) {\n          return combinedOptions.filter && combinedOptions.filter(input, el);\n        });\n      }\n\n      if (objKeys_1.length === 0) {\n        return '{}';\n      }\n\n      seen.push(input);\n      var ret = '{' + tokens.newLine + objKeys_1.map(function (el, i) {\n        var eol = objKeys_1.length - 1 === i ? tokens.newLine : ',' + tokens.newLineOrSpace;\n        var isSymbol = typeof el === 'symbol';\n        var isClassic = !isSymbol && /^[a-z$_][a-z$_0-9]*$/i.test(el.toString());\n        var key = isSymbol || isClassic ? el : prettyPrint(el, combinedOptions);\n        var value = prettyPrint(input[el], combinedOptions, pad + combinedOptions.indent);\n\n        if (combinedOptions.transform) {\n          value = combinedOptions.transform(input, el, value);\n        }\n\n        return tokens.indent + String(key) + ': ' + value + eol;\n      }).join('') + tokens.pad + '}';\n      seen.pop();\n      return expandWhiteSpace(ret);\n    }\n\n    input = String(input).replace(/[\\r\\n]/g, function (x) {\n      return x === '\\n' ? '\\\\n' : '\\\\r';\n    });\n\n    if (!combinedOptions.singleQuotes) {\n      input = input.replace(/\"/g, '\\\\\"');\n      return \"\\\"\" + input + \"\\\"\";\n    }\n\n    input = input.replace(/\\\\?'/g, '\\\\\\'');\n    return \"'\" + input + \"'\";\n  }\n\n  exports.prettyPrint = prettyPrint;\n});\nunwrapExports(dist);\nvar dist_1 = dist.prettyPrint;\n\nfunction sortObject(value) {\n  // return non-object value as is\n  if (value === null || _typeof(value) !== 'object') {\n    return value;\n  } // return date and regexp values as is\n\n\n  if (value instanceof Date || value instanceof RegExp) {\n    return value;\n  } // make a copy of array with each item passed through sortObject()\n\n\n  if (Array.isArray(value)) {\n    return value.map(sortObject);\n  } // make a copy of object with key sorted\n\n\n  return Object.keys(value).sort().reduce(function (result, key) {\n    if (key === '_owner') {\n      return result;\n    }\n\n    if (key === 'current') {\n      // eslint-disable-next-line no-param-reassign\n      result[key] = '[Circular]';\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      result[key] = sortObject(value[key]);\n    }\n\n    return result;\n  }, {});\n}\n/* eslint-disable no-use-before-define */\n\n\nvar createStringTreeNode = function createStringTreeNode(value) {\n  return {\n    type: 'string',\n    value: value\n  };\n};\n\nvar createNumberTreeNode = function createNumberTreeNode(value) {\n  return {\n    type: 'number',\n    value: value\n  };\n};\n\nvar createReactElementTreeNode = function createReactElementTreeNode(displayName, props, defaultProps, childrens) {\n  return {\n    type: 'ReactElement',\n    displayName: displayName,\n    props: props,\n    defaultProps: defaultProps,\n    childrens: childrens\n  };\n};\n\nvar createReactFragmentTreeNode = function createReactFragmentTreeNode(key, childrens) {\n  return {\n    type: 'ReactFragment',\n    key: key,\n    childrens: childrens\n  };\n};\n\nvar supportFragment = Boolean(React.Fragment);\n\nvar getReactElementDisplayName = function getReactElementDisplayName(element) {\n  return element.type.displayName || (element.type.name !== '_default' ? element.type.name : null) || ( // function name\n  typeof element.type === 'function' // function without a name, you should provide one\n  ? 'No Display Name' : element.type);\n};\n\nvar noChildren = function noChildren(propsValue, propName) {\n  return propName !== 'children';\n};\n\nvar onlyMeaningfulChildren = function onlyMeaningfulChildren(children) {\n  return children !== true && children !== false && children !== null && children !== '';\n};\n\nvar filterProps = function filterProps(originalProps, cb) {\n  var filteredProps = {};\n  Object.keys(originalProps).filter(function (key) {\n    return cb(originalProps[key], key);\n  }).forEach(function (key) {\n    return filteredProps[key] = originalProps[key];\n  });\n  return filteredProps;\n};\n\nvar parseReactElement = function parseReactElement(element, options) {\n  var _options$displayName = options.displayName,\n      displayNameFn = _options$displayName === void 0 ? getReactElementDisplayName : _options$displayName;\n\n  if (typeof element === 'string') {\n    return createStringTreeNode(element);\n  } else if (typeof element === 'number') {\n    return createNumberTreeNode(element);\n  } else if (! /*#__PURE__*/React__default.isValidElement(element)) {\n    throw new Error(\"react-element-to-jsx-string: Expected a React.Element, got `\".concat(_typeof(element), \"`\"));\n  }\n\n  var displayName = displayNameFn(element);\n  var props = filterProps(element.props, noChildren);\n\n  if (element.ref !== null) {\n    props.ref = element.ref;\n  }\n\n  var key = element.key;\n\n  if (typeof key === 'string' && key.search(/^\\./)) {\n    // React automatically add key=\".X\" when there are some children\n    props.key = key;\n  }\n\n  var defaultProps = filterProps(element.type.defaultProps || {}, noChildren);\n  var childrens = React__default.Children.toArray(element.props.children).filter(onlyMeaningfulChildren).map(function (child) {\n    return parseReactElement(child, options);\n  });\n\n  if (supportFragment && element.type === React.Fragment) {\n    return createReactFragmentTreeNode(key, childrens);\n  }\n\n  return createReactElementTreeNode(displayName, props, defaultProps, childrens);\n};\n\nfunction noRefCheck() {}\n\nvar inlineFunction = function inlineFunction(fn) {\n  return fn.toString().split('\\n').map(function (line) {\n    return line.trim();\n  }).join('');\n};\n\nvar preserveFunctionLineBreak = function preserveFunctionLineBreak(fn) {\n  return fn.toString();\n};\n\nvar defaultFunctionValue = inlineFunction;\n\nvar formatFunction = function formatFunction(fn, options) {\n  var _options$functionValu = options.functionValue,\n      functionValue = _options$functionValu === void 0 ? defaultFunctionValue : _options$functionValu,\n      showFunctions = options.showFunctions;\n\n  if (!showFunctions && functionValue === defaultFunctionValue) {\n    return functionValue(noRefCheck);\n  }\n\n  return functionValue(fn);\n};\n\nvar formatComplexDataStructure = function formatComplexDataStructure(value, inline, lvl, options) {\n  var normalizedValue = sortObject(value);\n  var stringifiedValue = dist_1(normalizedValue, {\n    transform: function transform(currentObj, prop, originalResult) {\n      var currentValue = currentObj[prop];\n\n      if (currentValue && /*#__PURE__*/React.isValidElement(currentValue)) {\n        return formatTreeNode(parseReactElement(currentValue, options), true, lvl, options);\n      }\n\n      if (typeof currentValue === 'function') {\n        return formatFunction(currentValue, options);\n      }\n\n      return originalResult;\n    }\n  });\n\n  if (inline) {\n    return stringifiedValue.replace(/\\s+/g, ' ').replace(/{ /g, '{').replace(/ }/g, '}').replace(/\\[ /g, '[').replace(/ ]/g, ']');\n  } // Replace tabs with spaces, and add necessary indentation in front of each new line\n\n\n  return stringifiedValue.replace(/\\t/g, spacer(1, options.tabStop)).replace(/\\n([^$])/g, \"\\n\".concat(spacer(lvl + 1, options.tabStop), \"$1\"));\n};\n\nvar escape = function escape(s) {\n  return s.replace(/\"/g, '&quot;');\n};\n\nvar formatPropValue = function formatPropValue(propValue, inline, lvl, options) {\n  if (typeof propValue === 'number') {\n    return \"{\".concat(String(propValue), \"}\");\n  }\n\n  if (typeof propValue === 'string') {\n    return \"\\\"\".concat(escape(propValue), \"\\\"\");\n  } // > \"Symbols (new in ECMAScript 2015, not yet supported in Flow)\"\n  // @see: https://flow.org/en/docs/types/primitives/\n  // $FlowFixMe: Flow does not support Symbol\n\n\n  if (_typeof(propValue) === 'symbol') {\n    var symbolDescription = propValue.valueOf().toString().replace(/Symbol\\((.*)\\)/, '$1');\n\n    if (!symbolDescription) {\n      return \"{Symbol()}\";\n    }\n\n    return \"{Symbol('\".concat(symbolDescription, \"')}\");\n  }\n\n  if (typeof propValue === 'function') {\n    return \"{\".concat(formatFunction(propValue, options), \"}\");\n  }\n\n  if ( /*#__PURE__*/React.isValidElement(propValue)) {\n    return \"{\".concat(formatTreeNode(parseReactElement(propValue, options), true, lvl, options), \"}\");\n  }\n\n  if (propValue instanceof Date) {\n    return \"{new Date(\\\"\".concat(propValue.toISOString(), \"\\\")}\");\n  }\n\n  if (isPlainObject(propValue) || Array.isArray(propValue)) {\n    return \"{\".concat(formatComplexDataStructure(propValue, inline, lvl, options), \"}\");\n  }\n\n  return \"{\".concat(String(propValue), \"}\");\n};\n\nvar formatProp = function formatProp(name, hasValue, value, hasDefaultValue, defaultValue, inline, lvl, options) {\n  if (!hasValue && !hasDefaultValue) {\n    throw new Error(\"The prop \\\"\".concat(name, \"\\\" has no value and no default: could not be formatted\"));\n  }\n\n  var usedValue = hasValue ? value : defaultValue;\n  var useBooleanShorthandSyntax = options.useBooleanShorthandSyntax,\n      tabStop = options.tabStop;\n  var formattedPropValue = formatPropValue(usedValue, inline, lvl, options);\n  var attributeFormattedInline = ' ';\n  var attributeFormattedMultiline = \"\\n\".concat(spacer(lvl + 1, tabStop));\n  var isMultilineAttribute = formattedPropValue.includes('\\n');\n\n  if (useBooleanShorthandSyntax && formattedPropValue === '{false}' && !hasDefaultValue) {\n    // If a boolean is false and not different from it's default, we do not render the attribute\n    attributeFormattedInline = '';\n    attributeFormattedMultiline = '';\n  } else if (useBooleanShorthandSyntax && formattedPropValue === '{true}') {\n    attributeFormattedInline += \"\".concat(name);\n    attributeFormattedMultiline += \"\".concat(name);\n  } else {\n    attributeFormattedInline += \"\".concat(name, \"=\").concat(formattedPropValue);\n    attributeFormattedMultiline += \"\".concat(name, \"=\").concat(formattedPropValue);\n  }\n\n  return {\n    attributeFormattedInline: attributeFormattedInline,\n    attributeFormattedMultiline: attributeFormattedMultiline,\n    isMultilineAttribute: isMultilineAttribute\n  };\n};\n\nvar mergeSiblingPlainStringChildrenReducer = function mergeSiblingPlainStringChildrenReducer(previousNodes, currentNode) {\n  var nodes = previousNodes.slice(0, previousNodes.length > 0 ? previousNodes.length - 1 : 0);\n  var previousNode = previousNodes[previousNodes.length - 1];\n\n  if (previousNode && (currentNode.type === 'string' || currentNode.type === 'number') && (previousNode.type === 'string' || previousNode.type === 'number')) {\n    nodes.push(createStringTreeNode(String(previousNode.value) + String(currentNode.value)));\n  } else {\n    if (previousNode) {\n      nodes.push(previousNode);\n    }\n\n    nodes.push(currentNode);\n  }\n\n  return nodes;\n};\n\nvar isKeyOrRefProps = function isKeyOrRefProps(propName) {\n  return ['key', 'ref'].includes(propName);\n};\n\nvar sortPropsByNames = function sortPropsByNames(shouldSortUserProps) {\n  return function (props) {\n    var haveKeyProp = props.includes('key');\n    var haveRefProp = props.includes('ref');\n    var userPropsOnly = props.filter(function (oneProp) {\n      return !isKeyOrRefProps(oneProp);\n    });\n    var sortedProps = shouldSortUserProps ? _toConsumableArray(userPropsOnly.sort()) // We use basic lexical order\n    : _toConsumableArray(userPropsOnly);\n\n    if (haveRefProp) {\n      sortedProps.unshift('ref');\n    }\n\n    if (haveKeyProp) {\n      sortedProps.unshift('key');\n    }\n\n    return sortedProps;\n  };\n};\n\nfunction createPropFilter(props, filter) {\n  if (Array.isArray(filter)) {\n    return function (key) {\n      return filter.indexOf(key) === -1;\n    };\n  } else {\n    return function (key) {\n      return filter(props[key], key);\n    };\n  }\n}\n\nvar compensateMultilineStringElementIndentation = function compensateMultilineStringElementIndentation(element, formattedElement, inline, lvl, options) {\n  var tabStop = options.tabStop;\n\n  if (element.type === 'string') {\n    return formattedElement.split('\\n').map(function (line, offset) {\n      if (offset === 0) {\n        return line;\n      }\n\n      return \"\".concat(spacer(lvl, tabStop)).concat(line);\n    }).join('\\n');\n  }\n\n  return formattedElement;\n};\n\nvar formatOneChildren = function formatOneChildren(inline, lvl, options) {\n  return function (element) {\n    return compensateMultilineStringElementIndentation(element, formatTreeNode(element, inline, lvl, options), inline, lvl, options);\n  };\n};\n\nvar onlyPropsWithOriginalValue = function onlyPropsWithOriginalValue(defaultProps, props) {\n  return function (propName) {\n    var haveDefaultValue = Object.keys(defaultProps).includes(propName);\n    return !haveDefaultValue || haveDefaultValue && defaultProps[propName] !== props[propName];\n  };\n};\n\nvar isInlineAttributeTooLong = function isInlineAttributeTooLong(attributes, inlineAttributeString, lvl, tabStop, maxInlineAttributesLineLength) {\n  if (!maxInlineAttributesLineLength) {\n    return attributes.length > 1;\n  }\n\n  return spacer(lvl, tabStop).length + inlineAttributeString.length > maxInlineAttributesLineLength;\n};\n\nvar shouldRenderMultilineAttr = function shouldRenderMultilineAttr(attributes, inlineAttributeString, containsMultilineAttr, inline, lvl, tabStop, maxInlineAttributesLineLength) {\n  return (isInlineAttributeTooLong(attributes, inlineAttributeString, lvl, tabStop, maxInlineAttributesLineLength) || containsMultilineAttr) && !inline;\n};\n\nvar formatReactElementNode = function formatReactElementNode(node, inline, lvl, options) {\n  var type = node.type,\n      _node$displayName = node.displayName,\n      displayName = _node$displayName === void 0 ? '' : _node$displayName,\n      childrens = node.childrens,\n      _node$props = node.props,\n      props = _node$props === void 0 ? {} : _node$props,\n      _node$defaultProps = node.defaultProps,\n      defaultProps = _node$defaultProps === void 0 ? {} : _node$defaultProps;\n\n  if (type !== 'ReactElement') {\n    throw new Error(\"The \\\"formatReactElementNode\\\" function could only format node of type \\\"ReactElement\\\". Given:  \".concat(type));\n  }\n\n  var filterProps = options.filterProps,\n      maxInlineAttributesLineLength = options.maxInlineAttributesLineLength,\n      showDefaultProps = options.showDefaultProps,\n      sortProps = options.sortProps,\n      tabStop = options.tabStop;\n  var out = \"<\".concat(displayName);\n  var outInlineAttr = out;\n  var outMultilineAttr = out;\n  var containsMultilineAttr = false;\n  var visibleAttributeNames = [];\n  var propFilter = createPropFilter(props, filterProps);\n  Object.keys(props).filter(propFilter).filter(onlyPropsWithOriginalValue(defaultProps, props)).forEach(function (propName) {\n    return visibleAttributeNames.push(propName);\n  });\n  Object.keys(defaultProps).filter(propFilter).filter(function () {\n    return showDefaultProps;\n  }).filter(function (defaultPropName) {\n    return !visibleAttributeNames.includes(defaultPropName);\n  }).forEach(function (defaultPropName) {\n    return visibleAttributeNames.push(defaultPropName);\n  });\n  var attributes = sortPropsByNames(sortProps)(visibleAttributeNames);\n  attributes.forEach(function (attributeName) {\n    var _formatProp = formatProp(attributeName, Object.keys(props).includes(attributeName), props[attributeName], Object.keys(defaultProps).includes(attributeName), defaultProps[attributeName], inline, lvl, options),\n        attributeFormattedInline = _formatProp.attributeFormattedInline,\n        attributeFormattedMultiline = _formatProp.attributeFormattedMultiline,\n        isMultilineAttribute = _formatProp.isMultilineAttribute;\n\n    if (isMultilineAttribute) {\n      containsMultilineAttr = true;\n    }\n\n    outInlineAttr += attributeFormattedInline;\n    outMultilineAttr += attributeFormattedMultiline;\n  });\n  outMultilineAttr += \"\\n\".concat(spacer(lvl, tabStop));\n\n  if (shouldRenderMultilineAttr(attributes, outInlineAttr, containsMultilineAttr, inline, lvl, tabStop, maxInlineAttributesLineLength)) {\n    out = outMultilineAttr;\n  } else {\n    out = outInlineAttr;\n  }\n\n  if (childrens && childrens.length > 0) {\n    var newLvl = lvl + 1;\n    out += '>';\n\n    if (!inline) {\n      out += '\\n';\n      out += spacer(newLvl, tabStop);\n    }\n\n    out += childrens.reduce(mergeSiblingPlainStringChildrenReducer, []).map(formatOneChildren(inline, newLvl, options)).join(!inline ? \"\\n\".concat(spacer(newLvl, tabStop)) : '');\n\n    if (!inline) {\n      out += '\\n';\n      out += spacer(newLvl - 1, tabStop);\n    }\n\n    out += \"</\".concat(displayName, \">\");\n  } else {\n    if (!isInlineAttributeTooLong(attributes, outInlineAttr, lvl, tabStop, maxInlineAttributesLineLength)) {\n      out += ' ';\n    }\n\n    out += '/>';\n  }\n\n  return out;\n};\n\nvar REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX = '';\nvar REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX = 'React.Fragment';\n\nvar toReactElementTreeNode = function toReactElementTreeNode(displayName, key, childrens) {\n  var props = {};\n\n  if (key) {\n    props = {\n      key: key\n    };\n  }\n\n  return {\n    type: 'ReactElement',\n    displayName: displayName,\n    props: props,\n    defaultProps: {},\n    childrens: childrens\n  };\n};\n\nvar isKeyedFragment = function isKeyedFragment(_ref) {\n  var key = _ref.key;\n  return Boolean(key);\n};\n\nvar hasNoChildren = function hasNoChildren(_ref2) {\n  var childrens = _ref2.childrens;\n  return childrens.length === 0;\n};\n\nvar formatReactFragmentNode = function formatReactFragmentNode(node, inline, lvl, options) {\n  var type = node.type,\n      key = node.key,\n      childrens = node.childrens;\n\n  if (type !== 'ReactFragment') {\n    throw new Error(\"The \\\"formatReactFragmentNode\\\" function could only format node of type \\\"ReactFragment\\\". Given: \".concat(type));\n  }\n\n  var useFragmentShortSyntax = options.useFragmentShortSyntax;\n  var displayName;\n\n  if (useFragmentShortSyntax) {\n    if (hasNoChildren(node) || isKeyedFragment(node)) {\n      displayName = REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX;\n    } else {\n      displayName = REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX;\n    }\n  } else {\n    displayName = REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX;\n  }\n\n  return formatReactElementNode(toReactElementTreeNode(displayName, key, childrens), inline, lvl, options);\n};\n\nvar jsxStopChars = ['<', '>', '{', '}'];\n\nvar shouldBeEscaped = function shouldBeEscaped(s) {\n  return jsxStopChars.some(function (jsxStopChar) {\n    return s.includes(jsxStopChar);\n  });\n};\n\nvar escape$1 = function escape(s) {\n  if (!shouldBeEscaped(s)) {\n    return s;\n  }\n\n  return \"{`\".concat(s, \"`}\");\n};\n\nvar preserveTrailingSpace = function preserveTrailingSpace(s) {\n  var result = s;\n\n  if (result.endsWith(' ')) {\n    result = result.replace(/^(.*?)(\\s+)$/, \"$1{'$2'}\");\n  }\n\n  if (result.startsWith(' ')) {\n    result = result.replace(/^(\\s+)(.*)$/, \"{'$1'}$2\");\n  }\n\n  return result;\n};\n\nvar formatTreeNode = function formatTreeNode(node, inline, lvl, options) {\n  if (node.type === 'number') {\n    return String(node.value);\n  }\n\n  if (node.type === 'string') {\n    return node.value ? \"\".concat(preserveTrailingSpace(escape$1(String(node.value)))) : '';\n  }\n\n  if (node.type === 'ReactElement') {\n    return formatReactElementNode(node, inline, lvl, options);\n  }\n\n  if (node.type === 'ReactFragment') {\n    return formatReactFragmentNode(node, inline, lvl, options);\n  }\n\n  throw new TypeError(\"Unknow format type \\\"\".concat(node.type, \"\\\"\"));\n};\n\nvar formatTree = function formatTree(node, options) {\n  return formatTreeNode(node, false, 0, options);\n};\n\nvar reactElementToJsxString = function reactElementToJsxString(element) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$filterProps = _ref.filterProps,\n      filterProps = _ref$filterProps === void 0 ? [] : _ref$filterProps,\n      _ref$showDefaultProps = _ref.showDefaultProps,\n      showDefaultProps = _ref$showDefaultProps === void 0 ? true : _ref$showDefaultProps,\n      _ref$showFunctions = _ref.showFunctions,\n      showFunctions = _ref$showFunctions === void 0 ? false : _ref$showFunctions,\n      functionValue = _ref.functionValue,\n      _ref$tabStop = _ref.tabStop,\n      tabStop = _ref$tabStop === void 0 ? 2 : _ref$tabStop,\n      _ref$useBooleanShorth = _ref.useBooleanShorthandSyntax,\n      useBooleanShorthandSyntax = _ref$useBooleanShorth === void 0 ? true : _ref$useBooleanShorth,\n      _ref$useFragmentShort = _ref.useFragmentShortSyntax,\n      useFragmentShortSyntax = _ref$useFragmentShort === void 0 ? true : _ref$useFragmentShort,\n      _ref$sortProps = _ref.sortProps,\n      sortProps = _ref$sortProps === void 0 ? true : _ref$sortProps,\n      maxInlineAttributesLineLength = _ref.maxInlineAttributesLineLength,\n      displayName = _ref.displayName;\n\n  if (!element) {\n    throw new Error('react-element-to-jsx-string: Expected a ReactElement');\n  }\n\n  var options = {\n    filterProps: filterProps,\n    showDefaultProps: showDefaultProps,\n    showFunctions: showFunctions,\n    functionValue: functionValue,\n    tabStop: tabStop,\n    useBooleanShorthandSyntax: useBooleanShorthandSyntax,\n    useFragmentShortSyntax: useFragmentShortSyntax,\n    sortProps: sortProps,\n    maxInlineAttributesLineLength: maxInlineAttributesLineLength,\n    displayName: displayName\n  };\n  return formatTree(parseReactElement(element, options), options);\n};\n\nexports.default = reactElementToJsxString;\nexports.inlineFunction = inlineFunction;\nexports.preserveFunctionLineBreak = preserveFunctionLineBreak;"],"sourceRoot":""}