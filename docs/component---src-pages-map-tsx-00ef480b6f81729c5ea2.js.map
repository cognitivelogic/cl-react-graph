{"version":3,"sources":["webpack:///../node_modules/d3-request/src/request.js","webpack:///../node_modules/d3-request/src/type.js","webpack:///../node_modules/d3-request/src/json.js","webpack:///../node_modules/d3-request/src/html.js","webpack:///../node_modules/d3-dsv/src/dsv.js","webpack:///../node_modules/d3-request/src/text.js","webpack:///../node_modules/d3-request/src/xml.js","webpack:///../node_modules/d3-dsv/src/csv.js","webpack:///../node_modules/d3-dsv/src/tsv.js","webpack:///../node_modules/d3-request/src/dsv.js","webpack:///../node_modules/d3-request/src/csv.js","webpack:///../node_modules/d3-request/src/tsv.js","webpack:///./src/pages/map.tsx","webpack:///../src/Histogram.tsx","webpack:///../src/HistogramD3.ts","webpack:///../src/utils/defaults.ts","webpack:///../src/colors/index.js","webpack:///../src/d3/attrs.ts","webpack:///../src/tip.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///../src/colors/filterRange.ts","webpack:///./src/components/seo.tsx","webpack:///../src/grid.ts","webpack:///../src/utils/domain.ts","webpack:///../src/utils/svg.ts","webpack:///../src/Legend.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/JoyplotD3.ts","webpack:///../src/JoyPlot.tsx","webpack:///../src/PieChartD3.ts","webpack:///../src/PieChart.tsx","webpack:///../src/utils/bars.ts","webpack:///../src/utils/mouseOver.ts","webpack:///./src/data.ts","webpack:///../src/utils/scales.ts","webpack:///../src/lineChartD3.ts","webpack:///../src/LineChart.tsx","webpack:///../src/ScatterPlotD3.ts","webpack:///../src/ScatterPlot.tsx","webpack:///../src/HorizontalHistogramD3.ts","webpack:///../src/HorizontalHistogram.tsx","webpack:///../src/index.ts"],"names":["src_request","url","callback","request","mimeType","response","responseType","event","Object","d3_dispatch","headers","d3_collection","xhr","XMLHttpRequest","user","password","timeout","respond","o","result","status","type","responseText","hasResponse","call","e","XDomainRequest","test","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","name","value","toLowerCase","arguments","length","get","remove","set","data","send","post","method","open","has","setRequestHeader","each","overrideMimeType","error","fixCallback","on","abort","apply","Error","defaultMimeType","r","json","document","createRange","createContextualFragment","JSON","parse","EOL","xml","responseXML","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","i","stringify","join","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","rows","N","I","n","eof","eol","token","c","j","slice","replace","row","push","formatRow","formatValue","convert","object","customConverter","format","columnSet","create","forEach","column","inferColumns","concat","formatRows","csv","csvParse","tsv","tsvParse","src_dsv","_","responseOf","MapExample","_useState","useState","loading","setLoading","_useState2","geojson","setGeoJson","useEffect","collection","react_default","a","createElement","layout","seo","title","description","src","height","width","EColorManipulations","EGroupedBarLayout","histogramD3","svg","tipContainer","tipContent","container","dataSets","gridX","gridY","yAxisContainer","xAxisContainer","xAxisLabel","yAxisLabel","y","scaleLinear","x","scaleBand","innerScaleBand","props","axis","defaultAxis","bar","groupMargin","margin","overlayMargin","className","colorScheme","bins","counts","delay","domain","max","min","duration","grid","groupLayout","GROUPED","bottom","left","right","top","stacked","stroke","color","dasharray","linecap","tip","tips","tipContentFn","d","visible","el","newProps","this","mergeProps","makeSvg","sizeSVG","makeTip","_makeGrid","makeGrid","_makeScales","makeScales","append","attr","update","merge","drawAxes","valuesCount","maxValueCount","w","gridWidth","h","gridHeight","dataLabels","label","rangeRound","paddingInner","groupedMargin","groupedBarsUseSameXAxisValue","bandwidth","barMargin","xAxis","axisBottom","yAxis","axisLeft","ticks","axisLength","axisConfig","limitByValues","yAxisWidth","style","xAxisHeight","appendDomainRange","range","scale","isStacked","transition","attrs","selectAll","updateChart","groupData","stackedOffset","stackIndex","thisGroupData","find","gData","undefined","dx","oSet","filter","reduce","prev","next","offset","colors","scaleOrdinal","gHeight","g","bars","enter","xd","onClick","onMouseOver","hover","fx","move","onMouseOut","OVERLAID","Number","String","groupLabel","getBarWidth","currentHeight","barWidth","exit","xText","yText","count","drawGrid","destroy","Histogram","_this","_Component","ref","chart","state","parentWidth","handleResize","_this2","getDOMNode","offsetWidth","setState","getChartState","componentDidMount","_this3","window","addEventListener","componentDidUpdate","_this$props","rest","children","objectWithoutPropertiesLoose_default","assign","componentWillUnmount","removeEventListener","node","ReactDOM","findDOMNode","HTMLElement","render","_this4","Component","lineStyle","fill","opacity","shape-rendering","stroke-opacity","stroke-width","curveCatmullRom","dateFormat","numberFormat","dy","transform","tickSize","tickValues","__webpack_exports__","selection","keys","k","__webpack_require__","d3_selection__WEBPACK_IMPORTED_MODULE_0__","in","pageX","pageY","out","selector","select","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","propTypes","PropTypes","string","isRequired","func","m","module","exports","require","default","Color","hsl","array","luminosity","v","index","self","indexOf","sort","Math","random","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","defaultProps","arrayOf","makeYGridLines","makeXGridLines","axisWidth","tickFormat","drawHorizontalGrid","STACKED","applyDomainAffordance","inc","aDomain","allCounts","p","thisExtent","extent","hasOwnProperty","_ref2","shouldFormatTick","timeFormat","Date","isNaN","formatTick","b","childNodes","getElementsByTagName","removeChild","legendIconStyle","cursor","display","listStyle","Legend","_ref$theme","theme","onSelect","scheme","labels","active","key","backgroundColor","border","Header","siteTitle","index_es","position","variant","gatsby_browser_entry","to","Layout","Fragment","flexGrow","padding","paddingTop","getFullYear","href","_755544856","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","shape","joyPlotD3","containers","gridXContainer","gridYContainer","yOuterScaleBand","defaultGrid","joyTitle","_makeSvg","yDomain","thisCounts","item","yRange","getBins","Array","from","Set","_drawScales","yLabels","yOuterBounds","yTickSize","borderColors","ix","findIndex","html","_drawGrid","make_x_gridlines","make_y_gridlines","lineData","joyLabel","JoyPlot","pieChartD3","previousData","storedWidth","storedHeight","donutWidth","displayFn","setIndex","dataSet","drawChartBg","drawCharts","outerRadius","_props$donutWidth","radius","innerRadius","_props$donutWidth2","drawChart","tau","PI","bgArc","arc","startAngle","endAngle","background","thisPie","pie","arcs","thisArc","path","attrTween","interpolate","_current","arcTween","path2","centroid","PieChart","lodash_get__WEBPACK_IMPORTED_MODULE_0__","lodash_get__WEBPACK_IMPORTED_MODULE_0___default","_Histogram__WEBPACK_IMPORTED_MODULE_1__","overlay","nodes","data2","filterRange","buildScales","scaleLog","clamp","scaleTime","lineChartD3","xParseTime","xFormatTime","lineContainer","xScale","yScale","lineProps","curveType","show","strokeDashArray","strokeDashOffset","pointProps","info","toFixed","datumProps","line","point","_buildScales","mergeWith","objValue","srcValue","source","stack","_drawDataPointSet","getYAxisWidth","pointContainer","points","ys","xs","datum","parsedY","parsedX","xDomain","_drawLines","oldData","newD","l","empty","curve","drawAreas","area","y0","y1","_buildScales2","timeParse","toString","LineChart","_React$Component","scatterPlotD3","domainByTrait","choices","values","distModels","legendWidth","split","xSize","ySize","_drawLegend","legend","cell","_drawPoints","traits","nx","cross","plotCell","trait","ScatterPlot","componentWillReceiveProps","horizontalHistogramD3","xAxisY","isItStacked","gWidth","yd","HorizontalHistogram","histogram","src_LineChart","src_HorizontalHistogram"],"mappings":"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","file":"component---src-pages-map-tsx-00ef480b6f81729c5ea2.js","sourcesContent":["import {map} from \"d3-collection\";\nimport {dispatch} from \"d3-dispatch\";\n\nexport default function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n","import request from \"./request\";\n\nexport default function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n","import type from \"./type\";\n\nexport default type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n","import type from \"./type\";\n\nexport default type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import request from \"./request\";\n\nexport default function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request) {\n    return parse(request.responseText, row);\n  };\n}\n","import {csvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/csv\", csvParse);\n","import {tsvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/tab-separated-values\", tsvParse);\n","import { json } from 'd3-request';\nimport { FeatureCollection } from 'geojson';\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Map } from '../../../src';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data } from '../data';\n\nconst MapExample = () => {\n  const [loading, setLoading] = useState(true);\n\n  const [geojson, setGeoJson] = useState<FeatureCollection<any, any>>(null);\n  useEffect(() => {\n    const url = 'https://opendata.arcgis.com/datasets/8d3a9e6e7bd445e2bdcc26cdf007eac7_3.geojson';\n    json(url, (error, collection) => {\n      if (error) { throw error; }\n      setGeoJson(collection);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return <div>loading</div>;\n  }\n  return (\n    <Layout>\n      <SEO title=\"Histogram\" description=\"\" />\n      <h1>Map</h1>\n      <div>\n        <Map\n          data={data}\n          geojson={geojson}\n          height={400}\n          width={400} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default MapExample;\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  histogramD3,\n  IGroupDataItem,\n} from './HistogramD3';\nimport { DeepPartial } from './utils/types';\n\nexport interface IChartAdaptor<P> {\n  create: (el: Element, props: DeepPartial<P>) => void;\n  update: (el: Element, props: DeepPartial<P>) => void;\n  destroy: (el: Element) => void;\n}\n\nexport enum EColorManipulations {\n  'negate' = 'negate',\n  'lighten' = 'lighten',\n  'darken' = 'darken',\n  'saturate' = 'saturate',\n  'desaturate' = 'desaturate',\n  'whiten' = 'whiten',\n  'blacken' = 'blacken',\n  'fade' = 'fade',\n  'opaquer' = 'opaquer',\n  'rotate' = 'rotate',\n};\n\nexport interface IHistogramBar {\n  groupMargin: number;\n  margin: number;\n  hover?: Partial<Record<EColorManipulations, number>>,\n  overlayMargin: number; // When bars are rendered as EGroupedBarLayout.OVERLAID \n  width: number;\n}\n\nexport interface IGrid {\n  x: {\n    height: number;\n    ticks: number;\n    visible: boolean;\n    style: ISVGLineStyle;\n  };\n  y: {\n    style: ISVGLineStyle;\n    ticks: number;\n    visible: boolean;\n  };\n}\n\nexport interface IStroke {\n  color: ((d, i: number, colors: (i: number) => string) => string) | string;\n  dasharray: string;\n  linecap: 'butt' | 'round' | 'square';\n  width: number;\n}\n\nexport interface IAxes {\n  y: IAxis;\n  x: IAxis;\n}\nexport interface IHistogramDataSet {\n  borderColors?: string[];\n  colors?: string[];\n  label: string;\n  data: number[];\n}\n\nexport interface IHistogramData {\n  bins: string[];\n  counts: IHistogramDataSet[];\n  colorScheme?: string[];\n  title?: string;\n}\n\nexport interface IDomain {\n  max: number | null;\n  min: number | null;\n}\n\nexport interface IMargin {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n}\n\nexport enum EGroupedBarLayout {\n  GROUPED,\n  STACKED,\n  OVERLAID,\n}\nexport interface IHistogramProps {\n  axis: IAxes;\n  bar: IHistogramBar;\n  className: string;\n  data: IHistogramData;\n  delay: number;\n  duration: number;\n  colorScheme: string[];\n  domain: IDomain;\n  grid: IGrid;\n  height: number;\n  margin: IMargin;\n  /** \n   *  @deprecated\n   */\n  stacked: boolean;\n  groupLayout: EGroupedBarLayout;\n  onClick?: (bar: IGroupDataItem) => void;\n  stroke: IStroke;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\nexport type Scale = 'LINEAR' | 'TIME' | 'LOG';\n\nexport interface ISVGLineStyle {\n  'stroke': string;\n  'fill': string;\n  'opacity': number;\n  'stroke-width': number;\n  'stroke-opacity': number;\n  'shape-rendering': string;\n  'visible': boolean;\n}\n\ninterface ISVGTextStyle {\n  fill?: string;\n  'font-size'?: string;\n  dy?: string | number;\n  'stroke-opacity'?: number;\n  'text-anchor'?: string;\n  transform?: string;\n  x?: string | number;\n  y?: string | number;\n}\n\nexport interface IChartState {\n  parentWidth?: number;\n}\nexport interface IAxis {\n  dateFormat: string;\n  numberFormat: string;\n  ticks: number;\n  height: number;\n  label: string;\n  margin: number;\n  scale: Scale;\n  style: ISVGLineStyle;\n  text: {\n    style: ISVGTextStyle;\n  };\n  width: number;\n  tickSize: number;\n  tickValues: null | number[];\n  visible: boolean;\n}\n\nexport type TipContentFn<T> = (bins: T[], i: number, d: number, groupTitle?: string) => string;\n\n/**\n * Histogram component\n */\nclass Histogram extends Component<DeepPartial<IHistogramProps>, IChartState> {\n\n  private chart: IChartAdaptor<IHistogramProps>;\n  private ref: HTMLDivElement | null = null;\n\n  /**\n   * Constructor\n   */\n  constructor(props: DeepPartial<IHistogramProps>) {\n    super(props);\n    this.chart = histogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.update(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): DeepPartial<IHistogramProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default Histogram;\n","import {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { Selection } from 'd3-selection';\nimport merge from 'lodash/merge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridHeight,\n  gridWidth,\n  xAxisHeight,\n  yAxisWidth,\n} from './grid';\nimport {\n  EGroupedBarLayout,\n  IChartAdaptor,\n  IHistogramProps,\n} from './Histogram';\nimport tips, { makeTip } from './tip';\nimport {\n  barMargin,\n  getBarWidth,\n  groupedBarsUseSameXAxisValue,\n  groupedMargin,\n} from './utils/bars';\nimport {\n  axis as defaultAxis,\n  grid,\n} from './utils/defaults';\nimport {\n  appendDomainRange,\n  isStacked,\n  maxValueCount,\n  ticks,\n} from './utils/domain';\nimport {\n  onClick,\n  onMouseOut,\n  onMouseOver,\n} from './utils/mouseOver';\nimport {\n  makeGrid,\n  makeScales,\n  makeSvg,\n  sizeSVG,\n  TSelection,\n} from './utils/svg';\nimport { DeepPartial } from './utils/types';\n\nexport interface IGroupDataItem {\n  label: string;\n  groupLabel?: string;\n  value: number;\n}\n\nexport type IGroupData = IGroupDataItem[][];\n\nexport const histogramD3 = ((): IChartAdaptor<IHistogramProps> => {\n  let svg: Selection<any, any, any, any>;\n  let tipContainer;\n  let tipContent;\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n  let container: Selection<SVGElement, any, any, any>;\n  let dataSets: IGroupData;\n  let gridX: TSelection;\n  let gridY: TSelection;\n  let yAxisContainer: TSelection;\n  let xAxisContainer: TSelection;\n  let xAxisLabel: any;\n  let yAxisLabel: any;\n\n  const props: IHistogramProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0.1,\n      margin: 0,\n      overlayMargin: 5,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid,\n    groupLayout: EGroupedBarLayout.GROUPED,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stacked: false, // Deprecated use groupLayout instead\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const HistogramD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: DeepPartial<IHistogramProps> = {}) {\n      this.mergeProps(newProps);\n      svg = makeSvg(el, svg);\n      const { margin, width, height, className } = props;\n      sizeSVG(svg, { margin, width, height, className });\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n      [gridX, gridY] = makeGrid(svg);\n      [xAxisContainer, yAxisContainer, xAxisLabel, yAxisLabel] = makeScales(svg);\n      container = svg\n        .append<SVGElement>('g')\n        .attr('class', 'histogram-container');\n\n      this.update(el, newProps);\n    },\n\n    mergeProps(newProps: DeepPartial<IHistogramProps>) {\n      merge(props, newProps);\n      if (newProps.data) {\n        props.data = newProps.data as IHistogramProps['data'];\n      }\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Draw scales\n     */\n    drawAxes() {\n      const { axis, bar, domain, groupLayout, stacked, data, margin, height } = props;\n      const valuesCount = maxValueCount(data.counts);\n      const w = gridWidth(props);\n      const h = gridHeight(props);\n      const dataLabels = data.counts.map((c) => c.label);\n\n      x\n        .domain(data.bins)\n        .rangeRound([0, w])\n        .paddingInner(groupedMargin(bar));\n\n      innerScaleBand\n        .domain(groupedBarsUseSameXAxisValue({ groupLayout, stacked }) ? ['main'] : dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(barMargin(props.bar));\n\n      const xAxis = axisBottom<string>(x);\n      const yAxis = axisLeft<number>(y).ticks(axis.y.ticks);\n\n      /** X-Axis (label axis) set up */\n      ticks({\n        axis: xAxis,\n        valuesCount,\n        axisLength: w,\n        axisConfig: axis.x,\n        scaleBand: x,\n        limitByValues: true,\n      });\n\n      xAxisContainer\n        .attr('transform', 'translate(' + (yAxisWidth(axis) + axis.y.style['stroke-width']) + ',' +\n          (height - xAxisHeight(props.axis) - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      /** Y-Axis (value axis) set up */\n      appendDomainRange({\n        data: dataSets,\n        domain,\n        range: [h, 0],\n        scale: y,\n        stacked: isStacked({ groupLayout, stacked })\n      });\n\n      ticks({\n        axis: yAxis,\n        valuesCount,\n        axisLength: w,\n        axisConfig: axis.y,\n        scaleBand: y,\n      });\n\n      yAxisContainer\n        .attr('transform', 'translate(' + yAxisWidth(axis) + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      bins: string[],\n      groupData: IGroupData,\n    ) {\n      const { axis, height, width, margin, delay, duration, tip, groupLayout, stacked } = props;\n\n      const stackedOffset = (d: IGroupDataItem, stackIndex: number): number => {\n        const thisGroupData = groupData.find((gData) => {\n          return gData.find((dx) => dx.label === d.label) !== undefined;\n        });\n        const oSet = thisGroupData ?\n          thisGroupData\n            .filter((_, i) => i < stackIndex)\n            .reduce((prev, next) => prev + next.value, 0)\n          : 0;\n        const offset = isStacked({ groupLayout, stacked }) && stackIndex > 0\n          ? oSet\n          : 0;\n        return y(d.value + offset);\n      }\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const gHeight = gridHeight(props);\n\n      const g = container\n        .selectAll<SVGElement, {}>('g')\n        .data(groupData);\n\n      const bars = g.enter()\n        .append<SVGElement>('g')\n        .merge(g)\n        .attr('transform', (d: any[]) => {\n          let xd = x(d[0].label);\n          if (xd === undefined) {\n            xd = 0;\n          }\n          const xDelta = yAxisWidth(axis)\n            + axis.y.style['stroke-width']\n            + xd;\n          return `translate(${xDelta}, 0)`;\n        })\n\n        .selectAll<SVGElement, {}>('rect')\n        .data((d) => d);\n\n      bars\n        .enter()\n        .append<SVGElement>('rect')\n        .attr('height', 0)\n        .attr('y', stackedOffset)\n        .attr('class', 'bar')\n        .on('click', onClick(props.onClick))\n        .on('mouseover', onMouseOver({ bins, hover: props.bar.hover, colors, tipContentFn: props.tipContentFn, tipContent, tip, tipContainer }))\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', onMouseOut({ tip, tipContainer, colors }))\n        .merge(bars)\n        .attr('x', (d: IGroupDataItem, i: number) => {\n          const overlay = (props.groupLayout === EGroupedBarLayout.OVERLAID)\n            ? i * props.bar.overlayMargin\n            : Number(innerScaleBand(String(d.groupLabel)));\n          return overlay;\n        })\n        .attr('width', (d, i) => getBarWidth(i, props.groupLayout, props.bar, innerScaleBand))\n        .attr('fill', (d, i) => colors(String(i)))\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        .attr('y', stackedOffset)\n        // Hide bar's bottom border\n        .attr('stroke-dasharray',\n          (d: IGroupDataItem, i): string => {\n            const currentHeight = gHeight - (y(d.value));\n            const barWidth = getBarWidth(i, props.groupLayout, props.bar, innerScaleBand);\n            return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n          })\n        .attr('height', (d: IGroupDataItem): number => gHeight - (y(d.value)));\n\n      bars.exit().remove();\n      g.exit().remove();\n\n      const xText = xAxisLabel\n        .selectAll('text')\n        .data([axis.x.label]);\n\n      xText.enter().append('text')\n        .attr('class', 'x-axis-label')\n        .merge(xText)\n        .attr('transform',\n          'translate(' + (Number(width) / 2) + ' ,' +\n          ((height - xAxisHeight(props.axis) - (margin.left * 2)) + axis.x.margin) + ')')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n\n      const yText = yAxisLabel\n        .selectAll('text')\n        .data([axis.y.label]);\n\n      yText.enter().append('text')\n        .attr('class', 'y-axis-label')\n        .merge(yText)\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0)\n        .attr('x', 0 - (gHeight / 2 - (margin.top * 2)))\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: DeepPartial<IHistogramProps>) {\n      if (!newProps.data) {\n        return;\n      }\n      this.mergeProps(newProps);\n      if (!props.data.bins) {\n        return;\n      }\n      const { margin, width, height, className, data, visible } = props;\n      sizeSVG(svg, { margin, width, height, className });\n      dataSets = [];\n\n      data.counts.forEach((count) => {\n        count.data.forEach((value, i) => {\n          if (!dataSets[i]) {\n            dataSets[i] = [];\n          }\n          dataSets[i].push({\n            groupLabel: count.label,\n            label: data.bins[i],\n            value: visible[data.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n          });\n        });\n      });\n\n      this.drawAxes();\n      drawGrid(x, y, gridX, gridY, props, maxValueCount(data.counts));\n      this.updateChart(data.bins, dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HistogramD3;\n});\n","import { curveCatmullRom } from 'd3-shape';\n\nimport {\n  IAxes,\n  IStroke,\n} from '../';\nimport {\n  IGrid,\n  ISVGLineStyle,\n} from '../Histogram';\nimport { ILineProps } from '../LineChart';\n\nexport const lineStyle: ISVGLineStyle = {\n  'fill': '#000',\n  'opacity': 1,\n  'shape-rendering': 'auto',\n  'stroke': '#000',\n  'stroke-opacity': 1,\n  'stroke-width': 1,\n  'visible': true,\n};\n\nexport const stroke: IStroke = {\n  color: '#000',\n  dasharray: '0',\n  linecap: 'butt',\n  width: 1,\n};\n\nexport const line: ILineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: '#000',\n    show: true,\n  },\n  show: true,\n  stroke: '#000',\n  strokeDashArray: '0',\n  strokeDashOffset: 0,\n};\n\nexport const axis: IAxes = {\n  x: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        dy: '.35em',\n        transform: 'rotate(0)',\n        x: 0,\n        y: 10,\n      },\n    },\n    tickSize: 0,\n    ticks: 3,\n    tickValues: null,\n    visible: true,\n    width: 50,\n  },\n  y: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        fill: '#666',\n      },\n    },\n    tickSize: 20,\n    ticks: 3,\n    tickValues: null,\n    visible: true,\n    width: 50,\n  },\n};\n\nexport const grid: IGrid = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n","export default ['#4bbcad',\n  '#d54539',\n  '#5ab94d',\n  '#8a5cd3',\n  '#a4b243',\n  '#ba5ccd',\n  '#54995c',\n  '#cf47a1',\n  '#d29f3e',\n  '#5c6fda',\n  '#c36528',\n  '#5fa6dc',\n  '#d74770',\n  '#7d7430',\n  '#8a529e',\n  '#df9273',\n  '#5f74b8',\n  '#ac5450',\n  '#d192d7',\n  '#b26088'];\n","import { ISVGLineStyle } from '../Histogram';\n\n/**\n * Apply style object to a d3 selection\n * @param {Object} selection D3 selection\n * @param {Object} style Css styling\n * @return {Object} selection\n */\nexport default (selection, style: ISVGLineStyle) => {\n  Object.keys(style).forEach((k: string) => {\n    selection.attr(k, style[k]);\n  });\n  return selection;\n};\n","import { event } from 'd3-selection';\nimport { select } from 'd3-selection';\n\nexport default {\n  fx: {\n    in: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n      container.transition()\n        .duration(200)\n        .style('opacity', 0.9);\n    },\n    move: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n    },\n    out: (container) => {\n      container.transition()\n        .duration(100)\n        .style('opacity', 0);\n    },\n  },\n};\n\nexport const makeTip = (selector, tipContainer): { tipContainer: any, tipContent: any } => {\n  if (tipContainer) {\n    // Chart could be rebuilt - remove old tip\n    tipContainer.remove();\n  }\n  tipContainer = select(selector).append('div')\n    .attr('class', 'tooltip top')\n    .style('opacity', 0);\n\n  tipContainer.append('div')\n    .attr('class', 'tooltip-arrow');\n  return {\n    tipContainer,\n    tipContent: tipContainer.append('div')\n      .attr('class', 'tooltip-inner'),\n  };\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport get from 'lodash.get';\n\nimport attrs from './d3/attrs';\nimport { IAxes } from './Histogram';\n\n// Grid lines in y axis function\nexport const makeYGridLines = (y, ticks: number = 5) => {\n  return axisLeft(y)\n    .ticks(ticks);\n};\n\n// Grid lines in x axis function\nexport const makeXGridLines = (x, ticks: number = 5) => {\n  return axisBottom(x)\n    .ticks(ticks);\n};\n\nexport const drawGrid = (x, y, gridX, gridY, props, ticks) => {\n  const { height, width, axis, grid, margin } = props;\n  const axisWidth = axis.y.style['stroke-width'];\n\n  const offset = {\n    x: yAxisWidth(axis) + axisWidth,\n    y: gridHeight(props),\n  };\n\n  if (grid.x.visible) {\n    // Add the X grid lines\n    gridX.attr('transform', `translate(${offset.x}, ${offset.y})`)\n      .transition()\n      .call(makeXGridLines(x, get(grid, 'x.ticks', ticks))\n        .tickSize(-height + xAxisHeight(props.axis) + (margin.top * 2))\n        .tickFormat(() => ''));\n\n    attrs(gridX.selectAll('.tick line'), grid.x.style);\n    attrs(gridX.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n  }\n\n  if (grid.y.visible) {\n    // add the Y grid lines\n    gridY.attr('transform', `translate(${offset.x}, 0)`)\n      .transition()\n      .call(makeYGridLines(y, get(grid, 'y.ticks', ticks))\n        .tickSize(-width + (margin.left * 2) + yAxisWidth(axis))\n        .tickFormat(() => ''),\n      );\n\n    attrs(gridY.selectAll('.tick line'), grid.y.style);\n\n    // Hide the first horizontal grid line to show axis\n    gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n      .attr('display', 'none');\n    attrs(gridY.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n  }\n};\n\nexport const drawHorizontalGrid = (x, y, gridX, gridY, props, ticks) => {\n  const { height, width, axis, grid, margin } = props;\n  const axisWidth = axis.y.style['stroke-width'];\n\n  const offset = {\n    x: yAxisWidth(axis),\n    y: gridHeight(props) + margin.top,\n  };\n\n  if (grid.x.visible) {\n    // Add the X grid lines\n    gridX.attr('transform', `translate(${offset.x}, ${offset.y})`)\n      .transition()\n      .call(makeXGridLines(x, get(grid, 'x.ticks', ticks))\n        .tickSize(-height + xAxisHeight(props.axis) + (margin.top * 2))\n        .tickFormat(() => ''));\n\n    attrs(gridX.selectAll('.tick line'), grid.x.style);\n    attrs(gridX.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n  }\n\n  if (grid.y.visible) {\n    // add the Y grid lines\n    gridY.attr('transform', 'translate(' + (yAxisWidth(axis) + axisWidth) + ', 0)')\n      .transition()\n      .call(makeYGridLines(y, get(grid, 'y.ticks', ticks))\n        .tickSize(-width + (margin.left * 2) + yAxisWidth(axis))\n        .tickFormat(() => ''),\n      );\n\n    attrs(gridY.selectAll('.tick line'), grid.y.style);\n\n    // Hide the first horizontal grid line to show axis\n    gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n      .attr('display', 'none');\n    attrs(gridY.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n  }\n};\n\nexport const gridHeight = (props): number => {\n  const { height, margin, axis } = props;\n  return height - (margin.top * 2) - xAxisHeight(axis);\n};\n\nexport const yAxisWidth = (axis: IAxes) => {\n  return axis.y.label === ''\n    ? axis.y.width\n    : axis.y.width + 30;\n};\n\nexport const xAxisHeight = (axis: IAxes) => {\n  return axis.x.label === ''\n    ? axis.x.height\n    : axis.x.height + 30 + get(axis, 'x.margin', 0);\n};\n\nexport const gridWidth = (props): number => {\n  const { axis, width, margin } = props;\n  return width - (margin.left * 2) - yAxisWidth(axis);\n};\n","import { Axis } from 'd3';\nimport { extent } from 'd3-array';\nimport { format } from 'd3-format';\nimport { ScaleLinear } from 'd3-scale';\nimport { timeFormat } from 'd3-time-format';\nimport get from 'lodash/get';\n\nimport {\n  EGroupedBarLayout,\n  IAxis,\n  IDomain,\n  IHistogramDataSet,\n} from '../Histogram';\nimport { IGroupData } from '../HistogramD3';\nimport { AnyScale } from './scales';\n\nexport const isStacked = ({ groupLayout, stacked }) => {\n  return stacked || groupLayout === EGroupedBarLayout.STACKED;\n};\n\ninterface IAppendDomainRangeProps {\n  domain: IDomain;\n  scale: ScaleLinear<number, number>,\n  data: IGroupData | number[],\n  range: number[],\n  stacked: boolean,\n}\n\nexport const applyDomainAffordance = (v: number, inc: boolean = true) =>\n  inc ? v + v * 5 / 100\n    : v - v * 5 / 100;\n/**\n * Update a linear scale with range and domain values taken either from the compiled\n * group data. If the chart is stacked then sum all bin values first.\n */\nexport const appendDomainRange = (props: IAppendDomainRangeProps): void => {\n  const aDomain: number[] = [];\n  const { domain, data, stacked, scale, range } = props;\n\n  // const sta = isStacked({ groupLayout, stacked });\n\n  const allCounts: number[] = (data as any).reduce((prev: number[], next): number[] => {\n    return stacked\n      ? [...prev, next.reduce((p: number, n): number => p + (n.value || n), 0)]\n      : [...prev, ...next.map((n) => n.value || n)];\n  }, [0]);\n\n  const thisExtent = extent<any>(allCounts, (d) => d);\n  aDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n    ? domain.max\n    : applyDomainAffordance(Number(thisExtent[1]));\n  aDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n    ? domain.min\n    : Number(thisExtent[0]);\n\n  scale.range(range)\n    .domain(aDomain);\n}\n\nexport const shouldFormatTick = (axis: IAxis): boolean => {\n  return (axis.scale === 'TIME' && axis.hasOwnProperty('dateFormat'))\n    || axis.hasOwnProperty('numberFormat');\n}\n\nexport const formatTick = (axis: IAxis) => (v: string | number) => {\n  if (axis.scale === 'TIME') {\n    return timeFormat(axis.dateFormat)(new Date(v));\n  }\n  return isNaN(Number(v)) ? v : format(axis.numberFormat)(Number(v))\n};\n\n\ninterface ITickProps {\n  axis: Axis<string> | Axis<number> | Axis<number | { valueOf(): number }> | Axis<number | string>;\n  axisConfig: IAxis;\n  axisLength: number;\n  valuesCount: number;\n  scaleBand: AnyScale;\n  limitByValues?: boolean;\n}\nexport const ticks = ({\n  axis,\n  axisConfig,\n  axisLength,\n  valuesCount,\n  scaleBand,\n  limitByValues,\n}: ITickProps) => {\n  const tickSize = get(axisConfig, 'tickSize', undefined);\n  if (tickSize !== undefined) {\n    axis.tickSize(tickSize);\n  } else {\n    if (limitByValues && axisLength / valuesCount < 10) {\n      // Show one in 10 x axis labels\n      axis.tickValues((scaleBand.domain() as any[]).filter((d, i) => !(i % 10)));\n    }\n  }\n  if (shouldFormatTick(axisConfig)) {\n    axis.tickFormat(formatTick(axisConfig) as any);\n  }\n}\n\nexport const maxValueCount = (counts: IHistogramDataSet[]): number => {\n  return counts.reduce((a: number, b: IHistogramDataSet): number => {\n    return b.data.length > a ? b.data.length : a;\n  }, 0);\n};","import {\n  select,\n  Selection,\n} from 'd3-selection';\nimport { IMargin } from '../Histogram';\n\nexport type TSelection = Selection<any, any, any, any>;\nexport type TTextSelection = Selection<SVGTextElement, any, any, any>;\n\ninterface ISizeProps {\n  margin: IMargin;\n  width: number | string;\n  height: number | string;\n  className: string;\n}\n\nexport const makeSvg = (el: Element, svg: TSelection) => {\n  if (svg) {\n    svg.selectAll('svg > *').remove();\n    svg.remove();\n    const childNodes = el.getElementsByTagName('svg');\n    if (childNodes.length > 0) {\n      el.removeChild(childNodes[0]);\n    }\n  }\n  // Reference to svg element containing chart\n  svg = select(el).append('svg');\n  return svg;\n}\n\nexport const sizeSVG = (svg: TSelection, props: ISizeProps) => {\n  const { margin, width, height, className } = props;\n  const scale = {\n    x: 1 - (margin.left / Number(width)),\n    y: 1 - (margin.top / Number(height)),\n  };\n  svg.attr('class', className)\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .append('g')\n    .attr('transform', `translate(${margin.left},${margin.top}) scale(${scale.x},${scale.y})`);\n};\n\nexport const makeGrid = (svg: TSelection): [TSelection, TSelection] => {\n  const gridX = svg.append('g')\n    .attr('class', 'grid gridX');\n  const gridY = svg.append('g')\n    .attr('class', 'grid gridY');\n  return [gridX, gridY];\n}\n\nexport const makeScales = (svg: TSelection): [TSelection, TSelection, TSelection, TSelection] => {\n  return [\n    svg.append('g').attr('class', 'x-axis'),\n    svg.append('g').attr('class', 'y-axis'),\n    svg.append('g'),\n    svg.append('g'),\n  ];\n};","import { scaleOrdinal } from 'd3-scale';\nimport React, { FC } from 'react';\n\nimport colorScheme from './colors';\nimport { IHistogramDataSet } from './Histogram';\n\ninterface IProps {\n  className?: string;\n  theme?: string[];\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  onSelect: (label: string) => void;\n  visible: { [key: string]: boolean };\n}\n\nconst legendIconStyle = {\n  cursor: 'pointer',\n  display: 'inline-block',\n  height: '1rem',\n  margin: '0.25rem 0.5rem',\n  width: '1rem',\n};\n\nconst listStyle = {\n  listStyle: 'none',\n};\n\nconst Legend: FC<IProps> = ({ className, theme = colorScheme, data, onSelect, visible }) => {\n  const scheme: any = scaleOrdinal(theme);\n  const labels = data.bins;\n  return (\n    <div className={className}>\n      <ul style={listStyle}>\n        {\n          labels.map((label) => {\n            const active = (visible.hasOwnProperty(label) && visible[label]) || !visible.hasOwnProperty(label);\n            return (\n              <li key={label}>\n                <div style={{\n                  ...legendIconStyle,\n                  backgroundColor: active ? scheme(label) : '#FFF',\n                  border: '2px solid ' + scheme(label),\n                }}\n                  onClick={() => onSelect(label)}>\n                </div> {label}\n              </li>\n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default Legend;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"histogram\">Histogram</Link></Button>\n      <Button><Link to=\"line\">Line Chart</Link></Button>\n      <Button><Link to=\"pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport get from 'lodash.get';\nimport merge from 'lodash/merge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n} from './Histogram';\nimport { IJoyPlotProps } from './JoyPlot';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n} from './utils/defaults';\nimport { DeepPartial } from './utils/types';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const joyPlotD3 = ((): IChartAdaptor<IJoyPlotProps> => {\n  let svg: Selection<any, any, any, any>;;\n  let tipContainer;\n  let tipContent;\n  let dataSets: IGroupData[];\n  let containers: Array<Selection<SVGGElement, any, any, any>>;\n  let xAxisContainer: Selection<SVGGElement, any, any, any>;\n  let yAxisContainer: Selection<SVGGElement, any, any, any>;\n  let gridXContainer: Selection<SVGGElement, any, any, any>;\n  let gridYContainer: Selection<SVGGElement, any, any, any>;\n  const yOuterScaleBand = scaleBand();\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisLeft(yOuterScaleBand)\n      .ticks(ticks);\n  }\n\n  const props: IJoyPlotProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      overlayMargin: 5,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [{\n      bins: [],\n      counts: [],\n    }],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: defaultGrid,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins, i, d, joyTitle): string =>\n      joyTitle + ': ' +\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const JoyPlotD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: DeepPartial<IJoyPlotProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      containers = props.data.map((d, i) => svg\n        .append('g')\n        .attr('class', `histogram-container-${i}`),\n      );\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: DeepPartial<IJoyPlotProps>) {\n      merge(props, newProps);\n      if (newProps.data) {\n        props.data = newProps.data as IJoyPlotProps['data'];\n      }\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData[]): void {\n      const yDomain: number[] = [];\n      const { domain } = props;\n\n      const allCounts: number[] = data.reduce((prev, next) => {\n        const thisCounts: number[] = next.reduce((p, n) => {\n          return [...p, ...n.map((item) => item.value)];\n        }, [] as number[]);\n        return [...prev, ...thisCounts];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : Number(thisExtent[1]);\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : Number(thisExtent[0]);\n      const yRange = [yOuterScaleBand.bandwidth(), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    yAxisWidth() {\n      const { axis } = props;\n      return axis.y.label === ''\n        ? axis.y.width\n        : axis.y.width + 30;\n    },\n\n    xAxisHeight() {\n      const { axis } = props;\n      return axis.x.label === ''\n        ? axis.x.height\n        : axis.x.height + 30;\n    },\n\n    makeScales() {\n      const { axis, margin, height, width } = props;\n      xAxisContainer = svg.append('g').attr('class', 'x-axis');\n      yAxisContainer = svg.append('g').attr('class', 'y-axis');\n\n      if (axis.x.label !== '') {\n        svg.append('text')\n          .attr('class', 'x-axis-label')\n          .attr('transform',\n            'translate(' + (Number(width) / 2) + ' ,' +\n            ((height - this.xAxisHeight() - (margin.left * 2)) + 10 + axis.x.margin) + ')')\n          .style('text-anchor', 'middle')\n          .text(axis.x.label);\n      }\n\n      if (axis.y.label !== '') {\n        svg.append('text')\n          .attr('class', 'y-axis-label')\n          .attr('transform', 'translate(0, -' + this.gridHeight() + ')rotate(-90)')\n          .attr('y', 0 - margin.left)\n          .attr('x', 0 - (height / 2 - (margin.top * 2)))\n          .attr('dy', '1em')\n          .style('text-anchor', 'middle')\n          .text(axis.y.label);\n      }\n    },\n\n    getBins() {\n      return props.data.reduce((prev, next) => {\n        return Array.from(new Set(prev.concat(next.bins)));\n      }, [] as string[]);\n    },\n\n    /**\n     * Draw scales\n     */\n    _drawScales(data: IHistogramData[]) {\n      const { margin, height, axis } = props;\n      const valuesCount = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? c : prev;\n      }, 0);\n      const w = this.gridWidth();\n\n      let xAxis;\n      const dataLabels = data[0].counts.map((c) => c.label);\n\n      const bins = this.getBins();\n      x\n        .domain(bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      innerScaleBand\n        .domain(dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(this.barMargin());\n\n      xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n\n      xAxisContainer\n        .attr('transform', 'translate(' + (this.yAxisWidth() + axis.y.style['stroke-width']) + ',' +\n          (height - this.xAxisHeight() - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      const yLabels = data.map((d) => String(d.title));\n      const yOuterBounds: [number, number] = [height - (margin.top * 2) - this.xAxisHeight(), 0];\n      yOuterScaleBand.domain(yLabels)\n        .rangeRound(yOuterBounds);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft(yOuterScaleBand).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n\n      yAxisContainer\n        .attr('transform', 'translate(' + this.yAxisWidth() + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     */\n    gridWidth(): number {\n      const { width, margin } = props;\n      return Number(width) - (margin.left * 2) - this.yAxisWidth();\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     */\n    gridHeight(): number {\n      const { height, margin } = props;\n      return height - (margin.top * 2) - this.xAxisHeight();\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    /**\n     * Calculate the bar width\n     */\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      groupData: IGroupData[],\n    ) {\n      const bins = this.getBins();\n      const { delay, duration, axis, stroke, tip, tipContentFn } = props;\n      const barWidth = this.barWidth();\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const borderColors = scaleOrdinal(['#FFF']);\n\n      const yAxisWidth = this.yAxisWidth();\n\n      groupData.forEach((data, i) => {\n        const joyTitle = props.data[i].title;\n        const g = containers[i]\n          .selectAll<SVGGElement, {}>('g')\n          .data(data);\n\n        const bars = g.enter()\n          .append<SVGGElement>('g')\n          .merge(g)\n          .attr('transform', (d) => {\n            const xdelta = yAxisWidth\n              + axis.y.style['stroke-width']\n              + (x(d[0].label) || 0);\n\n            const ydelta = yOuterScaleBand(d[0].label);\n            return `translate(${xdelta}, ${ydelta})`;\n          })\n          .selectAll<SVGRectElement, {}>('rect')\n          .data((d) => d);\n\n        bars\n          .enter()\n          .append<SVGRectElement>('rect')\n          .attr('height', 0)\n          .attr('y', (d: IGroupDataItem): number => yOuterScaleBand.bandwidth())\n\n          .attr('class', 'bar')\n          .attr('x', (d) => String(innerScaleBand(d.label)))\n          .attr('width', (d) => barWidth)\n          .attr('fill', (d, ix) => colors(String(ix)))\n\n          .on('mouseover', (d: IGroupDataItem) => {\n            const ix = bins.findIndex((b) => b === d.label);\n            tipContent.html(() => tipContentFn(bins, ix, d.value, joyTitle));\n            tip.fx.in(tipContainer);\n          })\n          .on('mousemove', () => tip.fx.move(tipContainer))\n          .on('mouseout', () => tip.fx.out(tipContainer))\n          .merge(bars)\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('y', (d: IGroupDataItem): number => y(d.value))\n          .attr('stroke', (d, ix) => {\n            if (borderColors) {\n              return borderColors(String(ix));\n            }\n            return '';\n          })\n          .attr('shape-rendering', 'crispEdges')\n          .attr('stroke-width', stroke.width)\n          .attr('stroke-linecap', stroke.linecap)\n\n          // Hide bar's bottom border\n          .attr('stroke-dasharray',\n            (d: IGroupDataItem): string => {\n              const currentHeight = yOuterScaleBand.bandwidth() - y(d.value);\n              return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n            })\n          .attr('height', (d: IGroupDataItem): number =>\n            yOuterScaleBand.bandwidth() - y(d.value),\n          );\n\n        g.exit().remove();\n      });\n    },\n\n    makeGrid() {\n      gridXContainer = svg.append('g')\n        .attr('class', 'grid gridX');\n      gridYContainer = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin } = props;\n      const ticks = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? prev : c;\n      }, 0);\n      const axisWidth = axis.y.style['stroke-width'];\n\n      const offset = {\n        x: this.yAxisWidth() + axisWidth,\n        y: this.gridHeight(),\n      };\n\n      if (grid.x.visible) {\n        // Add the X gridlines\n        gridXContainer.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        gridXContainer.call(make_x_gridlines(get(grid, 'x.ticks', ticks))\n          .tickSize(-height + this.xAxisHeight() + (margin.top * 2))\n          .tickFormat(() => ''));\n\n        attrs(gridXContainer.selectAll('.tick line'), grid.x.style);\n        attrs(gridXContainer.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n      }\n\n      if (grid.y.visible) {\n        // add the Y gridlines\n        gridYContainer.attr('transform', 'translate(' + (this.yAxisWidth() + axisWidth) + ', 0)')\n          .transition()\n          .call(make_y_gridlines(get(grid, 'y.ticks', ticks))\n            .tickSize(-width + (margin.left * 2) + this.yAxisWidth())\n            .tickFormat(() => ''),\n          );\n\n        attrs(gridYContainer.selectAll('.tick line'), grid.y.style);\n\n        // Hide the first horizontal grid line to show axis\n        gridYContainer.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n          .attr('display', 'none');\n        attrs(gridYContainer.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: DeepPartial<IJoyPlotProps>) {\n      this.mergeProps(newProps);\n      const { data, visible } = props;\n\n      dataSets = data.map((d) => {\n        const lineData = [] as IGroupData;\n        d.counts.forEach((count) => {\n          count.data.forEach((value, i) => {\n            if (!lineData[i]) {\n              lineData[i] = [];\n            }\n            lineData[i].push({\n              groupLabel: count.label,\n              joyLabel: d.title,\n              label: d.bins[i],\n              value: visible[d.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n            } as IGroupDataItem);\n          });\n        });\n        return lineData;\n      });\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this.updateChart(dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return JoyPlotD3;\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IChartState,\n  IDomain,\n  IGrid,\n  IHistogramBar,\n  IHistogramData,\n  IMargin,\n  IStroke,\n  TipContentFn,\n} from './Histogram';\nimport { joyPlotD3 } from './JoyplotD3';\nimport { DeepPartial } from './utils/types';\n\nexport interface IJoyPlotProps {\n  axis: IAxes;\n  bar: IHistogramBar;\n  className: string;\n  data: IHistogramData[];\n  delay: number;\n  duration: number;\n  colorScheme: string[];\n  domain: IDomain;\n  grid: IGrid;\n  height: number;\n  margin: IMargin;\n  stroke: IStroke;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * JoyPlot component\n */\nclass JoyPlot extends Component<DeepPartial<IJoyPlotProps>, IChartState> {\n\n  private chart: IChartAdaptor<IJoyPlotProps>;\n  private ref: HTMLDivElement | null = null;\n\n  /**\n   * Constructor\n   */\n  constructor(props: DeepPartial<IJoyPlotProps>) {\n    super(props);\n    this.chart = joyPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.update(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): DeepPartial<IJoyPlotProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default JoyPlot;\n","import 'd3-transition';\n\nimport { interpolate } from 'd3-interpolate';\nimport { scaleOrdinal } from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport {\n  arc,\n  Arc,\n  pie,\n  PieArcDatum,\n} from 'd3-shape';\nimport get from 'lodash.get';\nimport merge from 'lodash/merge';\n\nimport colorScheme from './colors';\nimport {\n  IChartAdaptor,\n  IHistogramDataSet,\n} from './Histogram';\nimport {\n  IPieChartProps,\n  IPieDataItem,\n} from './PieChart';\nimport tips, { makeTip } from './tip';\nimport { DeepPartial } from './utils/types';\n\ninterface IPieDataset {\n  count: number;\n  groupLabel: string;\n  label: string;\n}\n\nexport const pieChartD3 = ((): IChartAdaptor<IPieChartProps> => {\n\n  let tipContainer;\n  let tipContent;\n\n  const props: IPieChartProps = {\n    backgroundColor: '#ddd',\n    className: 'piechart-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    donutWidth: 0,\n    height: 200,\n    labels: {\n      display: true,\n      displayFn: (d, ix) => d.value,\n    },\n    margin: {\n      bottom: 0,\n      left: 10,\n      right: 0,\n      top: 10,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number, groupLabel): string => {\n      return groupLabel + ': ' + bins[i] + '<br />' + d;\n    },\n    visible: {},\n    width: 200,\n  };\n\n  let containers: any[];\n  let svg: Selection<any, any, any, any>;\n  let dataSets: IPieDataset[][];\n  let previousData: any;\n  let current: any;\n  let storedWidth: number;\n  let storedHeight: number;\n\n  const PieChartD3 = {\n\n    create(el: Element, newProps: DeepPartial<IPieChartProps> = {}) {\n      merge(props, newProps);\n      previousData = props.data.counts.map((set: IHistogramDataSet, setIndex: number) => {\n        return set.data\n          .map((count, i) => ({\n            count,\n            groupLabel: set.label,\n            label: props.data.bins[i],\n          }));\n      });\n      this._makeSvg(el);\n      containers = [];\n      previousData.forEach((dataSet, i) => {\n        this.drawChartBg(props.data, i);\n      });\n\n      this.update(el, props);\n    },\n\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    update(el: Element, newProps: DeepPartial<IPieChartProps>) {\n      if (!props.data) {\n        return;\n      }\n      merge(props, newProps);\n      if (props.colorScheme) {\n        props.colorScheme = props.colorScheme;\n      }\n      if (!props.data.bins) {\n        return;\n      }\n\n      this.drawCharts();\n    },\n\n    outerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = props;\n\n      const radius = Math.min(Number(width), height) / 2;\n      return donutWidth === 0\n        ? radius - 10\n        : radius - 10 - (setIndex * (donutWidth + 10));\n    },\n\n    innerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = props;\n      const radius = Math.min(Number(width), height) / 2;\n      return donutWidth === 0\n        ? 0\n        : radius - 10 - donutWidth - (setIndex * (donutWidth + 10));\n    },\n\n    drawCharts() {\n      const { data, visible } = props;\n      dataSets = data.counts.map((set: IHistogramDataSet) => {\n        return set.data\n          .map((count, i) => ({\n            count: visible[data.bins[i]] !== false ? count : 0,\n            groupLabel: set.label,\n            label: data.bins[i],\n          }));\n      });\n\n      dataSets.forEach((dataSet, i) => {\n        const theme = get(data.counts[i], 'colors', props.colorScheme);\n        this.drawChart(dataSet, i, data.bins, theme);\n      });\n      previousData = dataSets;\n    },\n\n    drawChartBg(data, i) {\n      const { backgroundColor, width, height } = props;\n      const tau = 2 * Math.PI; // http://tauday.com/tau-manifesto\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n      const bgArc = arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius)\n        .startAngle(0)\n        .endAngle(tau);\n      const container = svg\n        .append('g')\n        .attr('class', 'pie-bg');\n      const background = container.append('path')\n        .attr('class', 'pie-background')\n        .style('fill', backgroundColor);\n      background.enter()\n        .attr('transform', 'translate(' + Number(width) / 2 + ',' + height / 2 + ')')\n        .attr('d', bgArc);\n\n      background.merge(background);\n\n      if (!containers[i]) {\n        containers[i] = svg\n          .append('g')\n          .attr('class', 'pie-container');\n      }\n    },\n\n    drawChart(data, i: number, bins: string[], theme: string[]) {\n      const { labels, width, height, tip, tipContentFn } = props;\n      // Stack multiple charts in concentric circles\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n\n      // Function to calculate pie chart paths from data\n      const thisPie = pie()\n        .sort(null)\n        .value((d: any) => d.count);\n\n      // Formated pie chart arcs based on previous current data\n      const arcs = thisPie(previousData[i]);\n\n      const colors = scaleOrdinal(theme);\n\n      const thisArc = arc()\n        .outerRadius(outerRadius)\n        .innerRadius(innerRadius);\n\n      const path = containers[i].selectAll('path')\n        .data(thisPie(data));\n\n      const g = path.enter().append('g')\n        .attr('class', 'arc');\n\n      g.append('path')\n        .attr('transform', 'translate(' + Number(width) / 2 + ',' + height / 2 + ')')\n        .attr('stroke', '#FFF')\n        .attr('fill', (d, j) => colors(j))\n\n        .each((d, j) => { current = arcs[j]; }) // store the initial angles\n        .attr('d', thisArc)\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .style('opacity', 0)\n        .transition()\n        .duration(500)\n        .style('opacity', 1);\n\n      // Fade in when adding (merge)\n      path\n        .merge(path)\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .transition()\n        .delay(400)\n        .duration(500)\n        .attr('fill', (d, j) => colors(j))\n        .attrTween('d', arcTween(thisArc));\n\n      const path2 = containers[i].selectAll('text.label')\n        .data(thisPie(data));\n      path2.enter().append('text')\n        .attr('class', 'label')\n        .each(() => {\n          // Store initial offset incase we change chart heights.\n          storedHeight = height;\n          storedWidth = Number(width);\n        })\n        .attr('transform', (d) => {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (storedWidth / 2);\n          const y = centroid[1] + (storedHeight / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .each((d: any) => {\n          // Store current value to work out fx transition opacities\n          current = d;\n        })\n        .text((d, ix) => {\n          if (d.value === 0) {\n            return '';\n          }\n          return labels.displayFn(d, ix);\n        });\n\n      path2\n        .merge(path2)\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .transition()\n        .attr('transform', (d) => {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (storedWidth / 2);\n          const y = centroid[1] + (storedHeight / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .transition()\n        .duration(500)\n        .style('opacity', (d) => {\n          // Only show if the new value is not 0 and labels are set to be displayed\n          return labels.display === false || d.data.value === 0 ? 0 : 1;\n        });\n\n      path2.exit().remove();\n\n      path.exit().transition()\n        .duration(500)\n        .style('opacity', 0).remove();\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n\n  return PieChartD3;\n});\n\n// Returns a tween for a transition’s \"d\" attribute, transitioning any selected\n// arcs from their current angle to the specified new angle.\nfunction arcTween(this: any, thisArc: Arc<any, any>) {\n  return function (this: any, d) {\n    const i = interpolate(this._current, d);\n    this._current = i(0);\n    return function (this: any, t) {\n      return thisArc(i(t));\n    };\n  };\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramDataSet,\n  IMargin,\n  TipContentFn,\n} from './Histogram';\nimport { pieChartD3 } from './PieChartD3';\nimport { DeepPartial } from './utils/types';\n\ninterface ILabels {\n  display: boolean;\n  displayFn: (d: any, ix: number) => string | number;\n}\n\nexport interface IPieDataItem {\n  count: number;\n  groupLabel: string;\n  label: string;\n}\n\nexport interface IPieChartProps {\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  backgroundColor: string;\n  className: string;\n  colorScheme: string[];\n  donutWidth: number;\n  height: number;\n  labels: ILabels;\n  margin: IMargin;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * PieChart component\n */\nclass PieChart extends Component<DeepPartial<IPieChartProps>, IChartState> {\n\n  private chart: IChartAdaptor<IPieChartProps>;\n  private ref: HTMLDivElement | null = null;\n\n  /**\n   * Constructor\n   */\n  constructor(props: DeepPartial<IPieChartProps>) {\n    super(props);\n    this.chart = pieChartD3();\n\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (el) {\n      const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n      this.setState({\n        parentWidth: width,\n      }, () => this.chart.update(el, this.getChartState()));\n    }\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (el) {\n      this.chart.create(el, this.getChartState());\n      if (this.props.width === '100%') {\n        window.addEventListener('resize', (e) => this.handleResize());\n        this.handleResize();\n      }\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (el) {\n      this.chart.update(el, this.getChartState());\n    }\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): DeepPartial<IPieChartProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    const el = this.getDOMNode();\n    if (el) {\n      this.chart.destroy(el);\n    }\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"piechart-chart-container\"></div>);\n  }\n}\n\nexport default PieChart;\n","import { ScaleBand } from 'd3-scale';\nimport get from 'lodash.get';\n\nimport { EGroupedBarLayout, IHistogramBar } from '../Histogram';\n\nexport const groupedBarsUseSameXAxisValue = ({ groupLayout, stacked }): boolean => {\n    return stacked || groupLayout === EGroupedBarLayout.STACKED || groupLayout === EGroupedBarLayout.OVERLAID;\n};\n\nexport const barMargin = (bar: IHistogramBar): number => {\n    const m = get(bar, 'margin', 0);\n    return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n};\n\nexport const getBarWidth = (\n    i: number,\n    groupLayout: EGroupedBarLayout,\n    bar: IHistogramBar,\n    innerScaleBand: ScaleBand<string>,\n) => {\n    const overlay = (groupLayout === EGroupedBarLayout.OVERLAID)\n        ? i * bar.overlayMargin * 2\n        : 0;\n    return innerScaleBand.bandwidth() - overlay;\n};\n\nexport const groupedMargin = (bar: IHistogramBar) => {\n    const m = get(bar, 'groupMargin', 0.1);\n    return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n}","import { IGroupDataItem } from '../HistogramD3';\nimport Color from 'color';\nimport {\n  select,\n} from 'd3-selection';\nimport { EColorManipulations, TipContentFn } from \"../Histogram\";\nimport { ScaleOrdinal } from \"d3\";\n\ninterface IProps {\n  bins: string[],\n  hover?: Partial<Record<EColorManipulations, number>>,\n  colors: ScaleOrdinal<string, string>,\n  tipContentFn: TipContentFn<string>,\n  tipContent: any,\n  tip: any,\n  tipContainer: string,\n};\n\ninterface IMouseOutProps {\n  colors: ScaleOrdinal<string, string>,\n  tip: any,\n  tipContainer: any,\n}\nexport const onMouseOver = (props: IProps) => (d: IGroupDataItem | any, i: number, nodes: any) => {\n  const {\n    bins,\n    hover,\n    colors,\n    tipContentFn,\n    tipContent,\n    tip,\n    tipContainer,\n  } = props;\n  const ix = bins.findIndex((b) => b === d.label);\n  // Initial color\n  let color = Color(colors(String(i)));\n  if (hover) {\n    // Apply hover modifiers\n    Object.keys(hover).forEach((key) => {\n      if (color[key]) {\n        color = color[key](hover![key]);\n      }\n    })\n    select(nodes[i])\n      .transition()\n      .duration(250)\n      .attr('fill', color.hsl().string());\n  }\n  tipContent.html(() => tipContentFn(bins, ix, d.value || d));\n  tip.fx.in(tipContainer);\n};\n\nexport const onMouseOut = (props: IMouseOutProps) => (d: IGroupDataItem | number, i: number, nodes: any) => {\n  const { tip, tipContainer, colors } = props;\n  tip.fx.out(tipContainer);\n  select(nodes[i])\n    .transition()\n    .duration(250)\n    .attr('fill', colors(String(i)));\n}\nexport const onClick = (onClick?: (v: any) => void) => (d: IGroupDataItem | number) => {\n  if (onClick) {\n    onClick(d);\n  }\n}","import { IHistogramData } from '../../src';\nimport filterRange from '../../src/colors/filterRange';\nimport { IGrid } from '../../src/Histogram';\nimport { lineStyle } from '../../src/utils/defaults';\n\nexport const grid: IGrid = {\n  x: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n","import {\n  scaleLinear,\n  ScaleLinear,\n  scaleLog,\n  ScaleLogarithmic,\n  scaleTime,\n  ScaleTime,\n  ScaleBand,\n} from 'd3-scale';\n\nimport { IAxes } from '../';\n\nexport type AnyScale = ScaleLinear<number, number>\n  | ScaleTime<any, any>\n  | ScaleLogarithmic<any, any>\n  | ScaleBand<string>;\n\nexport const buildScales = (axis: IAxes) => {\n  let x: AnyScale;\n  let y: AnyScale;\n  switch (axis.x.scale) {\n    case 'LOG':\n      x = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      x = scaleTime();\n      break;\n    default:\n      x = scaleLinear();\n      break;\n  }\n\n  switch (axis.y.scale) {\n    case 'LOG':\n      y = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      y = scaleTime();\n      break;\n    default:\n      y = scaleLinear();\n      break;\n  }\n  return [x, y];\n};\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport { Selection } from 'd3-selection';\nimport {\n  area,\n  curveCatmullRom,\n  CurveFactory,\n  CurveFactoryLineOnly,\n  line,\n} from 'd3-shape';\nimport {\n  timeFormat,\n  timeParse,\n} from 'd3-time-format';\nimport mergeWith from 'lodash.mergewith';\n\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridHeight,\n  gridWidth,\n  xAxisHeight as getXAxisHeight,\n  yAxisWidth as getYAxisWidth,\n} from './grid';\nimport { IChartAdaptor } from './Histogram';\nimport {\n  ILineChartDataSet,\n  ILineChartProps,\n  ILineProps,\n  ISVGPoint,\n} from './LineChart';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n  lineStyle,\n} from './utils/defaults';\nimport {\n  applyDomainAffordance,\n  ticks,\n} from './utils/domain';\nimport { buildScales } from './utils/scales';\nimport {\n  makeGrid,\n  makeScales,\n  makeSvg,\n  sizeSVG,\n  TSelection,\n} from './utils/svg';\nimport { DeepPartial } from './utils/types';\n\nconst ZERO_SUBSTITUTE: number = 1e-6;\n\nexport const lineChartD3 = ((): IChartAdaptor<ILineChartProps> => {\n  let svg: TSelection;\n  let tipContainer;\n  let xParseTime;\n  let xFormatTime;\n  let tipContent;\n\n  const lineProps: ILineProps = {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: '#eee',\n      show: false,\n    },\n    show: true,\n    stroke: '#005870',\n    strokeDashArray: '5 5',\n    strokeDashOffset: 0,\n  };\n\n  const pointProps: ISVGPoint = {\n    ...lineStyle,\n    fill: 'rgba(255, 255, 255, 0)',\n    radius: 4,\n    show: true,\n    stroke: '#005870',\n  };\n\n  const props: ILineChartProps = {\n    axis: defaultAxis,\n    className: 'line-chart-d3',\n    data: [],\n    grid: defaultGrid,\n    height: 250,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (info, i, d) => {\n      switch (typeof info[i].x) {\n        case 'object': // date\n          return xFormatTime(info[i].x) + ', ' + info[i].y;\n        default:\n          return Number(info[i].x).toFixed(3) + ', ' + info[i].y;\n      }\n    },\n    visible: {},\n    width: 200,\n  };\n\n  const datumProps = {\n    line: lineProps,\n    point: pointProps,\n  };\n\n  const curve = (\n    curveType: CurveFactory | CurveFactoryLineOnly,\n    yAxisWidth: number,\n    x,\n    y,\n  ) => line()\n    .curve(curveType)\n    .x((d: any) => x(d.x) + yAxisWidth)\n    .y((d: any) => y(d.y));\n\n  let container: Selection<SVGElement, any, any, any>;\n  let lineContainer: TSelection;\n  let gridX: TSelection;\n  let gridY: TSelection;\n  let xScale: any; // AnyScale;\n  let yScale: any; // AnyScale;\n  let xAxisContainer: TSelection;\n  let yAxisContainer: TSelection;\n  let xAxisLabel: TSelection;\n  let yAxisLabel: TSelection;\n\n  const LineChartD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: DeepPartial<ILineChartProps> = {}) {\n      this.mergeProps(newProps);\n      svg = makeSvg(el, svg);\n      const { margin, width, height, className } = props;\n      sizeSVG(svg, { margin, width, height, className });\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n      [xScale, yScale] = buildScales(props.axis);\n      [xAxisContainer, yAxisContainer, xAxisLabel, yAxisLabel] = makeScales(svg);\n      [gridX, gridY] = makeGrid(svg);\n      container = svg\n        .append<SVGElement>('g')\n        .attr('class', 'linechart-container');\n\n      lineContainer = container\n        .append<SVGElement>('g')\n        .attr('class', 'line-container');\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: DeepPartial<ILineChartProps>) {\n      const customerizer = (objValue, srcValue, key, object, source, stack) => {\n        if (key === 'data') {\n          return srcValue;\n        }\n      }\n      mergeWith(props, newProps, customerizer);\n    },\n\n    /**\n     * Iterate over the dataset drawing points for sets marked as\n     * requiring points.\n     */\n    _drawDataPointSet(data: ILineChartProps['data']) {\n      const { axis, tip, tipContentFn } = props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      const pointContainer = container.selectAll<SVGElement, {}>('g').data(data);\n\n      // Don't ask why but we must reference tipContentFn as props.tipContentFn otherwise\n      // it doesn't update with props changes\n      const onMouseOver = (d: any) => {\n        tipContent.html(() => tipContentFn([d as any], 0, 0, ''));\n        tip.fx.in(tipContainer);\n      };\n      const onMouseMove = () => tip.fx.move(tipContainer);\n      const onMouseOut = () => tip.fx.out(tipContainer);\n\n      const points = pointContainer.enter()\n        .append<SVGElement>('g')\n        .attr('class', (d, i: number) => 'point-container' + i)\n        .merge(pointContainer)\n        .selectAll<SVGElement, {}>('circle')\n        .data((d) => {\n          return d.data.map((dx) => ({\n            ...dx,\n            point: d.point,\n          }));\n        });\n\n      // UPDATE - Update old elements as needed.\n      points.attr('class', 'update');\n\n      // ENTER + UPDATE\n      // After merging the entered elements with the update selection,\n      // apply operations to both.\n      points.enter().append<SVGElement>('circle')\n        .attr('class', 'enter')\n        .on('mouseover', onMouseOver)\n        .on('mousemove', onMouseMove)\n        .on('mouseout', onMouseOut)\n        .merge(points)\n        .attr('class', 'point')\n        .attr('cy', (d) => yScale(d.y))\n        .attr('r', (d, i: number) => 0)\n        .attr('fill', (d) => d.point.fill)\n        .attr('stroke', (d) => d.point.stroke)\n        .attr('cx', (d) => {\n          return xScale(d.x) + yAxisWidth;\n        })\n        .transition()\n        .duration(400)\n        .attr('r', (d) => d.point.show ? d.point.radius : 0)\n        .delay(650);\n\n      // EXIT - Remove old elements as needed.\n      pointContainer.exit().remove();\n      points.exit().remove();\n    },\n\n    /**\n     * Draw the chart scales\n     */\n    drawAxes() {\n      // @TODO Grid not rendering down to x axis\n      const { axis, data } = props;\n      const valuesCount = data.reduce((a: number, b): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0)\n      const w = gridWidth(props);\n      const h = gridHeight(props);\n      const ys: any[] = [];\n      const xs: any[] = [];\n\n      const yAxis = axisLeft<number>(yScale);\n      const xAxis = axisBottom<number | string>(xScale);\n\n      ticks({\n        axis: xAxis,\n        valuesCount,\n        axisLength: w,\n        axisConfig: axis.x,\n        scaleBand: xScale,\n        limitByValues: true,\n      });\n\n      ticks({\n        axis: yAxis,\n        valuesCount,\n        axisLength: h,\n        axisConfig: axis.y,\n        scaleBand: yScale,\n      });\n\n      const yAxisWidth = getYAxisWidth(axis);\n\n      data.forEach((datum) => {\n        datum.data.forEach((d) => {\n          let parsedY = d.y;\n          let parsedX = d.x;\n          if (axis.y.scale === 'LOG' && d.y === 0) {\n            parsedY = ZERO_SUBSTITUTE;\n          }\n          if (axis.x.scale === 'LOG' && d.x === 0) {\n            parsedX = ZERO_SUBSTITUTE;\n          }\n          ys.push((parsedY));\n          xs.push((typeof parsedX === 'number' ? applyDomainAffordance(parsedX) : parsedX));\n        });\n      });\n      const yDomain = extent(ys);\n      yDomain[0] = applyDomainAffordance(yDomain[0], false);\n      yDomain[1] = applyDomainAffordance(yDomain[1]);\n\n      const xDomain = extent(xs);;\n      // domain mustn't be 0 as log(0) gives Infinity. 1 lower domain gives better looking graphs\n      if (axis.y.scale === 'LOG' && yDomain[0] === ZERO_SUBSTITUTE) {\n        yDomain[0] = 1;\n      }\n      if (axis.x.scale === 'LOG' && xDomain[0] === ZERO_SUBSTITUTE) {\n        xDomain[0] = 1;\n      }\n      xScale\n        .domain(xDomain)\n        .rangeRound([0, w]);\n      yScale.domain(yDomain)\n        .range([h, 0]);\n\n      yAxisContainer\n        .attr('transform', `translate(${yAxisWidth}, ${0})`)\n        .transition()\n        .call(yAxis);\n\n      xAxisContainer\n        .attr('transform', `translate(${yAxisWidth + axis.y.style['stroke-width']},${h})`)\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Iterate over data and update lines\n     */\n    _drawLines(data: Array<ILineChartDataSet<any>>, oldData: Array<ILineChartDataSet<any>>) {\n      const { axis } = props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      // Remove old lines\n      oldData.forEach((d, i) => {\n        const keep = data.find(((newD) => newD.label === d.label));\n        if (keep === undefined) {\n          const l = d.label.replace(/ /g, '');\n          lineContainer.select(`.line-${l}`)\n            .remove();\n        }\n      })\n\n      // change the line\n      data.forEach((d, i) => {\n        const selector = `line-${d.label.replace(/ /g, '')}`;\n        let selection = lineContainer.select(`.${selector}`)\n        if (selection.empty()) {\n          lineContainer.append('path')\n            .attr('class', selector);\n          selection = lineContainer.select(`.${selector}`)\n        }\n\n        selection\n          .attr('fill', 'none')\n          .attr('stroke-dashoffset', d.line.strokeDashOffset)\n          .attr('stroke-dasharray', d.line.strokeDashOffset)\n          .attr('stroke', d.line.stroke)\n          .transition()\n          .duration(500)\n          .attr('d', curve(d.line.curveType, yAxisWidth, xScale, yScale)(d.data as any) as any)\n          .delay(50);\n      });\n    },\n\n    /**\n     * Iterates ove data and updates area fills\n     */\n    drawAreas(data: Array<ILineChartDataSet<any>>, oldData: Array<ILineChartDataSet<any>>) {\n      const { axis } = props;\n      const h = gridHeight(props);\n      const yAxisWidth = getYAxisWidth(axis);\n      const thisArea = (curveType) => area()\n        .curve(curveType)\n        .x((d: any) => xScale(d.x) + yAxisWidth)\n        .y0((d) => h)\n        .y1((d: any) => yScale(d.y));\n\n      // Remove old lines\n      oldData.forEach((d, i) => {\n        const keep = data.find(((newD) => newD.label === d.label));\n        if (keep === undefined) {\n          const l = d.label.replace(/ /g, '');\n          lineContainer.select(`.fill-${l}`).remove();\n        }\n      })\n\n      // change the line\n      data\n        .forEach((d, i) => {\n          const selector = `fill-${d.label.replace(/ /g, '')}`;\n          let selection = lineContainer.select(`.${selector}`);\n          if (selection.empty()) {\n            lineContainer.append('path')\n              .attr('class', selector);\n            selection = lineContainer.select(`.${selector}`)\n\n          }\n          selection\n            .attr('fill', d.line.fill.fill)\n            .style('opacity', d.line.show && d.line.fill.show ? 1 : 0)\n            .transition()\n            .duration(500)\n            .delay(50)\n            .attr('d', thisArea(d.line.curveType)(d.data) as any);\n        });\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(data: ILineChartProps['data']): number {\n      return data.reduce((a: number, b): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: DeepPartial<ILineChartProps>) {\n      if (!newProps.data) {\n        return;\n      }\n      const oldData = [...props.data];\n      this.mergeProps(newProps);\n      const { margin, width, height, className } = props;\n      sizeSVG(svg, { margin, width, height, className });\n      [xScale, yScale] = buildScales(props.axis);\n      let data = props.data;\n\n      xParseTime = timeParse(props.axis.x.dateFormat);\n      xFormatTime = timeFormat(props.axis.x.dateFormat);\n      data = data.map((datum) => {\n        if (props.axis.x.scale === 'TIME') {\n          datum.data = datum.data.map((d) => {\n            const newd = {\n              ...d,\n              x: typeof d.x === 'object'\n                ? d.x\n                : xParseTime(d.x.toString()),\n            };\n            return newd;\n          });\n        }\n        // Assign in default line & point styles\n        return Object.assign({}, datumProps, datum);\n      });\n      this.drawAxes();\n      this._drawLines(data, oldData);\n      this.drawAreas(data, oldData);\n      drawGrid(xScale, yScale, gridX, gridY, props, this.valuesCount(data));\n      this._drawDataPointSet(data);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return LineChartD3;\n});\n","import {\n  CurveFactory,\n  CurveFactoryLineOnly,\n} from 'd3-shape';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IGrid,\n  IMargin,\n  ISVGLineStyle,\n  TipContentFn,\n} from './Histogram';\nimport { lineChartD3 } from './lineChartD3';\nimport { DeepPartial } from './utils/types';\n\ninterface IState {\n  parentWidth?: number;\n}\n\nexport type IChartPointValue = number | string | Date | object;\nexport interface IChartPoint<X extends IChartPointValue = Date | number, Y extends IChartPointValue = number> {\n  x: X;\n  y: Y;\n}\nexport interface ILineProps {\n  show: boolean;\n  fill: {\n    show: boolean;\n    fill: string;\n  };\n  curveType: CurveFactory | CurveFactoryLineOnly;\n  stroke: string;\n  strokeDashOffset: number;\n  strokeDashArray: string;\n}\n\nexport interface ILineChartDataSet<T> {\n  label: string;\n  point: {\n    radius: number;\n    stroke: string;\n    fill: string;\n    show: boolean;\n  };\n  line: ILineProps;\n  data: T[];\n}\n\nexport interface ISVGPoint extends ISVGLineStyle {\n  radius?: 4;\n  show: boolean;\n}\n\nexport interface ILineChartProps<T extends IChartPoint<IChartPointValue, IChartPointValue> = IChartPoint> {\n  axis: IAxes;\n  className: string;\n  data: Array<ILineChartDataSet<T>>;\n  grid: IGrid;\n  height: number | string;\n  margin: IMargin;\n  tip: any;\n  tipContainer?: string;\n  tipContentFn: TipContentFn<{ x: string | number, y: string | number }>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\nclass LineChart extends React.Component<DeepPartial<ILineChartProps>, IState> {\n\n  private chart: IChartAdaptor<ILineChartProps>;\n  private ref: HTMLDivElement | null = null;\n\n  constructor(props: DeepPartial<ILineChartProps>) {\n    super(props);\n    this.chart = lineChartD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.update(el, this.getChartState()));\n\n  }\n\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state. If a histogram has been assigned\n   * to the props, then render this data. Otherwise generate\n   * a random normal dist\n   */\n  public getChartState(): DeepPartial<ILineChartProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.destroy(el);\n  }\n\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  public render(): JSX.Element {\n    return <div ref={(ref) => this.ref = ref} className=\"chart-container\"></div>;\n  }\n}\n\nexport default LineChart;\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport merge from 'lodash/merge';\n\nimport colorScheme from './colors';\nimport { IChartAdaptor } from './Histogram';\nimport { IChartPoint } from './LineChart';\nimport { IScatterPlotProps } from './ScatterPlot';\nimport { DeepPartial } from './utils/types';\n\nexport const scatterPlotD3 = ((): IChartAdaptor<IScatterPlotProps> => {\n  let svg: Selection<any, any, any, any>;\n  const yScale = scaleLinear();\n  const xScale = scaleLinear();\n  const domainByTrait = {};\n  let xAxis;\n  let color;\n  let yAxis;\n\n  const props: IScatterPlotProps = {\n    choices: [],\n    className: 'scatter-plot-d3',\n    colorScheme,\n    data: {\n      keys: [],\n      values: []\n    },\n    delay: 0,\n    distModels: [],\n    duration: 400,\n    height: 300,\n    legendWidth: 100,\n    padding: 20,\n    radius: 4,\n    split: '',\n    width: '100%',\n  };\n\n  const GenerateChart = {\n\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: DeepPartial<IScatterPlotProps> = props) {\n      merge(props, newProps);\n      this.update(el, newProps);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element, data: IScatterPlotProps['data']) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { width, className, height, legendWidth, padding } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', Number(width) + padding + legendWidth)\n        .attr('height', height + padding)\n        .append('g')\n        .attr('transform', 'translate(' + padding + ',' + padding / 2 + ')');\n\n      color = scaleOrdinal(props.colorScheme);\n    },\n\n    /**\n     * Draw the chart scales\n     */\n    _drawScales(data: IScatterPlotProps['data']['keys']) {\n      const { height, padding, width } = props;\n      const xSize = Number(width) / data.length;\n      const ySize = height / data.length;\n      xScale.range([padding / 2, xSize - padding / 2]);\n      yScale.range([height - padding / 2, padding / 2]);\n\n      svg.selectAll('.x.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'x axis')\n        .attr('transform', (d, i) =>\n          'translate(' + (data.length - i - 1) * xSize + ',0)')\n        .each(function (this: any, d: any) {\n          xScale.domain(domainByTrait[d]);\n          select(this).call(xAxis);\n        });\n\n      svg.selectAll('.y.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'y axis')\n        .attr('transform', (d: any, i: number) => 'translate(0,' + i * ySize + ')')\n        .each(function (this: any, d: any) {\n          yScale.domain(domainByTrait[d]);\n          select(this).call(yAxis);\n        });\n    },\n\n    /**\n     * Make a legend showing spit choice options\n     */\n    _drawLegend() {\n      const { choices, padding, width, split } = props;\n      if (choices === undefined) {\n        return;\n      }\n      const legend = svg.append('g')\n        .attr('transform', 'translate(' + (Number(width) + padding / 2) +\n          ', ' + (padding + 50) + ')');\n\n      legend.append('g').append('text')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('dy', '.71em')\n        .text((d) => split);\n      legend.selectAll('.legendItem')\n        .data(choices)\n        .enter().append('g')\n        .each(function (this: any, c, i: number) {\n          const cell = select(this);\n          cell.append('rect')\n            .attr('class', 'legendItem')\n            .attr('x', 0)\n            .attr('y', 20 + (i * 15))\n            .attr('fill', color(i))\n            .attr('height', 10)\n            .attr('width', 10);\n\n          cell.append('text')\n            .attr('x', 15)\n            .attr('y', 20 + (i * 15))\n            .attr('dy', '.71em')\n            .text((d) => c);\n        });\n\n      legend.exit().remove();\n    },\n\n    /**\n     * Draw scatter points\n     */\n    _drawPoints(traits, width: number, height: number) {\n      const { data, delay, duration,\n        choices, split, padding, radius } = props;\n      const n = traits.length;\n      const cell = svg.selectAll('.cell')\n        .data(cross(traits, traits))\n        .enter().append('g')\n        .attr('class', 'cell')\n        .attr('transform', (d) => 'translate(' + (n - d.i - 1) * width +\n          ',' + d.j * width + ')')\n        .each(plot);\n\n      // Titles for the diagonal.\n      cell.filter((d) => d.i === d.j).append('text')\n        .attr('x', padding)\n        .attr('y', padding)\n        .attr('dy', '.71em')\n        .text((d) => d.x);\n\n      /**\n       * Plot a point\n       */\n      function plot(this: any, p: IChartPoint) {\n        const plotCell = select(this);\n        let circle: Selection<SVGCircleElement, any, any, any>;\n        xScale.domain(domainByTrait[Number(p.x)]);\n        yScale.domain(domainByTrait[Number(p.y)]);\n\n        plotCell.append<SVGRectElement>('rect')\n          .attr('class', 'frame')\n          .attr('x', padding / 2)\n          .attr('y', padding / 2)\n          .attr('width', width - padding)\n          .attr('height', height - padding);\n\n        circle = plotCell.selectAll('circle')\n          .data(data.values)\n          .enter().append('circle')\n          .attr('r', (d) => radius)\n          .attr('cx', (d) => xScale(d[Number(p.x)]))\n          .attr('cy', (d) => yScale(d[Number(p.y)]))\n          .style('fill', (d) => {\n            if (d[split]) {\n              const i = choices.findIndex((c) => c === d[split]);\n              return color(i);\n            }\n            return '#eeaabb';\n          });\n\n        circle\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('r', (d) => radius);\n      }\n\n      /**\n       * Create cross array\n       * // @TODO looks like d3 has its own cross function now...\n       */\n      function cross(a, b) {\n        const c: Array<{ x: number; i: number; y: number; j: number; }> = [];\n        const nx = a.length;\n        const m = b.length;\n        let i: number;\n        let j: number;\n        for (i = -1; ++i < nx;) {\n          for (j = -1; ++j < m;) {\n            c.push({ x: a[i], i, y: b[j], j });\n          }\n        }\n        return c;\n      }\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: DeepPartial<IScatterPlotProps>) {\n      merge(props, newProps);\n      if (!props.data) {\n        return;\n      }\n      const { data, distModels, height, width } = props;\n      this._makeSvg(el, props.data);\n      this._drawLegend();\n      const traits = data.keys.filter((k) => distModels.indexOf(k) !== -1);\n      const xSize = Number(width) / traits.length;\n      const ySize = height / traits.length;\n      const n = traits.length;\n\n      traits.forEach((trait) => {\n        domainByTrait[trait] = extent<any>(data.values, (d) => d[trait]);\n      });\n      xAxis = axisBottom(xScale)\n        .ticks(6)\n        .tickSize(xSize * n);\n      yAxis = axisLeft(yScale)\n        .ticks(6)\n        .tickSize(-ySize * n);\n\n      this._drawScales(traits);\n      this._drawPoints(traits, xSize, ySize);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return GenerateChart;\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n} from './Histogram';\nimport { scatterPlotD3 } from './ScatterPlotD3';\nimport { DeepPartial } from './utils/types';\n\nexport interface IScatterPlotProps {\n  choices: string[];\n  className: string;\n  data: {\n    keys: string[],\n    values: any[];\n  };\n  delay: number;\n  distModels: string[];\n  duration: number;\n  height: number;\n  legendWidth: number;\n  colorScheme: string[];\n  padding: number;\n  radius: number;\n  split: string;\n  width: string | number;\n}\nclass ScatterPlot extends Component<DeepPartial<IScatterPlotProps>, IChartState> {\n\n  private chart: IChartAdaptor<IScatterPlotProps>;\n  private ref: HTMLDivElement | null = null;\n\n  public static defaultProps = {\n    height: 400,\n    width: '100%',\n  };\n\n  constructor(props: IScatterPlotProps) {\n    super(props);\n    this.chart = scatterPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (el) {\n      const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n      this.setState({\n        parentWidth: width,\n      }, () => this.chart.update(el, this.getChartState()));\n    }\n  }\n\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  private getChartState(): DeepPartial<IScatterPlotProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  public componentWillReceiveProps(props: DeepPartial<IScatterPlotProps>) {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  public componentWillUnmount() {\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.destroy(el);\n  }\n\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  public render() {\n    return <div ref={(ref) => this.ref = ref} className=\"scatterplot-chart-container\"></div>;\n  }\n}\n\nexport default ScatterPlot;\n","import {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  Selection,\n} from 'd3-selection';\nimport merge from 'lodash/merge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  drawHorizontalGrid,\n  gridHeight,\n  gridWidth,\n  xAxisHeight,\n  yAxisWidth,\n} from './grid';\nimport {\n  EGroupedBarLayout,\n  IChartAdaptor,\n  IHistogramProps,\n} from './Histogram';\nimport {\n  IGroupData,\n  IGroupDataItem,\n} from './HistogramD3';\nimport tips, {\n  makeTip,\n} from './tip';\nimport {\n  barMargin,\n  getBarWidth,\n  groupedBarsUseSameXAxisValue,\n  groupedMargin,\n} from './utils/bars';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n} from './utils/defaults';\nimport {\n  appendDomainRange,\n  isStacked,\n  maxValueCount,\n  ticks,\n} from './utils/domain';\nimport {\n  onClick,\n  onMouseOut,\n  onMouseOver,\n} from './utils/mouseOver';\nimport {\n  makeGrid,\n  makeScales,\n  makeSvg,\n  sizeSVG,\n  TSelection,\n} from './utils/svg';\nimport {\n  DeepPartial,\n} from './utils/types';\n\nexport const horizontalHistogramD3 = ((): IChartAdaptor<IHistogramProps> => {\n  let svg: Selection<any, any, any, any>;;\n  let tipContainer;\n  let tipContent;\n  const x = scaleLinear();\n  const y = scaleBand();\n  const innerScaleBand = scaleBand();\n  let container: Selection<SVGElement, any, any, any>;\n  let dataSets: IGroupData;\n  let gridX: TSelection;\n  let gridY: TSelection;\n  let yAxisContainer: TSelection;\n  let xAxisContainer: TSelection;\n  let xAxisLabel: TSelection;\n  let yAxisLabel: TSelection;\n\n  const props: IHistogramProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0.1,\n      margin: 10,\n      overlayMargin: 5,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      colorScheme: [],\n      counts: [],\n    },\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: defaultGrid,\n    groupLayout: EGroupedBarLayout.GROUPED,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stacked: false, // Deprecated use groupLayout instead\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const HorizontalHistogramD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: DeepPartial<IHistogramProps> = {}) {\n      merge(props, newProps);\n      svg = makeSvg(el, svg);\n      const { margin, width, height, className } = props;\n      sizeSVG(svg, { margin, width, height, className });\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n      [gridX, gridY] = makeGrid(svg);\n      [xAxisContainer, yAxisContainer, xAxisLabel, yAxisLabel] = makeScales(svg);\n      container = svg\n        .append<SVGElement>('g')\n        .attr('class', 'histogram-container');\n\n      this.update(el, newProps);\n    },\n\n    /**\n    * Draw Axes\n    */\n    drawAxes() {\n      const { bar, data, domain, groupLayout, stacked, margin, width, height, axis } = props;\n      const valuesCount = maxValueCount(data.counts);\n      const w = gridWidth(props);\n      const h = gridHeight(props);\n      const dataLabels = data.counts.map((c) => c.label);\n\n      y.domain(data.bins)\n        .rangeRound([0, h])\n        .paddingInner(groupedMargin(bar));\n\n      innerScaleBand\n        .domain(groupedBarsUseSameXAxisValue({groupLayout, stacked}) ? ['main'] : dataLabels)\n        .rangeRound([0, y.bandwidth()])\n        .paddingInner(barMargin(props.bar));\n\n      const xAxis = axisBottom<number>(x);\n      const yAxis = axisLeft<string>(y);\n\n      /** Y-Axis (label axis) set up */\n\n      ticks({\n        axis: yAxis,\n        valuesCount,\n        axisLength: h,\n        axisConfig: axis.y,\n        scaleBand: y,\n        limitByValues: true,\n      });\n\n      yAxisContainer\n      .attr('transform', 'translate(' + yAxisWidth(axis) + ', ' + margin.top + ' )')\n      .call(yAxis);\n\n      /** X-Axis (value axis) set up */\n      appendDomainRange({\n        data: dataSets,\n        domain,\n        range: [0, Number(width) - (margin.top * 2) - axis.y.width],\n        scale: x,\n        stacked: isStacked({ groupLayout, stacked })\n      })\n\n      const xAxisY = height - xAxisHeight(props.axis) - margin.top;\n      xAxisContainer\n        .attr('transform', 'translate(' + yAxisWidth(axis) + ',' +\n        xAxisY + ')')\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      bins: string[],\n      groupData: IGroupData,\n    ) {\n      const { axis, height, margin, delay, duration, tip, groupLayout, stacked } = props;\n\n      const stackedOffset = (d: IGroupDataItem, stackIndex: number) => {\n        const thisGroupData = groupData.find((gData) => {\n          return gData.find((dx) => dx.label === d.label) !== undefined;\n        });\n        const oSet = (thisGroupData || [])\n          .filter((_, i) => i < stackIndex)\n          .reduce((prev, next) => prev + next.value, 0);\n        const isItStacked = isStacked({ groupLayout, stacked });\n        const offset = isItStacked && stackIndex > 0\n          ? oSet\n          : 0;\n        return isItStacked ? x(offset) : 0;\n      }\n      \n      const colors = scaleOrdinal(props.colorScheme);\n      const gWidth = gridWidth(props);\n\n      const g = container\n        .selectAll<SVGElement, {}>('g')\n        .data(groupData);\n\n      const bars = g.enter()\n        .append<SVGElement>('g')\n        .merge(g)\n        .attr('transform', (d: any[]) => {\n          let yd = y(d[0].label);\n          if (yd === undefined) {\n            yd = 0;\n          }\n          const x = yAxisWidth(axis) + axis.x.style['stroke-width'];\n          return `translate(${x}, ${margin.top + yd})`;\n        })\n\n        .selectAll<SVGElement, {}>('rect')\n        .data((d) => d);\n\n      bars\n        .enter()\n        .append<SVGElement>('rect')\n        .attr('width', 0)\n        .attr('x', stackedOffset)\n        .attr('class', 'bar')\n        .on('click', onClick(props.onClick))\n        .on('mouseover', onMouseOver({ bins, hover: props.bar.hover, colors, tipContentFn: props.tipContentFn, tipContent, tip, tipContainer }))\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', onMouseOut({ tip, tipContainer, colors }))\n        .merge(bars)\n        .attr('y', (d: IGroupDataItem, i: number) => {\n          const overlay = (props.groupLayout === EGroupedBarLayout.OVERLAID)\n            ? i * props.bar.overlayMargin\n            : Number(innerScaleBand(String(d.groupLabel)));\n          return overlay;\n        })\n        .attr('height', (d, i) => getBarWidth(i, props.groupLayout, props.bar, innerScaleBand))\n        .attr('fill', (d, i) => colors(String(i)))\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        .attr('x', stackedOffset)\n        // Hide bar's bottom border\n        .attr('stroke-dasharray',\n          (d: IGroupDataItem, i): string => {\n            const currentHeight = gWidth - (x(d.value));\n            const barWidth = getBarWidth(i, props.groupLayout, props.bar, innerScaleBand);\n            return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n          })\n          .attr('width', (d: IGroupDataItem): number => x(d.value));\n\n      bars.exit().remove();\n      g.exit().remove();\n\n      const yText = yAxisLabel\n        .selectAll<any, any>('text')\n        .data([axis.y.label]);\n\n      yText.enter().append('text')\n        .attr('class', 'y-axis-label')\n        .merge(yText)\n        .attr('transform',\n          'translate(' + (Number(height) / 2) + ' ,' +\n          ((height - yAxisWidth(props.axis) - (margin.left * 2)) + axis.x.margin) + ')')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n\n      const xText = yAxisLabel\n        .selectAll<any, any>('text')\n        .data([axis.x.label]);\n\n      xText.enter().append('text')\n        .attr('class', 'x-axis-label')\n        .merge(xText)\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0)\n        .attr('x', 0 - (gWidth / 2 - (margin.top * 2)))\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: DeepPartial<IHistogramProps>) {\n      if (!props.data) {\n        return;\n      }\n      merge(props, newProps);\n      if (!props.data.bins) {\n        return;\n      }\n      const { margin, width, height, className, data, visible } = props;\n      sizeSVG(svg, { margin, width, height, className });\n      dataSets = [];\n\n      data.counts.forEach((count) => {\n        count.data.forEach((value, i) => {\n          if (!dataSets[i]) {\n            dataSets[i] = [];\n          }\n          dataSets[i].push({\n            groupLabel: count.label,\n            label: data.bins[i],\n            value: visible[data.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n          });\n        });\n      });\n\n\n      this.drawAxes();\n      drawHorizontalGrid(x, y, gridX, gridY, props, maxValueCount(data.counts));\n      this.updateChart(data.bins, dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HorizontalHistogramD3;\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramProps,\n} from './Histogram';\nimport { horizontalHistogramD3 } from './HorizontalHistogramD3';\nimport { DeepPartial } from './utils/types';\n\n/**\n * Horizontal Histogram component\n */\nclass HorizontalHistogram extends Component<DeepPartial<IHistogramProps>, IChartState> {\n\n  private histogram: IChartAdaptor<IHistogramProps>;\n  private ref: HTMLDivElement | null = null;\n\n  /**\n   * Constructor\n   */\n  constructor(props: DeepPartial<IHistogramProps>) {\n    super(props);\n    this.histogram = horizontalHistogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.histogram.update(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.histogram.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.histogram.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): DeepPartial<IHistogramProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Props received, update the chart\n   */\n  public componentWillReceiveProps() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.histogram.update(el, this.getChartState());\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.histogram.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default HorizontalHistogram;\n","export {\n  default as Histogram,\n  EGroupedBarLayout,\n  IAxes,\n  IHistogramBar,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n  IStroke,\n} from './Histogram';\n\nexport {\n  default as LineChart,\n  IChartPoint,\n  ILineChartDataSet,\n  ILineChartProps,\n} from './LineChart';\n\nexport { default as Legend } from './Legend';\nexport { default as JoyPlot } from './JoyPlot';\n// import Map from './Map';\nexport { default as PieChart } from './PieChart';\nexport { default as ScatterPlot } from './ScatterPlot';\nexport { default as HorizontalHistogram } from './HorizontalHistogram';\nexport { default as filterRange } from './colors/filterRange';\n\nexport {\n  axis as defaultAxis,\n  lineStyle as defaultLineStyle,\n  stroke as defaultStroke,\n  line as defaultLine,\n  grid as defaultGrid,\n} from './utils/defaults';\n\n"],"sourceRoot":""}