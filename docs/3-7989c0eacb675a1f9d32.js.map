{"version":3,"sources":["webpack:///../node_modules/d3-path/src/path.js","webpack:///../node_modules/d3-shape/src/constant.js","webpack:///../node_modules/d3-shape/src/math.js","webpack:///../node_modules/d3-shape/src/arc.js","webpack:///../node_modules/d3-shape/src/curve/linear.js","webpack:///../node_modules/d3-shape/src/point.js","webpack:///../node_modules/d3-shape/src/line.js","webpack:///../node_modules/d3-shape/src/area.js","webpack:///../node_modules/d3-shape/src/descending.js","webpack:///../node_modules/d3-shape/src/identity.js","webpack:///../node_modules/d3-shape/src/pie.js","webpack:///../node_modules/d3-shape/src/curve/radial.js","webpack:///../node_modules/d3-shape/src/array.js","webpack:///../node_modules/d3-shape/src/symbol/diamond.js","webpack:///../node_modules/d3-shape/src/symbol/circle.js","webpack:///../node_modules/d3-shape/src/symbol/star.js","webpack:///../node_modules/d3-shape/src/noop.js","webpack:///../node_modules/d3-shape/src/symbol/triangle.js","webpack:///../node_modules/d3-shape/src/symbol/wye.js","webpack:///../node_modules/d3-shape/src/curve/basis.js","webpack:///../node_modules/d3-shape/src/curve/basisClosed.js","webpack:///../node_modules/d3-shape/src/curve/basisOpen.js","webpack:///../node_modules/d3-shape/src/curve/bundle.js","webpack:///../node_modules/d3-shape/src/curve/cardinal.js","webpack:///../node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///../node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///../node_modules/d3-shape/src/curve/catmullRom.js","webpack:///../node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///../node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///../node_modules/d3-shape/src/curve/linearClosed.js","webpack:///../node_modules/d3-shape/src/curve/monotone.js","webpack:///../node_modules/d3-shape/src/curve/natural.js","webpack:///../node_modules/d3-shape/src/curve/step.js","webpack:///../node_modules/d3-shape/src/index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///../node_modules/d3-ease/src/cubic.js","webpack:///../node_modules/d3-ease/src/poly.js","webpack:///../node_modules/d3-ease/src/sin.js","webpack:///../node_modules/d3-ease/src/back.js","webpack:///../node_modules/d3-ease/src/elastic.js","webpack:///../node_modules/d3-ease/src/index.js","webpack:///../node_modules/d3-geo/src/adder.js","webpack:///../node_modules/d3-geo/src/math.js","webpack:///../node_modules/d3-geo/src/noop.js","webpack:///../node_modules/d3-geo/src/stream.js","webpack:///../node_modules/d3-geo/src/area.js","webpack:///../node_modules/d3-geo/src/cartesian.js","webpack:///../node_modules/d3-geo/src/bounds.js","webpack:///../node_modules/d3-geo/src/centroid.js","webpack:///../node_modules/d3-geo/src/compose.js","webpack:///../node_modules/d3-geo/src/rotation.js","webpack:///../node_modules/d3-geo/src/circle.js","webpack:///../node_modules/d3-geo/src/clip/buffer.js","webpack:///../node_modules/d3-geo/src/pointEqual.js","webpack:///../node_modules/d3-geo/src/clip/rejoin.js","webpack:///../node_modules/d3-geo/src/polygonContains.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/threshold/sturges.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/merge.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/zip.js","webpack:///../node_modules/d3-geo/src/clip/index.js","webpack:///../node_modules/d3-geo/src/clip/antimeridian.js","webpack:///../node_modules/d3-geo/src/clip/circle.js","webpack:///../node_modules/d3-geo/src/clip/line.js","webpack:///../node_modules/d3-geo/src/clip/rectangle.js","webpack:///../node_modules/d3-geo/src/length.js","webpack:///../node_modules/d3-geo/src/interpolate.js","webpack:///../node_modules/d3-geo/src/path/area.js","webpack:///../node_modules/d3-geo/src/identity.js","webpack:///../node_modules/d3-geo/src/path/bounds.js","webpack:///../node_modules/d3-geo/src/path/centroid.js","webpack:///../node_modules/d3-geo/src/path/context.js","webpack:///../node_modules/d3-geo/src/path/measure.js","webpack:///../node_modules/d3-geo/src/path/string.js","webpack:///../node_modules/d3-geo/src/path/index.js","webpack:///../node_modules/d3-geo/src/transform.js","webpack:///../node_modules/d3-geo/src/projection/fit.js","webpack:///../node_modules/d3-geo/src/projection/resample.js","webpack:///../node_modules/d3-geo/src/projection/index.js","webpack:///../node_modules/d3-geo/src/projection/azimuthal.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/mercator.js","webpack:///../node_modules/d3-geo/src/projection/equirectangular.js","webpack:///../node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/equalEarth.js","webpack:///../node_modules/d3-geo/src/projection/gnomonic.js","webpack:///../node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///../node_modules/d3-geo/src/projection/orthographic.js","webpack:///../node_modules/d3-geo/src/projection/stereographic.js","webpack:///../node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///../node_modules/d3-geo/src/index.js","webpack:///../node_modules/d3-timer/src/timer.js","webpack:///../node_modules/d3-timer/src/timeout.js","webpack:///../node_modules/d3-transition/src/transition/schedule.js","webpack:///../node_modules/d3-transition/src/interrupt.js","webpack:///../node_modules/d3-transition/src/transition/tween.js","webpack:///../node_modules/d3-transition/src/transition/interpolate.js","webpack:///../node_modules/d3-transition/src/transition/remove.js","webpack:///../node_modules/d3-transition/src/transition/selection.js","webpack:///../node_modules/d3-transition/src/transition/style.js","webpack:///../node_modules/d3-transition/src/transition/text.js","webpack:///../node_modules/d3-transition/src/transition/index.js","webpack:///../node_modules/d3-transition/src/transition/select.js","webpack:///../node_modules/d3-transition/src/transition/selectAll.js","webpack:///../node_modules/d3-transition/src/transition/filter.js","webpack:///../node_modules/d3-transition/src/transition/merge.js","webpack:///../node_modules/d3-transition/src/transition/transition.js","webpack:///../node_modules/d3-transition/src/transition/on.js","webpack:///../node_modules/d3-transition/src/transition/attr.js","webpack:///../node_modules/d3-transition/src/transition/attrTween.js","webpack:///../node_modules/d3-transition/src/transition/styleTween.js","webpack:///../node_modules/d3-transition/src/transition/delay.js","webpack:///../node_modules/d3-transition/src/transition/duration.js","webpack:///../node_modules/d3-transition/src/transition/ease.js","webpack:///../node_modules/d3-transition/src/transition/end.js","webpack:///../node_modules/d3-transition/src/selection/transition.js","webpack:///../node_modules/d3-transition/src/selection/index.js","webpack:///../node_modules/d3-transition/src/selection/interrupt.js","webpack:///../node_modules/d3-dispatch/src/dispatch.js","webpack:///../node_modules/d3-dispatch/index.js","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["pi","Math","PI","tau","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","src_path","constant","atan2","max","min","math_epsilon","math_pi","halfPi","math_tau","asin","arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x10","y10","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","src_arc","cornerRadius","padRadius","context","buffer","r0","apply","arguments","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","x3","y3","x32","y32","t","intersect","ax","ay","bx","by","kc","lc","centroid","a","length","Linear","_context","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","point","linear","point_x","p","point_y","src_line","defined","curve","output","line","data","i","n","defined0","src_area","area","j","k","x0z","Array","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending","b","identity","src_pie","value","sortValues","sort","pie","v","sum","index","arcs","pa","curveRadial","Radial","_curve","radial","slice","kr","noop","that","Basis","basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","push","custom","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","x23","y23","pow","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","Natural","controlPoints","_t0","Object","create","call","px","py","i0","i1","Step","_t","step","stepBefore","stepAfter","__webpack_require__","__webpack_exports__","$export","P","fill","cubicInOut","e","polyIn","exponent","polyOut","polyInOut","s","backIn","overshoot","backOut","backInOut","elasticIn","amplitude","period","elasticOut","elasticInOut","adder","Adder","reset","add","temp","valueOf","bv","av","epsilon","quarterPi","degrees","radians","atan","exp","ceil","log","floor","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","polygonStart","polygonEnd","src_stream","cartesian_spherical","cartesian","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","src_rotation","rotate","forward","circleStream","radius","delta","direction","cosRadius","sinRadius","circleRadius","lines","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","rejoin_link","start","current","isSubject","array","polygonContains_sum","polygonContains","polygon","sinPhi","normal","angle","winding","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","intersection","phiArc","ascending","compare","f","array_array","map","merge","arrays","merged","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","filter","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","uu","t2","q","polar","q1","code","c0","v0","v00","point2","c","clip_line","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","b0","b1","polygonInside","cleanInside","area_x00","area_y00","area_x0","area_y0","src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","Infinity","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_radius","pointRadius","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","join","projection","projectionStream","contextStream","transformer","methods","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","fitExtent","extent","fitSize","size","fitWidth","width","fitHeight","height","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","lambda2","dx2","dy2","dz","lambda00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","bi","ci","fi","transform","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","transformRotate","undefined","clipAngle","precision","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercator","mercatorProjection","reclip","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","taskHead","taskTail","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","setTimeout","clearNow","Timer","_call","_time","_next","timer","callback","delay","time","restart","wake","timerFlush","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","src_timeout","elapsed","emptyOn","d3_dispatch","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","node","name","id","group","timing","schedules","__transition","self","tween","state","on","__data__","tick","duration","ease","init","schedule","get","set","tweenValue","transition","_id","each","transition_interpolate","d3_interpolate_src","d3_color_src","Selection","src","styleRemove","style","removeProperty","transition_id","Transition","groups","parents","_groups","_parents","_name","newId","selection_prototype","select","subgroups","subnode","subgroup","selectAll","child","children","inherit","match","groups0","groups1","m0","m1","merges","group0","group1","selection","id0","id1","nodes","empty","listener","on0","on1","sit","trim","split","every","indexOf","on_start","copy","onFunction","attr","fullname","attrTween","local","string00","string10","interpolate0","string0","string1","value1","getAttributeNS","space","removeAttributeNS","getAttribute","removeAttribute","_value","setAttributeNS","attrInterpolateNS","setAttribute","attrInterpolate","priority","styleTween","styleNull","styleFunction","listener0","remove","event","styleMaybeRemove","styleConstant","setProperty","styleInterpolate","text","textContent","textFunction","textConstant","parent","parentNode","removeChild","tween0","tween1","splice","easeConstant","end","Promise","resolve","reject","cancel","interrupt","defaultTiming","transition_inherit","active","dispatch","Dispatch","typename","types","T","args","src_dispatch","toObject","toAbsoluteIndex","toLength","module","exports","O","aLen","endPos"],"mappings":"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","file":"3-7989c0eacb675a1f9d32.js","sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","export var slice = Array.prototype.slice;\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default function() {}\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export {default as arc} from \"./arc\";\nexport {default as area} from \"./area\";\nexport {default as line} from \"./line\";\nexport {default as pie} from \"./pie\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial\";\nexport {linkHorizontal, linkVertical, linkRadial} from \"./link/index\";\n\nexport {default as symbol, symbols} from \"./symbol\";\nexport {default as symbolCircle} from \"./symbol/circle\";\nexport {default as symbolCross} from \"./symbol/cross\";\nexport {default as symbolDiamond} from \"./symbol/diamond\";\nexport {default as symbolSquare} from \"./symbol/square\";\nexport {default as symbolStar} from \"./symbol/star\";\nexport {default as symbolTriangle} from \"./symbol/triangle\";\nexport {default as symbolWye} from \"./symbol/wye\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen\";\nexport {default as curveBasis} from \"./curve/basis\";\nexport {default as curveBundle} from \"./curve/bundle\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen\";\nexport {default as curveCardinal} from \"./curve/cardinal\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed\";\nexport {default as curveLinear} from \"./curve/linear\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone\";\nexport {default as curveNatural} from \"./curve/natural\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step\";\n\nexport {default as stack} from \"./stack\";\nexport {default as stackOffsetExpand} from \"./offset/expand\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging\";\nexport {default as stackOffsetNone} from \"./offset/none\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle\";\nexport {default as stackOrderAppearance} from \"./order/appearance\";\nexport {default as stackOrderAscending} from \"./order/ascending\";\nexport {default as stackOrderDescending} from \"./order/descending\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut\";\nexport {default as stackOrderNone} from \"./order/none\";\nexport {default as stackOrderReverse} from \"./order/reverse\";\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export {\n  linear as easeLinear\n} from \"./linear\";\n\nexport {\n  quadInOut as easeQuad,\n  quadIn as easeQuadIn,\n  quadOut as easeQuadOut,\n  quadInOut as easeQuadInOut\n} from \"./quad\";\n\nexport {\n  cubicInOut as easeCubic,\n  cubicIn as easeCubicIn,\n  cubicOut as easeCubicOut,\n  cubicInOut as easeCubicInOut\n} from \"./cubic\";\n\nexport {\n  polyInOut as easePoly,\n  polyIn as easePolyIn,\n  polyOut as easePolyOut,\n  polyInOut as easePolyInOut\n} from \"./poly\";\n\nexport {\n  sinInOut as easeSin,\n  sinIn as easeSinIn,\n  sinOut as easeSinOut,\n  sinInOut as easeSinInOut\n} from \"./sin\";\n\nexport {\n  expInOut as easeExp,\n  expIn as easeExpIn,\n  expOut as easeExpOut,\n  expInOut as easeExpInOut\n} from \"./exp\";\n\nexport {\n  circleInOut as easeCircle,\n  circleIn as easeCircleIn,\n  circleOut as easeCircleOut,\n  circleInOut as easeCircleInOut\n} from \"./circle\";\n\nexport {\n  bounceOut as easeBounce,\n  bounceIn as easeBounceIn,\n  bounceOut as easeBounceOut,\n  bounceInOut as easeBounceInOut\n} from \"./bounce\";\n\nexport {\n  backInOut as easeBack,\n  backIn as easeBackIn,\n  backOut as easeBackOut,\n  backInOut as easeBackInOut\n} from \"./back\";\n\nexport {\n  elasticOut as easeElastic,\n  elasticIn as easeElasticIn,\n  elasticOut as easeElasticOut,\n  elasticInOut as easeElasticInOut\n} from \"./elastic\";\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export {default as geoArea} from \"./area\";\nexport {default as geoBounds} from \"./bounds\";\nexport {default as geoCentroid} from \"./centroid\";\nexport {default as geoCircle} from \"./circle\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian\";\nexport {default as geoClipCircle} from \"./clip/circle\";\nexport {default as geoClipExtent} from \"./clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoClipRectangle} from \"./clip/rectangle\";\nexport {default as geoContains} from \"./contains\";\nexport {default as geoDistance} from \"./distance\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule\";\nexport {default as geoInterpolate} from \"./interpolate\";\nexport {default as geoLength} from \"./length\";\nexport {default as geoPath} from \"./path/index\";\nexport {default as geoAlbers} from \"./projection/albers\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic\";\nexport {default as geoIdentity} from \"./projection/identity\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator\";\nexport {default as geoRotation} from \"./rotation\";\nexport {default as geoStream} from \"./stream\";\nexport {default as geoTransform} from \"./transform\";\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export {default as dispatch} from \"./src/dispatch\";\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}