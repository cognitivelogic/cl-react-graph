{"version":3,"sources":["webpack:///../src/Tornado.tsx","webpack:///./src/pages/tornado.tsx","webpack:///./node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","webpack:///./src/data.ts","webpack:///./node_modules/@material-ui/core/esm/FormControl/useFormControl.js","webpack:///./node_modules/@material-ui/core/esm/utils/useControlled.js"],"names":["Tornado","data","direction","EChartDirection","HORIZONTAL","groupLayout","EGroupedBarLayout","GROUPED","height","splitBins","width","visible","xAxisHeight","splitAxisHeight","yAxisWidth","VERTICAL","domain","calculateDomain","baseProps","padding","dataSets","counts","forEach","count","value","genderIndex","aValue","rowIndex","push","side","groupLabel","label","colorRef","bins","left","map","d","Base","Bars","values","YAxis","scale","path","opacity","tickSize","undefined","labelFormat","XAxis","top","center","leftValues","reduce","prev","next","concat","rightValues","applyDomainAffordance","Math","max","data2","initialState","axis","x","numberFormat","y","bar","grouped","paddingInner","paddingOuter","overlayMargin","hover","lighten","delay","duration","grid","OVERLAID","reducer","state","action","type","showBinPercentages","show","useReducer","dispatch","useState","index","setIndex","chart","title","description","Typography","variant","Grid","container","spacing","item","xs","Card","CardContent","Button","onClick","JSXToString","component","FormControlLabel","control","Switch","checked","color","onChange","_","FormControlContext","useFormControl","style","lineStyle","ticks","smallData","smallDataContinuous","analyticsAxis","labelOrientation","ELabelOrientation","borderColors","theme","filterRange","useControlled","_ref","controlled","defaultProp","default","isControlled","name","current","_React$useState","valueState","setValue","newValue"],"mappings":"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","file":"component---src-pages-tornado-tsx-c7c20566ed0fd5a700e4.js","sourcesContent":["import {\n  scaleBand,\n  scalePoint,\n} from 'd3-scale';\nimport React, { FC } from 'react';\n\nimport { EChartDirection } from './BarChart';\nimport Bars from './components/Bars/Bars';\nimport Base from './components/Base';\nimport XAxis from './components/XAxis';\nimport YAxis from './components/YAxis';\nimport {\n  EGroupedBarLayout,\n  IBarChartDataSet,\n} from './Histogram';\nimport { ITornadoData } from './legacy/Tornado';\nimport { applyDomainAffordance } from './utils/domain';\n\ninterface IProps {\n  data: ITornadoData;\n  direction?: EChartDirection;\n  groupLayout: EGroupedBarLayout;\n  height: number;\n  splitAxisHeight?: number;\n  splitBins: [string, string];\n  visible?: Record<string, boolean>;\n  xAxisHeight?: number;\n  yAxisWidth?: number;\n  width: number;\n}\n\nconst Tornado: FC<IProps> = ({\n  data,\n  direction = EChartDirection.HORIZONTAL,\n  groupLayout = EGroupedBarLayout.GROUPED,\n  height,\n  splitBins = ['Left', 'Right'],\n  width,\n  visible = {},\n  xAxisHeight,\n  splitAxisHeight,\n  yAxisWidth,\n}) => {\n  if (!yAxisWidth) {\n    yAxisWidth = direction === EChartDirection.VERTICAL ? 40 : 100;\n  }\n  if (!xAxisHeight) {\n    xAxisHeight = direction === EChartDirection.VERTICAL ? 100 : 40;\n  }\n  if (!splitAxisHeight) {\n    splitAxisHeight = direction === EChartDirection.VERTICAL ? 100 : 40;\n  }\n\n  const domain = calculateDomain(data, true);\n  const baseProps = {\n    width,\n    height,\n    padding: 15,\n  }\n\n  const dataSets: any[] = []\n  data.counts.forEach((count) => {\n    count.data.forEach((value, genderIndex) => {\n      value.forEach((aValue, rowIndex) => {\n        if (!dataSets[rowIndex]) {\n          dataSets[rowIndex] = [];\n        }\n        dataSets[rowIndex].push({\n          side: genderIndex === 0 ? 'left' : 'right',\n          groupLabel: count.label,\n          colorRef: count.label,\n          label: data.bins[rowIndex],\n          value: visible[data.bins[rowIndex]] !== false && visible[count.label] !== false ? aValue : 0,\n        });\n      })\n\n    });\n  });\n\n  const left: IBarChartDataSet[] = [\n    {\n      label: splitBins[0],\n      data: data.counts[0].data[0].map((d) => d * -1),\n    }\n  ]\n\n  return (\n    <Base {...baseProps}\n      width={width + 30}\n    >\n      <Bars values={left}\n        left={(width + yAxisWidth) / 2}\n        height={height - xAxisHeight - splitAxisHeight}\n        width={(width - yAxisWidth) / 2}\n        groupLayout={groupLayout}\n        bins={data.bins}\n        domain={domain}\n      />\n      {\n        // Left hand axis\n      }\n      <YAxis\n        width={yAxisWidth}\n        height={height - xAxisHeight - splitAxisHeight}\n        scale=\"band\"\n        path={{ opacity: 0 }}\n        tickSize={0}\n        values={direction === EChartDirection.HORIZONTAL ? data.bins : undefined}\n      />\n\n      {\n        // Middle y axis\n      }\n      <YAxis\n        width={yAxisWidth}\n        height={height - xAxisHeight - splitAxisHeight}\n        left={(width - yAxisWidth) / 2}\n        labelFormat={() => ''}\n        values={direction === EChartDirection.HORIZONTAL ? data.bins : undefined}\n        scale=\"band\"\n      />\n\n      {\n        // Bottom values axis\n      }\n      <XAxis\n        width={width - yAxisWidth}\n        height={xAxisHeight}\n        top={height - xAxisHeight - splitAxisHeight}\n        left={yAxisWidth}\n        scale=\"linear\"\n        domain={domain}\n      />\n\n      {\n        // Bottom split bin axis (grouped labels)\n        direction === EChartDirection.HORIZONTAL && <XAxis\n          height={40}\n          left={yAxisWidth}\n          top={height - xAxisHeight}\n          width={baseProps.width - yAxisWidth}\n          values={splitBins}\n          path={{ opacity: 0 }}\n          scale='point'\n        />\n      }\n\n    </Base>\n\n  )\n}\n\nexport default Tornado;\n\nconst calculateDomain = (data: ITornadoData, center = true) => {\n  const leftValues = data.counts.reduce((prev, next) => prev.concat(next.data[0]), [] as number[]);\n  const rightValues = data.counts.reduce((prev, next) => prev.concat(next.data[1]), [] as number[]);\n\n  // Use applyDomainAffordance to allow space for percentage labels\n  let domain = [\n    applyDomainAffordance(-Math.max(...leftValues)),\n    applyDomainAffordance(Math.max(...rightValues)),\n  ];\n\n  // Center the 0 axis value in the middle of the chart\n  if (center) {\n    const max = Math.max(Math.max(...leftValues), domain[1]);\n    domain = [\n      applyDomainAffordance(-max),\n      applyDomainAffordance(max),\n    ];\n  }\n  return domain;\n}\n","import React, {\n  useReducer,\n  useState,\n} from 'react';\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormControlLabel,\n  Grid,\n  Switch,\n  Typography,\n} from '@material-ui/core';\n\nimport {\n  EGroupedBarLayout,\n  IAxes,\n} from '../../../src';\nimport TornadoChart, {\n  ITornadoData,\n  ITornadoProps,\n} from '../../../src/legacy/Tornado';\nimport NativeTornado from '../../../src/Tornado';\nimport { DeepPartial } from '../../../src/utils/types';\nimport JSXToString from '../components/JSXToString';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { grid } from '../data';\n\nconst axis: DeepPartial<IAxes> = {\n  x: {\n    numberFormat: '.2s',\n    scale: 'linear',\n  },\n  y: {\n  },\n};\n\nconst data2: ITornadoData = {\n  bins: ['Yes', 'No'],\n  // @Todo test with only one count set\n  counts: [\n    {\n      label: 'Background',\n      data: [\n        [0, 260], // Male bin 1, Male bin 2,\n        [0, 210], // Female bin 1, Female bin 2,\n      ],\n    },\n    {\n      label: 'Foreground',\n      data: [\n        [10, 2600], // Male bin 1, Male bin 2,\n        [330, 100], // Female bin 1, Female bin 2,\n      ],\n    },\n\n  ],\n}\n\ntype Actions = { type: 'SET_SHOW_PERCENTAGES', show: boolean }\n  | { type: 'HERE' };\n\nconst initialState: DeepPartial<ITornadoProps> = {\n  data: {\n    bins: ['16-18', '18-25', '25-35', '35-50', '50-65', '65-∞'],\n    // @Todo test with only one count set\n    counts: [\n      {\n        label: 'Background',\n        data: [\n          [0, 2600, 5100, 9700, 8400, 6700], // Male bin 1, Male bin 2,\n          [0, 2100, 4700, 8700, 4900, 1400], // Female bin 1, Female bin 2,\n        ],\n      },\n      {\n        label: 'Foreground',\n        data: [\n          [0, 2600, 5100, 9700, 8400, 6700], // Male bin 1, Male bin 2,\n          [0, 2100, 4700, 8700, 4900, 1400], // Female bin 1, Female bin 2,\n        ],\n      },\n\n    ],\n  },\n  axis,\n  splitBins: ['Male', 'Female'],\n  bar: {\n    grouped: {\n      paddingInner: 0.1,\n      paddingOuter: 0,\n    },\n    paddingInner: 0.1,\n    paddingOuter: 0,\n    overlayMargin: 10,\n    hover: {\n      lighten: 0.1,\n    },\n    // width: 40,\n  },\n  center: true,\n  delay: 0,\n  duration: 400,\n  grid,\n  groupLayout: EGroupedBarLayout.OVERLAID,\n  width: '100%',\n}\n\nfunction reducer(state: ITornadoProps, action: Actions): ITornadoProps {\n  switch (action.type) {\n    case 'SET_SHOW_PERCENTAGES':\n      return {\n        ...state,\n        showBinPercentages: action.show,\n      };\n  }\n  return state;\n}\n\n\nconst Tornado = () => {\n  const [state, dispatch] = useReducer(reducer, initialState as ITornadoProps);\n  const [index, setIndex] = useState(0);\n  const chart = <TornadoChart\n    {...state} />;\n  return (\n    <Layout>\n      <SEO title=\"Line Chart\" description=\"\" />\n      <Typography variant=\"h2\">Tornado Chart</Typography>\n      <div>\n        <Grid container spacing={10}>\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <NativeTornado {...state}\n                  width={800}\n                  height={500} />\n                {chart}\n                <TornadoChart\n                  data={index === 0 ? state.data : data2}\n                  width=\"600\" />\n                <Button onClick={() => setIndex(index === 0 ? 1 : 0)}>\n                  Toggle Data\n                </Button>\n\n              </CardContent>\n            </Card>\n            <br />\n            <Card>\n              <CardContent>\n                <JSXToString component={chart} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={6}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={state.showBinPercentages}\n                  color=\"primary\"\n                  onChange={(_, value) => {\n                    dispatch({ type: 'SET_SHOW_PERCENTAGES', show: value });\n                  }}\n                />\n              }\n              label=\"Show points\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n\n          </Grid>\n        </Grid>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tornado;\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import {\n  IAxes,\n  IBarChartData,\n} from '../../src';\nimport filterRange from '../../src/colors/filterRange';\nimport { ELabelOrientation } from '../../src/components/YAxis';\nimport {\n  IGrid,\n  IHistogramData,\n} from '../../src/Histogram';\nimport { lineStyle } from '../../src/utils/defaults';\nimport { DeepPartial } from '../../src/utils/types';\n\nexport const grid: IGrid = {\n  x: {\n    height: 100,\n    visible: true,\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    visible: true,\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 6,\n  },\n};\n\nexport const smallData: IBarChartData = {\n  bins: ['Female long label test', 'Male', 'Other'],\n  counts: [\n    {\n      data: [79200, 52400, 13300],\n      label: 'Baseline',\n    },\n    {\n      data: [60000, 34230, 10000],\n      label: 'Filtered',\n    },\n  ]\n}\n\nexport const smallData2: IBarChartData = {\n  bins: ['Female', 'Male', 'Other'],\n  counts: [\n    {\n      data: [89200, 12400, 33300],\n      label: 'Baseline',\n    },\n    {\n      data: [70000, 24230, 40000],\n      label: 'Filtered',\n    },\n  ]\n}\n\nexport const smallDataContinuous: IHistogramData = {\n  bins: [[0, 50], [50, 150], [150, 300]],\n  counts: [\n    {\n      data: [500, 2000, 1500],\n      label: 'Baseline',\n    },\n  ]\n}\n\nexport const data: IBarChartData = {\n  bins: ['Female', 'Male', 'Other', 'sdfdfg', 'dagdsg', 'sfsd', 'ds34fsdf', 'dfsfsd', 'sdfs34dfs', 'ghf34hfg', 'fd33gag', 'jg343hj', 'a343wes', 'ye343ye', 'fd343gjs', 'sdfd343fg', '34', 'sfsd', '433', '45245', '745'],\n  counts: [\n    {\n      data: [58483, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300],\n      label: 'Baseline',\n    },\n    {\n      data: [54932, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000],\n      label: 'Filtered',\n    },\n  ]\n}\n\n\nexport const analyticsAxis: DeepPartial<IAxes> = {\n  x: {\n    scale: 'linear',\n    numberFormat: '.2s',\n    labelOrientation: ELabelOrientation.HORIZONTAL,\n  },\n  y: {\n    numberFormat: '.2s',\n    labelOrientation: ELabelOrientation.HORIZONTAL,\n  },\n};\n\nexport const verticalXAxis: DeepPartial<IAxes> = {\n  x: {\n    scale: 'linear',\n  },\n  y: {\n  },\n}\n\nexport const axis: DeepPartial<IAxes> = {\n  x: {\n    dateFormat: '%d-%b-%y',\n    scale: 'time',\n  },\n  y: {\n  },\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}"],"sourceRoot":""}