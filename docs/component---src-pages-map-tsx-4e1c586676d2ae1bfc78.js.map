{"version":3,"sources":["webpack:///../node_modules/d3-request/src/request.js","webpack:///../node_modules/d3-request/src/type.js","webpack:///../node_modules/d3-request/src/json.js","webpack:///../node_modules/d3-request/src/html.js","webpack:///../node_modules/d3-dsv/src/dsv.js","webpack:///../node_modules/d3-request/src/text.js","webpack:///../node_modules/d3-request/src/xml.js","webpack:///../node_modules/d3-dsv/src/csv.js","webpack:///../node_modules/d3-dsv/src/tsv.js","webpack:///../node_modules/d3-request/src/dsv.js","webpack:///../node_modules/d3-request/src/csv.js","webpack:///../node_modules/d3-request/src/tsv.js","webpack:///./src/pages/map.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///../src/colors/index.js","webpack:///../src/tip.ts","webpack:///../node_modules/d3-axis/src/array.js","webpack:///../node_modules/d3-axis/src/identity.js","webpack:///../node_modules/d3-axis/src/axis.js","webpack:///../node_modules/d3-axis/src/index.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/d3/attrs.ts","webpack:///../node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-array/src/extent.js","webpack:///../node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-array/src/index.js","webpack:///../src/colors/filterRange.ts","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/core-js/modules/_meta.js","webpack:///./node_modules/core-js/modules/_validate-collection.js","webpack:///./src/data.ts","webpack:///../src/Legend.tsx","webpack:///../src/PieChartD3.ts","webpack:///../src/PieChart.tsx","webpack:///../src/JoyplotD3.ts","webpack:///../src/JoyPlot.tsx","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.set.js","webpack:///./node_modules/core-js/modules/_collection-strong.js","webpack:///./node_modules/core-js/modules/_collection.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_create-property.js","webpack:///./node_modules/core-js/modules/_object-sap.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///../src/grid.ts","webpack:///../src/HistogramD3.ts","webpack:///../src/Histogram.tsx","webpack:///../src/HorizontalHistogramD3.ts","webpack:///../src/HorizontalHistogram.tsx","webpack:///../src/utils/scales.ts","webpack:///../src/lineChartD3.ts","webpack:///../src/LineChart.tsx","webpack:///../node_modules/d3-geo/src/adder.js","webpack:///../node_modules/d3-geo/src/math.js","webpack:///../node_modules/d3-geo/src/noop.js","webpack:///../node_modules/d3-geo/src/stream.js","webpack:///../node_modules/d3-geo/src/area.js","webpack:///../node_modules/d3-geo/src/cartesian.js","webpack:///../node_modules/d3-geo/src/bounds.js","webpack:///../node_modules/d3-geo/src/centroid.js","webpack:///../node_modules/d3-geo/src/compose.js","webpack:///../node_modules/d3-geo/src/rotation.js","webpack:///../node_modules/d3-geo/src/circle.js","webpack:///../node_modules/d3-geo/src/clip/buffer.js","webpack:///../node_modules/d3-geo/src/pointEqual.js","webpack:///../node_modules/d3-geo/src/clip/rejoin.js","webpack:///../node_modules/d3-geo/src/polygonContains.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/threshold/sturges.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/merge.js","webpack:///../node_modules/d3-geo/node_modules/d3-array/src/zip.js","webpack:///../node_modules/d3-geo/src/clip/index.js","webpack:///../node_modules/d3-geo/src/clip/antimeridian.js","webpack:///../node_modules/d3-geo/src/clip/circle.js","webpack:///../node_modules/d3-geo/src/clip/line.js","webpack:///../node_modules/d3-geo/src/clip/rectangle.js","webpack:///../node_modules/d3-geo/src/length.js","webpack:///../node_modules/d3-geo/src/interpolate.js","webpack:///../node_modules/d3-geo/src/path/area.js","webpack:///../node_modules/d3-geo/src/identity.js","webpack:///../node_modules/d3-geo/src/path/bounds.js","webpack:///../node_modules/d3-geo/src/path/centroid.js","webpack:///../node_modules/d3-geo/src/path/context.js","webpack:///../node_modules/d3-geo/src/path/measure.js","webpack:///../node_modules/d3-geo/src/path/string.js","webpack:///../node_modules/d3-geo/src/transform.js","webpack:///../node_modules/d3-geo/src/projection/fit.js","webpack:///../node_modules/d3-geo/src/projection/resample.js","webpack:///../node_modules/d3-geo/src/projection/index.js","webpack:///../node_modules/d3-geo/src/projection/azimuthal.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/mercator.js","webpack:///../node_modules/d3-geo/src/projection/equirectangular.js","webpack:///../node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/equalEarth.js","webpack:///../node_modules/d3-geo/src/projection/gnomonic.js","webpack:///../node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///../node_modules/d3-geo/src/projection/orthographic.js","webpack:///../node_modules/d3-geo/src/projection/stereographic.js","webpack:///../node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///../src/MapD3.ts","webpack:///../node_modules/d3-geo/src/path/index.js","webpack:///../src/Map.tsx","webpack:///../src/ScatterPlotD3.ts","webpack:///../src/ScatterPlot.tsx","webpack:///../src/index.ts"],"names":["src_request","url","callback","request","mimeType","response","responseType","event","Object","d3_dispatch","headers","d3_collection","xhr","XMLHttpRequest","user","password","timeout","respond","o","result","status","type","responseText","hasResponse","call","e","XDomainRequest","test","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","name","value","toLowerCase","arguments","length","get","remove","set","data","send","post","method","open","has","setRequestHeader","each","overrideMimeType","error","fixCallback","on","abort","apply","Error","defaultMimeType","r","json","document","createRange","createContextualFragment","JSON","parse","EOL","xml","responseXML","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","i","stringify","join","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","rows","N","I","n","eof","eol","token","c","j","slice","replace","row","push","formatRow","formatValue","convert","object","customConverter","format","columnSet","create","forEach","column","inferColumns","concat","formatRows","csv","csvParse","tsv","tsvParse","src_dsv","_","responseOf","MapExample","_useState","useState","loading","setLoading","_useState2","geojson","setGeoJson","useEffect","collection","react_default","a","createElement","layout","seo","title","description","gatsby_browser_entry","to","src","height","width","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","string","isRequired","func","m","module","exports","require","default","makeTip","d3_selection__WEBPACK_IMPORTED_MODULE_0__","fx","in","container","style","pageX","pageY","transition","duration","move","out","selector","tipContainer","select","append","attr","tipContent","Array","prototype","identity","x","axis_top","right","bottom","left","epsilon","translateX","translateY","y","entering","this","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","values","ticks","domain","spacing","Math","max","range","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","line","merge","insert","isFinite","getAttribute","p","parentNode","filter","tickSize","axisBottom","axisLeft","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","defaultProps","arrayOf","array","Header","siteTitle","index_es","variant","color","Layout","Fragment","flexGrow","margin","padding","paddingTop","Date","getFullYear","href","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","shape","keys","ascending","b","NaN","compare","extent","valueof","min","undefined","index","array_array","sqrt","colors","Color","hsl","luminosity","v","self","indexOf","sort","random","anObject","$flags","DESCRIPTORS","$toString","define","fn","source","flags","R","$export","$find","KEY","forced","P","F","findIndex","callbackfn","META","isObject","setDesc","id","isExtensible","FREEZE","preventExtensions","setMeta","it","w","NEED","fastKey","getWeak","onFreeze","TYPE","_t","TypeError","grid","data2","theme","_src_colors_filterRange__WEBPACK_IMPORTED_MODULE_0__","stroke","stroke-opacity","bins","counts","label","borderColors","dy","text-anchor","fill","filterRange","legendIconStyle","cursor","display","listStyle","Legend","className","_ref$theme","colorScheme","onSelect","visible","scheme","scaleOrdinal","labels","react__WEBPACK_IMPORTED_MODULE_2__","active","hasOwnProperty","key","backgroundColor","border","onClick","pieChartD3","svg","donutWidth","displayFn","ix","top","tip","tips","tipContentFn","groupLabel","el","_this","previousData","setIndex","count","_makeSvg","containers","dataSet","drawChartBg","update","childNodes","getElementsByTagName","removeChild","_this$props","drawCharts","outerRadius","_this$props2","_this$props2$donutWid","radius","innerRadius","_this$props3","_this$props3$donutWid","_this2","_this$props4","dataSets","drawChart","_this$props5","tau","PI","bgArc","arc","startAngle","endAngle","background","_this$props6","thisPie","pie","arcs","thisArc","_current","html","delay","attrTween","interpolate","arcTween","path2","_height","_width","centroid","destroy","PieChart","_React$Component","chart","state","parentWidth","handleResize","getDOMNode","ref","offsetWidth","setState","getChartState","componentDidMount","_this3","window","addEventListener","componentDidUpdate","rest","objectWithoutPropertiesLoose_default","componentWillUnmount","removeEventListener","ReactDOM","_this4","react","joyPlotD3","yOuterScaleBand","scaleBand","scaleLinear","innerScaleBand","shape-rendering","stroke-width","bar","groupMargin","dasharray","linecap","joyTitle","newProps","mergeProps","makeGrid","makeScales","_props","valuesCount","reduce","appendDomainRange","yDomain","allCounts","prev","next","thisCounts","item","thisExtent","yRange","yAxisWidth","xAxisHeight","_props5","xAxis","yAxis","Number","gridHeight","getBins","from","Set","_drawScales","_props6","gridWidth","dataLabels","rangeRound","paddingInner","groupedMargin","barMargin","yLabels","yOuterBounds","yTickSize","attrs","_props7","_props8","barWidth","updateChart","groupData","_props9","thisMax","g","bars","joyLabel","currentHeight","gridX","gridY","_drawGrid","_props10","axisWidth","make_x_gridlines","make_y_gridlines","_props11","lineData","Histogram","elem","rgb","darker","toString","toObject","$keys","configurable","strong","validate","add","def","dP","redefineAll","ctx","anInstance","forOf","$iterDefine","step","setSpecies","SIZE","getEntry","that","entry","_i","_f","getConstructor","wrapper","NAME","IS_MAP","ADDER","C","iterable","_l","clear","delete","setStrong","iterated","kind","_k","global","redefine","fails","$iterDetect","setToStringTag","inheritIfRequired","methods","common","IS_WEAK","Base","proto","O","fixMethod","entries","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","iter","BUGGY_ZERO","$instance","target","constructor","G","W","isArrayIter","toLength","createProperty","getIterFn","S","arrayLike","iterator","aLen","mapfn","mapping","iterFn","done","$defineProperty","createDesc","core","exec","exp","toAbsoluteIndex","end","endPos","drawGrid","makeXGridlines","makeYGridlines","histogramD3","xAxisLabel","yAxisLabel","dateFormat","timeFormat","gHeight","stackIndex","xText","yText","toFixed","horizontalHistogramD3","xDomain","xRange","h","_drawBars","info","drawDataSet","barHeight","setCount","barItem","all","multiLineOffset","currentWidth","gy","HorizontalHistogram","histogram","componentWillReceiveProps","buildScales","scaleLog","clamp","scaleTime","lineChartD3","xParseTime","xFormatTime","lineProps","curveType","curveCatmullRom","show","strokeDashArray","strokeDashOffset","pointProps","easeCubic","point","datumProps","_buildScales","lineContainer","_createLines","_drawDataPointSet","getYAxisWidth","pointContainer","points","dx","ys","xs","numberFormat","getXAxisHeight","datum","parsedY","parsedX","_drawLines","curve","drawAreas","area","y0","y1","console","log","_buildScales2","timeParse","LineChart","adder","Adder","reset","s","temp","valueOf","bv","av","pi","halfPi","quarterPi","degrees","radians","abs","atan","atan2","cos","ceil","floor","sin","pow","sign","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","src_stream","cartesian_spherical","cartesian","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","src_rotation","rotate","forward","circleStream","delta","direction","t0","t1","cosRadius","sinRadius","circleRadius","buffer","lines","rejoin","pop","shift","pointEqual","Intersection","other","segments","compareIntersection","startInside","subject","clip","segment","p0","p1","rejoin_link","start","current","isSubject","polygonContains_sum","polygonContains","polygon","sinPhi","normal","angle","winding","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","intersection","phiArc","arrays","merged","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clip_circle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","uu","t2","q","polar","q1","code","c0","v0","v00","point2","clip_line","x0","x1","ax","ay","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","area_x00","area_y00","area_x0","area_y0","src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","Infinity","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","transformer","TransformStream","fit","projection","fitBounds","clipExtent","translate","fitExtent","fitSize","size","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","transformRotate","clipAngle","precision","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","mapD3","geoGenerator","projectionStream","contextStream","geoPath","Map","scatterPlotD3","yScale","xScale","domainByTrait","choices","legendWidth","xSize","ySize","_drawLegend","split","legend","cell","_drawPoints","traits","nx","cross","plotCell","distModels","trait","ScatterPlot","_Component","chartWidth","chartHeight","innerHeight","getBoundingClientRect","Component","src_LineChart","src_Map"],"mappings":"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","file":"component---src-pages-map-tsx-4e1c586676d2ae1bfc78.js","sourcesContent":["import {map} from \"d3-collection\";\nimport {dispatch} from \"d3-dispatch\";\n\nexport default function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n","import request from \"./request\";\n\nexport default function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n","import type from \"./type\";\n\nexport default type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n","import type from \"./type\";\n\nexport default type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import request from \"./request\";\n\nexport default function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request) {\n    return parse(request.responseText, row);\n  };\n}\n","import {csvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/csv\", csvParse);\n","import {tsvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/tab-separated-values\", tsvParse);\n","import { json } from 'd3-request';\nimport { Link } from 'gatsby';\nimport { FeatureCollection } from 'geojson';\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Map } from '../../../src';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data } from '../data';\n\nconst MapExample = () => {\n  const [loading, setLoading] = useState(true);\n\n  const [geojson, setGeoJson] = useState<FeatureCollection<any, any>>(null);\n  useEffect(() => {\n    const url = 'https://opendata.arcgis.com/datasets/8d3a9e6e7bd445e2bdcc26cdf007eac7_3.geojson';\n    json(url, (error, collection) => {\n      if (error) { throw error; }\n      setGeoJson(collection);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return <div>loading</div>;\n  }\n  return (\n    <Layout>\n      <SEO title=\"Histogram\" description=\"\" />\n      <h1>Map</h1>\n      <Link to=\"/\">Go back to the homepage</Link>\n      <div>\n        <Map\n          data={data}\n          geojson={geojson}\n          height={400}\n          width={400} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default MapExample;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export default ['#4bbcad',\n  '#d54539',\n  '#5ab94d',\n  '#8a5cd3',\n  '#a4b243',\n  '#ba5ccd',\n  '#54995c',\n  '#cf47a1',\n  '#d29f3e',\n  '#5c6fda',\n  '#c36528',\n  '#5fa6dc',\n  '#d74770',\n  '#7d7430',\n  '#8a529e',\n  '#df9273',\n  '#5f74b8',\n  '#ac5450',\n  '#d192d7',\n  '#b26088'];\n","import { event } from 'd3-selection';\nimport { select } from 'd3-selection';\n\nexport default {\n  fx: {\n    in: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n      container.transition()\n        .duration(200)\n        .style('opacity', 0.9);\n    },\n    move: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n    },\n    out: (container) => {\n      container.transition()\n        .duration(100)\n        .style('opacity', 0);\n    },\n  },\n};\n\nexport const makeTip = (selector, tipContainer): { tipContainer: any, tipContent: any } => {\n  if (tipContainer) {\n    // Chart could be rebuilt - remove old tip\n    tipContainer.remove();\n  }\n  tipContainer = select(selector).append('div')\n    .attr('class', 'tooltip top')\n    .style('opacity', 0);\n\n  tipContainer.append('div')\n    .attr('class', 'tooltip-arrow');\n  return {\n    tipContainer,\n    tipContent: tipContainer.append('div')\n      .attr('class', 'tooltip-inner'),\n  };\n};\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export {\n  axisTop,\n  axisRight,\n  axisBottom,\n  axisLeft\n} from \"./axis\";\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"/histogram\">Histogram</Link></Button>\n      <Button><Link to=\"/line\">Line Chart</Link></Button>\n      <Button><Link to=\"/pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"/joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { ISVGLineStyle } from '../Histogram';\n\n/**\n * Apply style object to a d3 selection\n * @param {Object} selection D3 selection\n * @param {Object} style Css styling\n * @return {Object} selection\n */\nexport default (selection, style: ISVGLineStyle) => {\n  Object.keys(style).forEach((k: string) => {\n    selection.attr(k, style[k]);\n  });\n  return selection;\n};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && value >= value) {\n        if (min === undefined) {\n          min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        if (min === undefined) {\n          min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as group} from \"./group\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as quickselect} from \"./quickselect\";\nexport {default as range} from \"./range\";\nexport {default as rollup} from \"./rollup\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n","import * as Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","import {\n  IAxes,\n  IHistogramData,\n} from '../../src';\nimport filterRange from '../../src/colors/filterRange';\n\nexport const grid = {\n  x: {\n    style: {\n      'stroke': '#eeAA00',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    height: 20,\n    style: {\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n  grid,\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const axis: IAxes = {\n  x: {\n    height: 20,\n    label: 'X Axis',\n    margin: 20,\n    text: {\n      style: {\n        'dy': '.35em',\n        'text-anchor': 'start',\n        'transform': 'rotate(90)',\n        'x': 0,\n        'y': 0,\n      },\n    },\n    tickSize: 0,\n  },\n  y: {\n    label: 'Y Axis!',\n    style: {\n      fill: 'none',\n      stroke: '#eeAA00',\n    },\n    text: {\n      style: {\n        fill: '#eeAA00',\n      },\n    },\n    tickSize: 20,\n    ticks: 3,\n    width: 50,\n  },\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n","import { scaleOrdinal } from 'd3-scale';\nimport * as React from 'react';\n\nimport colorScheme from './colors';\nimport { IHistogramDataSet } from './Histogram';\n\ninterface IProps {\n  className?: string;\n  theme?: string[];\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  onSelect: (label: string) => void;\n  visible: { [key: string]: boolean };\n}\n\nconst legendIconStyle = {\n  cursor: 'pointer',\n  display: 'inline-block',\n  height: '1rem',\n  margin: '0.25rem 0.5rem',\n  width: '1rem',\n};\n\nconst listStyle = {\n  listStyle: 'none',\n};\n\nconst Legend: React.SFC<IProps> = ({ className, theme = colorScheme, data, onSelect, visible }) => {\n  const scheme: any = scaleOrdinal(theme);\n  const labels = data.bins;\n  return (\n    <div className={className}>\n      <ul style={listStyle}>\n        {\n          labels.map((label) => {\n            const active = (visible.hasOwnProperty(label) && visible[label]) || !visible.hasOwnProperty(label);\n            return (\n              <li key={label}>\n                <div style={{\n                  ...legendIconStyle,\n                  backgroundColor: active ? scheme(label) : '#FFF',\n                  border: '2px solid ' + scheme(label),\n                }}\n                  onClick={() => onSelect(label)}>\n                </div> {label}\n              </li>\n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default Legend;\n","import 'd3-transition';\n\nimport { interpolate } from 'd3-interpolate';\nimport { scaleOrdinal } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport {\n  arc,\n  pie,\n  PieArcDatum,\n} from 'd3-shape';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\n\nimport colorScheme from './colors';\nimport {\n  IChartAdaptor,\n  IHistogramDataSet,\n} from './Histogram';\nimport {\n  IPieChartProps,\n  IPieDataItem,\n} from './PieChart';\nimport tips, { makeTip } from './tip';\n\nexport const pieChartD3 = ((): IChartAdaptor => {\n\n  let svg;\n  let tipContainer;\n  let tipContent;\n\n  const defaultProps: IPieChartProps = {\n    backgroundColor: '#ddd',\n    className: 'piechart-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    donutWidth: 0,\n    height: 200,\n    labels: {\n      display: true,\n      displayFn: (d, ix) => d.value,\n    },\n    margin: {\n      left: 10,\n      top: 10,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number, groupLabel): string => {\n      return groupLabel + ': ' + bins[i] + '<br />' + d;\n    },\n    visible: {},\n    width: 200,\n  };\n\n  const PieChartD3 = {\n\n    create(el: HTMLElement, props: Partial<IPieChartProps> = {}) {\n      this.props = merge(defaultProps, { ...props });\n      this.previousData = props.data.counts.map((set: IHistogramDataSet, setIndex: number) => {\n        return set.data\n          .map((count, i) => ({\n            count,\n            groupLabel: set.label,\n            label: props.data.bins[i],\n          }));\n      });\n      this._makeSvg(el);\n      this.containers = [];\n      this.previousData.forEach((dataSet, i) => {\n        this.drawChartBg(this.props.data, i);\n      });\n\n      this.update(el, props);\n    },\n\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = this.props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n\n      const r = makeTip(this.props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    update(el: HTMLElement, props: Partial<IPieChartProps>) {\n      if (!props.data) {\n        return;\n      }\n      this.props = merge(defaultProps, props);\n      if (props.colorScheme) {\n        this.props.colorScheme = props.colorScheme;\n      }\n      // this._makeSvg(el);\n      if (!this.props.data.bins) {\n        return;\n      }\n\n      this.drawCharts();\n    },\n\n    outerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = this.props;\n\n      const radius = Math.min(width, height) / 2;\n      return donutWidth === 0\n        ? radius - 10\n        : radius - 10 - (setIndex * (donutWidth + 10));\n    },\n\n    innerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = this.props;\n      const radius = Math.min(width, height) / 2;\n      return donutWidth === 0\n        ? 0\n        : radius - 10 - donutWidth - (setIndex * (donutWidth + 10));\n    },\n\n    drawCharts() {\n      const { data, visible } = this.props;\n      this.dataSets = data.counts.map((set: IHistogramDataSet) => {\n        return set.data\n          .map((count, i) => ({\n            count: visible[data.bins[i]] !== false ? count : 0,\n            groupLabel: set.label,\n            label: data.bins[i],\n          }));\n      });\n\n      this.dataSets.forEach((dataSet, i) => {\n        const theme = get(data.counts[i], 'colors', this.props.colorScheme);\n        this.drawChart(dataSet, i, data.bins, theme);\n      });\n      this.previousData = this.dataSets;\n    },\n\n    drawChartBg(data, i) {\n      const { backgroundColor, width, height } = this.props;\n      const tau = 2 * Math.PI; // http://tauday.com/tau-manifesto\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n      const bgArc = arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius)\n        .startAngle(0)\n        .endAngle(tau);\n      const container = svg\n        .append('g')\n        .attr('class', 'pie-bg');\n      const background = container.append('path')\n        .attr('class', 'pie-background')\n        .style('fill', backgroundColor);\n      background.enter()\n        .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')')\n        .attr('d', bgArc);\n\n      background.merge(background);\n\n      if (!this.containers[i]) {\n        this.containers[i] = svg\n          .append('g')\n          .attr('class', 'pie-container');\n      }\n    },\n\n    drawChart(data, i: number, bins: string[], theme: string[]) {\n      const { labels, width, height, tip, tipContentFn } = this.props;\n      // Stack multiple charts in concentric circles\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n\n      // Function to calculate pie chart paths from data\n      const thisPie = pie()\n        .sort(null)\n        .value((d: any) => {\n          return d.count;\n        });\n\n      // Formated pie chart arcs based on previous current data\n      const arcs = thisPie(this.previousData[i]);\n\n      const colors = scaleOrdinal(theme);\n\n      const thisArc = arc()\n        .outerRadius(outerRadius)\n        .innerRadius(innerRadius);\n\n      const path = this.containers[i].selectAll('path')\n        .data(thisPie(data));\n\n      const g = path.enter().append('g')\n        .attr('class', 'arc');\n\n      g.append('path')\n        .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')')\n        .attr('stroke', '#FFF')\n        .attr('fill', (d, j) => colors(j))\n\n        .each(function (d, j) { this._current = arcs[j]; }) // store the initial angles\n        .attr('d', thisArc)\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .style('opacity', 0)\n        .transition()\n        .duration(500)\n        .style('opacity', 1);\n\n      // Fade in when adding (merge)\n      path\n        .merge(path)\n\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .transition()\n        .delay(400)\n        .duration(500)\n        .attr('fill', (d, j) => colors(j))\n        .attrTween('d', arcTween(thisArc));\n\n      const path2 = this.containers[i].selectAll('text.label')\n        .data(thisPie(data));\n      const gLabel = path2.enter().append('text')\n        .attr('class', 'label')\n        .each(function () {\n          // Store initial offset incase we change chart heights.\n          this._height = height;\n          this._width = width;\n        })\n        .attr('transform', function (d) {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (this._width / 2);\n          const y = centroid[1] + (this._height / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .each(function (d, j) {\n          // Store current value to work out fx transition opacities\n          this._current = d;\n        })\n        .text((d, ix) => {\n          if (d.value === 0) {\n            return '';\n          }\n          return labels.displayFn(d, ix);\n        });\n\n      path2\n        .merge(path2)\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .transition()\n        .attr('transform', function (d) {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (this._width / 2);\n          const y = centroid[1] + (this._height / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .transition()\n        .duration(500)\n        .style('opacity', (d, ix, c) => {\n          // Only show if the new value is not 0 and labels are set to be displayed\n          return labels.display === false || d.data.count === 0 || c[ix]._current.value === 0 ? 0 : 1;\n        });\n\n      path2.exit().remove();\n\n      path.exit().transition()\n        .duration(500)\n        .style('opacity', 0).remove();\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n\n  return PieChartD3;\n});\n\n// Returns a tween for a transition’s \"d\" attribute, transitioning any selected\n// arcs from their current angle to the specified new angle.\nfunction arcTween(thisArc) {\n  return function (d) {\n    const i = interpolate(this._current, d);\n    this._current = i(0);\n    return function (t) {\n      return thisArc(i(t));\n    };\n  };\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramDataSet,\n  IMargin,\n  TipContentFn,\n} from './Histogram';\nimport { pieChartD3 } from './PieChartD3';\n\ninterface ILabels {\n  display: boolean;\n  displayFn?: (d: any, ix: number) => string | number;\n}\n\nexport interface IPieDataItem {\n  count: number;\n  groupLabel: string;\n  label: string;\n}\n\nexport interface IPieChartProps {\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  backgroundColor?: string;\n  className?: string;\n  colorScheme?: string[];\n  donutWidth?: number;\n  height: number;\n  labels?: ILabels;\n  margin?: IMargin;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<string>;\n  visible?: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * PieChart component\n */\nclass PieChart extends React.Component<IPieChartProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Partial<IPieChartProps> = {\n    backgroundColor: '#ddd',\n    donutWidth: 0,\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IPieChartProps) {\n    super(props);\n    this.chart = pieChartD3();\n\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(this.getDOMNode(), this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IPieChartProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"piechart-chart-container\"></div>);\n  }\n}\n\nexport default PieChart;\n","import { extent } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { scaleBand, scaleLinear, ScaleLinear, scaleOrdinal } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport { IChartAdaptor, IHistogramData, IHistogramDataSet } from './Histogram';\nimport { IJoyPlotProps } from './JoyPlot';\nimport tips, { makeTip } from './tip';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const joyPlotD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let tipContent;\n  let props: IJoyPlotProps;\n  let dataSets: IGroupData[];\n  const yOuterScaleBand = scaleBand();\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisLeft(yOuterScaleBand)\n      .ticks(ticks);\n  }\n\n  const defaultProps: IJoyPlotProps = {\n    axis: {\n      x: {\n        height: 20,\n        label: '',\n        margin: 10,\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n      },\n      y: {\n        label: '',\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        ticks: 10,\n        width: 25,\n      },\n    },\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [{\n      bins: [],\n      counts: [],\n    }],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins, i, d, joyTitle): string =>\n      joyTitle + ': ' +\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const JoyPlotD3 = {\n    /**\n     * Initialization\n     * @param {Node} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: HTMLElement, newProps: Partial<IJoyPlotProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid(props);\n      this.makeScales();\n      this.containers = props.data.map((d, i) => svg\n        .append('g')\n        .attr('class', `histogram-container-${i}`),\n      );\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: Partial<IJoyPlotProps>) {\n      props = merge<IJoyPlotProps>(defaultProps, newProps);\n      props.data = newProps.data;\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Dom} el Dom container node\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     * @param {Object} counts Histogram data set values\n     * @return {Number} count\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData[]): void {\n      const yDomain: number[] = [];\n      const { domain } = props;\n\n      const allCounts: number[] = data.reduce((prev, next) => {\n        const thisCounts: number[] = next.reduce((p, n) => {\n          return [...p, ...n.map((item) => item.value)];\n        }, [] as number[]);\n        return [...prev, ...thisCounts];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : thisExtent[1];\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : thisExtent[0];\n      const yRange = [yOuterScaleBand.bandwidth(), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    yAxisWidth() {\n      const { axis } = props;\n      return axis.y.label === ''\n        ? axis.y.width\n        : axis.y.width + 30;\n    },\n\n    xAxisHeight() {\n      const { axis } = props;\n      return axis.x.label === ''\n        ? axis.x.height\n        : axis.x.height + 30;\n    },\n\n    makeScales() {\n      const { axis, margin, height, width } = props;\n      this.xAxis = svg.append('g').attr('class', 'x-axis');\n      this.yAxis = svg.append('g').attr('class', 'y-axis');\n\n      if (axis.x.label !== '') {\n        svg.append('text')\n          .attr('class', 'x-axis-label')\n          .attr('transform',\n            'translate(' + (Number(width) / 2) + ' ,' +\n            ((height - this.xAxisHeight() - (margin.left * 2)) + 10 + axis.x.margin) + ')')\n          .style('text-anchor', 'middle')\n          .text(axis.x.label);\n      }\n\n      if (axis.y.label !== '') {\n        svg.append('text')\n          .attr('class', 'y-axis-label')\n          .attr('transform', 'translate(0, -' + this.gridHeight() + ')rotate(-90)')\n          .attr('y', 0 - margin.left)\n          .attr('x', 0 - (height / 2 - (margin.top * 2)))\n          .attr('dy', '1em')\n          .style('text-anchor', 'middle')\n          .text(axis.y.label);\n      }\n    },\n\n    getBins() {\n      return props.data.reduce((prev, next) => {\n        return Array.from(new Set(prev.concat(next.bins)));\n      }, [] as string[]);\n    },\n\n    /**\n     * Draw scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data: IHistogramData[]) {\n      const { bar, domain, margin, width, height, axis } = props;\n      const valuesCount = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? c : prev;\n      }, 0);\n      const w = this.gridWidth();\n\n      let xAxis;\n      const dataLabels = data[0].counts.map((c) => c.label);\n\n      const bins = this.getBins();\n      x\n        .domain(bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      innerScaleBand\n        .domain(dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(this.barMargin());\n\n      xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n\n      this.xAxis\n        .attr('transform', 'translate(' + (this.yAxisWidth() + axis.y.style['stroke-width']) + ',' +\n          (height - this.xAxisHeight() - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      const yLabels = data.map((d) => d.title);\n      const yOuterBounds: [number, number] = [height - (margin.top * 2) - this.xAxisHeight(), 0];\n      yOuterScaleBand.domain(yLabels)\n        .rangeRound(yOuterBounds);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft(yOuterScaleBand).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n\n      this.yAxis\n        .attr('transform', 'translate(' + this.yAxisWidth() + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      const { ...xLabelStyle } = axis.x.text.style;\n      const { ...yLabelStyle } = axis.y.text.style;\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style);\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     * @return {number} width\n     */\n    gridWidth(): number {\n      const { axis, width, margin } = props;\n      return Number(width) - (margin.left * 2) - this.yAxisWidth();\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     * @return {number} width\n     */\n    gridHeight(): number {\n      const { height, margin, axis } = props;\n      return height - (margin.top * 2) - this.xAxisHeight();\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     * @return {Number} Margin\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    /**\n     * Calculate the bar width\n     * @return {number} bar width\n     */\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      groupData: IGroupData[],\n    ) {\n      const bins = this.getBins();\n      const { height, width, margin, bar, delay, duration,\n        axis, stroke, tip, tipContentFn } = props;\n      const barWidth = this.barWidth();\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const borderColors = scaleOrdinal(['#FFF']);\n\n      const yAxisWidth = this.yAxisWidth();\n      const groupedMargin = this.groupedMargin();\n\n      const maxItems = groupData.reduce((prev, next) => {\n        const thisMax = next.reduce((p, n) => n.length > p ? n.length : p, 0);\n        return thisMax > prev ? thisMax : prev;\n      }, 0);\n      groupData.forEach((data, i) => {\n        const joyTitle = props.data[i].title;\n        const g = this.containers[i]\n          .selectAll('g')\n          .data(data);\n\n        const bars = g.enter()\n          .append('g')\n          .merge(g)\n          .attr('transform', (d) => {\n            const xdelta = yAxisWidth\n              + axis.y.style['stroke-width']\n              + x(d[0].label);\n\n            const ydelta = yOuterScaleBand(d[0].joyLabel);\n            return `translate(${xdelta}, ${ydelta})`;\n          })\n          .selectAll('rect')\n          .data((d) => d);\n\n        bars\n          .enter()\n          .append('rect')\n          .attr('height', 0)\n          .attr('y', (d: IGroupDataItem): number => yOuterScaleBand.bandwidth())\n\n          .attr('class', 'bar')\n          .attr('x', (d) => innerScaleBand(d.groupLabel))\n          .attr('width', (d) => barWidth)\n          .attr('fill', (d, ix) => colors(ix))\n\n          .on('mouseover', (d: IGroupDataItem) => {\n            const ix = bins.findIndex((b) => b === d.label);\n            tipContent.html(() => tipContentFn(bins, ix, d.value, joyTitle));\n            tip.fx.in(tipContainer);\n          })\n          .on('mousemove', () => tip.fx.move(tipContainer))\n          .on('mouseout', () => tip.fx.out(tipContainer))\n          .merge(bars)\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('y', (d: IGroupDataItem): number => y(d.value))\n          .attr('stroke', (d, ix) => {\n            if (borderColors) {\n              return borderColors(ix);\n            }\n          })\n          .attr('shape-rendering', 'crispEdges')\n          .attr('stroke-width', stroke.width)\n          .attr('stroke-linecap', stroke.linecap)\n\n          // Hide bar's bottom border\n          .attr('stroke-dasharray',\n            (d: IGroupDataItem): string => {\n              const currentHeight = yOuterScaleBand.bandwidth() - y(d.value);\n              return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n            })\n          .attr('height', (d: IGroupDataItem): number =>\n            yOuterScaleBand.bandwidth() - y(d.value),\n        );\n\n        g.exit().remove();\n      });\n    },\n\n    makeGrid(props: IJoyPlotProps) {\n      const { grid } = props;\n      this.gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      this.gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     * @param {Object} props Props\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin, bar } = props;\n      const ticks = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? prev : c;\n      }, 0);\n      const axisWidth = axis.y.style['stroke-width'];\n\n      const offset = {\n        x: this.yAxisWidth() + axisWidth,\n        y: this.gridHeight(),\n      };\n\n      if (grid.x.visible) {\n        // Add the X gridlines\n        this.gridX.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        this.gridX.call(make_x_gridlines(get(grid, 'x.ticks', ticks))\n          .tickSize(-height + this.xAxisHeight() + (margin.top * 2))\n          .tickFormat(() => ''));\n\n        attrs(this.gridX.selectAll('.tick line'), grid.x.style);\n        attrs(this.gridX.selectAll('.domain'), { stroke: 'transparent' });\n      }\n\n      if (grid.y.visible) {\n        // add the Y gridlines\n        this.gridY.attr('transform', 'translate(' + (this.yAxisWidth() + axisWidth) + ', 0)')\n          .transition()\n          .call(make_y_gridlines(get(grid, 'y.ticks', ticks))\n            .tickSize(-width + (margin.left * 2) + this.yAxisWidth())\n            .tickFormat(() => ''),\n        );\n\n        attrs(this.gridY.selectAll('.tick line'), grid.y.style);\n\n        // Hide the first horizontal grid line to show axis\n        this.gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n          .attr('display', 'none');\n        attrs(this.gridY.selectAll('.domain'), { stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     * @param {HTMLElement} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: HTMLElement, newProps: IJoyPlotProps) {\n      if (!props.data) {\n        return;\n      }\n      this.mergeProps(newProps);\n      const { data, visible } = props;\n\n      dataSets = data.map((d) => {\n        const lineData = [] as IGroupData;\n        d.counts.forEach((count) => {\n          count.data.forEach((value, i) => {\n            if (!lineData[i]) {\n              lineData[i] = [];\n            }\n            lineData[i].push({\n              groupLabel: count.label,\n              joyLabel: d.title,\n              label: d.bins[i],\n              value: visible[d.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n            } as IGroupDataItem);\n          });\n        });\n        return lineData;\n      });\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this.updateChart(dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return JoyPlotD3;\n});\n","import { rgb } from 'd3-color';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IChartState,\n  IDomain,\n  IGrid,\n  IHistogramBar,\n  IHistogramData,\n  IMargin,\n  IStroke,\n  TipContentFn,\n} from './Histogram';\nimport { joyPlotD3 } from './JoyplotD3';\n\nexport interface IJoyPlotProps {\n  axis?: IAxes;\n  bar?: IHistogramBar;\n  className?: string;\n  data: IHistogramData[];\n  delay?: number;\n  duration?: number;\n  colorScheme?: string[];\n  domain?: IDomain;\n  grid?: IGrid;\n  height: number;\n  margin?: IMargin;\n  stroke?: IStroke;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<string>;\n  visible?: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * Histogram component\n */\nclass Histogram extends React.Component<IJoyPlotProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Partial<IJoyPlotProps> = {\n    axis: {},\n    bar: {\n      margin: 0,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: (d, i, colors) => rgb(colors(i)).darker(1).toString(),\n      width: 1,\n    },\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IJoyPlotProps) {\n    super(props);\n    this.chart = joyPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IJoyPlotProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default Histogram;\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import { axisBottom, axisLeft } from 'd3-axis';\nimport * as get from 'lodash.get';\nimport attrs from './d3/attrs';\nimport { IAxes } from './Histogram';\n\n// Gridlines in y axis function\nexport const makeYGridlines = (y, ticks: number = 5) => {\n  return axisLeft(y)\n    .ticks(ticks);\n};\n\n// Gridlines in x axis function\nexport const makeXGridlines = (x, ticks: number = 5) => {\n  return axisBottom(x)\n    .ticks(ticks);\n};\n\nexport const drawGrid = (x, y, gridX, gridY, props, ticks) => {\n  const { height, width, axis, grid, margin } = props;\n  const axisWidth = axis.y.style['stroke-width'];\n\n  const offset = {\n    x: yAxisWidth(axis) + axisWidth,\n    y: gridHeight(props),\n  };\n\n  if (grid.x.visible) {\n    // Add the X gridlines\n    gridX.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n    gridX.call(makeXGridlines(x, get(grid, 'x.ticks', ticks))\n      .tickSize(-height + xAxisHeight(props.axis) + (margin.top * 2))\n      .tickFormat(() => ''));\n\n    attrs(gridX.selectAll('.tick line'), grid.x.style);\n    attrs(gridX.selectAll('.domain'), { stroke: 'transparent' });\n  }\n\n  if (grid.y.visible) {\n    // add the Y gridlines\n    gridY.attr('transform', 'translate(' + (yAxisWidth(axis) + axisWidth) + ', 0)')\n      .transition()\n      .call(makeYGridlines(y, get(grid, 'y.ticks', ticks))\n        .tickSize(-width + (margin.left * 2) + yAxisWidth(axis))\n        .tickFormat(() => ''),\n    );\n\n    attrs(gridY.selectAll('.tick line'), grid.y.style);\n\n    // Hide the first horizontal grid line to show axis\n    gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n      .attr('display', 'none');\n    attrs(gridY.selectAll('.domain'), { stroke: 'transparent' });\n  }\n};\n\nexport const gridHeight = (props): number => {\n  const { height, margin, axis } = props;\n  return height - (margin.top * 2) - xAxisHeight(axis);\n};\n\nexport const yAxisWidth = (axis: IAxes) => {\n  return axis.y.label === ''\n    ? axis.y.width\n    : axis.y.width + 30;\n};\n\nexport const xAxisHeight = (axis: IAxes) => {\n  return axis.x.label === ''\n    ? axis.x.height\n    : axis.x.height + 30 + get(axis, 'x.margin', 0);\n};\n\nexport const gridWidth = (props): number => {\n  const { axis, width, margin } = props;\n  return width - (margin.left * 2) - yAxisWidth(axis);\n};\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { select } from 'd3-selection';\nimport { timeFormat } from 'd3-time-format';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridHeight,\n  gridWidth,\n  xAxisHeight,\n  yAxisWidth,\n} from './grid';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n} from './Histogram';\nimport tips, { makeTip } from './tip';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const histogramD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let tipContent;\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n  // @TODO make this a prop\n  const stacked = false;\n\n  const defaultProps: IHistogramProps = {\n    axis: {\n      x: {\n        height: 20,\n        label: '',\n        margin: 10,\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n      },\n      y: {\n        label: '',\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        ticks: 10,\n        width: 25,\n      },\n    },\n    bar: {\n      groupMargin: 0.1,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const HistogramD3 = {\n    /**\n     * Initialization\n     */\n    create(el: HTMLElement, props: Partial<IHistogramProps> = {}) {\n      this.mergeProps(props);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      this.container = svg\n        .append('g')\n        .attr('class', 'histogram-container');\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: Partial<IHistogramProps>) {\n      this.props = merge<IHistogramProps>(defaultProps, newProps);\n      this.props.data = newProps.data;\n      if (newProps.colorScheme) {\n        this.props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = this.props;\n      const scale = {\n        x: 1 - (margin.left / width),\n        y: 1 - (margin.top / height),\n      };\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top}) scale(${scale.x},${scale.y})`);\n\n      const r = makeTip(this.props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData): void {\n      const yDomain: number[] = [];\n      const { domain, margin, height } = this.props;\n      const allCounts: number[] = data.reduce((prev: number[], next): number[] => {\n        return [...prev, ...next.map((n) => n.value)];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : thisExtent[1];\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : thisExtent[0];\n      const yRange = [height - (margin.top * 2) - xAxisHeight(this.props.axis), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    makeScales() {\n      this.xAxis = svg.append('g').attr('class', 'x-axis');\n      this.yAxis = svg.append('g').attr('class', 'y-axis');\n\n      this.xAxisLabel = svg.append('g');\n      this.yAxisLabel = svg.append('g');\n    },\n\n    /**\n     * Draw scales\n     */\n    _drawScales(data: IHistogramData) {\n      const { axis, margin, height } = this.props;\n      const valuesCount = this.valuesCount(data.counts);\n      const w = gridWidth(this.props);\n\n      const dataLabels = data.counts.map((c) => c.label);\n\n      x\n        .domain(data.bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      if (stacked) {\n        innerScaleBand\n          .domain(['main'])\n          .rangeRound([0, x.bandwidth()])\n          .paddingInner(this.barMargin());\n      } else {\n        innerScaleBand\n          .domain(dataLabels)\n          .rangeRound([0, x.bandwidth()])\n          .paddingInner(this.barMargin());\n      }\n      const xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n      if (axis.x.scale === 'TIME' && axis.x.dateFormat) {\n        xAxis.tickFormat(timeFormat(axis.x.dateFormat));\n      }\n\n      this.xAxis\n        .attr('transform', 'translate(' + (yAxisWidth(axis) + axis.y.style['stroke-width']) + ',' +\n          (height - xAxisHeight(this.props.axis) - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      this.appendDomainRange(y, this.dataSets);\n\n      const yAxis = axisLeft(y).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n      if (axis.y.scale === 'TIME' && axis.y.dateFormat) {\n        yAxis.tickFormat(timeFormat(axis.y.dateFormat));\n      }\n      this.yAxis\n        .attr('transform', 'translate(' + yAxisWidth(axis) + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style);\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     */\n    groupedMargin(): number {\n      const m = get(this.props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    barMargin(): number {\n      const m = get(this.props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      bins: string[],\n      groupData: IGroupData,\n    ) {\n      const { axis, height, width, margin, delay, duration, tip } = this.props;\n      const barWidth = this.barWidth();\n\n      // const borderColors = set.borderColors ? d3.scaleOrdinal(set.borderColors) : null;\n      const colors = scaleOrdinal(this.props.colorScheme);\n      const gHeight = gridHeight(this.props);\n\n      const g = this.container\n        .selectAll('g')\n        .data(groupData);\n\n      const bars = g.enter()\n        .append('g')\n        .merge(g)\n        .attr('transform', (d) => {\n          const xdelta = yAxisWidth(axis)\n            + axis.y.style['stroke-width']\n            + x(d[0].label);\n          return `translate(${xdelta}, 0)`;\n        })\n        .selectAll('rect')\n        .data((d) => d);\n\n      // Don't ask why but we must reference tipContentFn as this.props.tipContentFn otherwise\n      // it doesn't update with props changes\n      const onMouseOver = (d: IGroupDataItem, i: number) => {\n        const ix = bins.findIndex((b) => b === d.label);\n        tipContent.html(() => this.props.tipContentFn(bins, ix, d.value));\n        tip.fx.in(tipContainer);\n      };\n\n      bars\n        .enter()\n        .append('rect')\n        .attr('height', 0)\n        .attr('y', (d: IGroupDataItem, stackIndex: number): number => {\n          const setIndex = bins.findIndex((b) => b === d.label);\n          const thisSetData = groupData[setIndex];\n          // @TODO stack charts\n          // const offset = stackIndex > 0\n          //   ? y(10)\n          //   : 0;\n          const offset = 0;\n          return gHeight - offset;\n        })\n        .attr('class', 'bar')\n        .on('mouseover', onMouseOver)\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .merge(bars)\n        .attr('x', (d) => {\n          return innerScaleBand(d.groupLabel);\n        })\n        .attr('width', (d) => barWidth)\n        .attr('fill', (d, i) => colors(i))\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        .attr('y', (d: IGroupDataItem, stackIndex: number): number => {\n          // const setIndex = bins.findIndex((b) => b === d.label);\n          // const thisSetData = groupData[setIndex];\n          // @TODO stack charts\n          // const offset = stackIndex > 0\n          //   ? 5\n          //   : 0;\n          const offset = 0;\n          return y(d.value + offset);\n        })\n        // Hide bar's bottom border\n        .attr('stroke-dasharray',\n          (d: IGroupDataItem): string => {\n            const currentHeight = gHeight - (y(d.value));\n            return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n          })\n        .attr('height', (d: IGroupDataItem): number => gHeight - (y(d.value)));\n\n      bars.exit().remove();\n      g.exit().remove();\n\n      const xText = this.xAxisLabel\n        .selectAll('text')\n        .data([axis.x.label]);\n\n      xText.enter().append('text')\n        .attr('class', 'x-axis-label')\n        .merge(xText)\n        .attr('transform',\n          'translate(' + (width / 2) + ' ,' +\n          ((height - xAxisHeight(this.props.axis) - (margin.left * 2)) + axis.x.margin) + ')')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n\n      const yText = this.yAxisLabel\n        .selectAll('text')\n        .data([axis.y.label]);\n\n      yText.enter().append('text')\n        .attr('class', 'y-axis-label')\n        .merge(yText)\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0)\n        .attr('x', 0 - (gHeight / 2 - (margin.top * 2)))\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n    },\n\n    makeGrid() {\n      this.gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      this.gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n    /**\n     * Update chart\n     */\n    update(el: HTMLElement, props: IHistogramProps) {\n      if (!props.data) {\n        return;\n      }\n      this.mergeProps(props);\n      if (!this.props.data.bins) {\n        return;\n      }\n\n      const { data, visible } = this.props;\n      this.dataSets = [] as IGroupData;\n\n      data.counts.forEach((count) => {\n        count.data.forEach((value, i) => {\n          if (!this.dataSets[i]) {\n            this.dataSets[i] = [];\n          }\n          this.dataSets[i].push({\n            groupLabel: count.label,\n            label: data.bins[i],\n            value: visible[data.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n          } as IGroupDataItem);\n        });\n      });\n\n      this._drawScales(this.props.data);\n      drawGrid(x, y, this.gridX, this.gridY, this.props, this.valuesCount(data.counts));\n      this.updateChart(data.bins, this.dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HistogramD3;\n});\n","import { rgb } from 'd3-color';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { histogramD3 } from './HistogramD3';\n\nexport interface IChartAdaptor {\n  create: (el: Element | Text, props: { [key: string]: any }) => void;\n  update: (el: Element | Text, props: { [key: string]: any }) => void;\n  destroy: (el: Element | Text) => void;\n}\n\nexport interface IHistogramBar {\n  groupMargin?: number;\n  margin?: number;\n  width?: number;\n}\n\nexport interface IGrid {\n  x?: {\n    height?: number;\n    ticks?: number;\n    visible?: boolean;\n    style?: ISVGLineStyle;\n  };\n  y?: {\n    style?: ISVGLineStyle;\n    ticks?: number;\n    visible?: boolean;\n  };\n}\n\nexport interface IStroke {\n  color: ((d, i: number, colors: (i: number) => string) => string) | string;\n  dasharray?: string;\n  linecap?: string;\n  width: number;\n}\n\nexport interface IAxes {\n  y?: IAxis;\n  x?: IAxis;\n}\nexport interface IHistogramDataSet {\n  borderColors?: string[];\n  colors?: string[];\n  label: string;\n  data: number[];\n}\n\nexport interface IHistogramData {\n  bins: string[];\n  counts: IHistogramDataSet[];\n  colorScheme?: string[];\n  title?: string;\n  grid?: IGrid;\n}\n\nexport interface IDomain {\n  max: number;\n  min: number;\n}\n\nexport interface IMargin {\n  top?: number;\n  left?: number;\n  right?: number;\n  bottom?: number;\n}\nexport interface IHistogramProps {\n  axis?: IAxes;\n  bar?: IHistogramBar;\n  className?: string;\n  data: IHistogramData;\n  delay?: number;\n  duration?: number;\n  colorScheme?: string[];\n  domain?: IDomain;\n  grid?: IGrid;\n  height: number;\n  margin?: IMargin;\n  stroke?: IStroke;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<string>;\n  visible?: { [key: string]: boolean };\n  width: number | string;\n}\n\ntype Scale = 'LINEAR' | 'TIME' | 'LOG';\n\nexport interface ISVGLineStyle {\n  'stroke'?: string;\n  'fill'?: string;\n  'opacity'?: number;\n  'stroke-width'?: number;\n  'stroke-opacity'?: number;\n  'shape-rendering'?: string;\n  'visible'?: boolean;\n}\n\ninterface ISVGTextStyle {\n  fill?: string;\n  'font-size'?: string;\n  dy?: string | number;\n  'stroke-opacity'?: number;\n  'text-anchor'?: string;\n  transform?: string;\n  x?: string | number;\n  y?: string | number;\n}\n\nexport interface IChartState {\n  parentWidth?: number;\n}\n\nexport interface IAxis {\n  dateFormat?: string;\n  numberFormat?: string;\n  ticks?: number;\n  tickValues?: number[];\n  height?: number;\n  label?: string;\n  margin?: number;\n  scale?: Scale;\n  style?: ISVGLineStyle;\n  text?: {\n    style: ISVGTextStyle;\n  };\n  width?: number;\n  tickSize?: number;\n  visible?: boolean;\n}\n\nexport type TipContentFn<T> = (bins: T[], i: number, d: number, groupTitle?: string) => string;\n\n/**\n * Histogram component\n */\nclass Histogram extends React.Component<IHistogramProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Partial<IHistogramProps> = {\n    axis: {},\n    bar: {\n      margin: 0,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: (d, i, colors) => rgb(colors(i)).darker(1).toString(),\n      width: 1,\n    },\n    tipContentFn: (bins: string[], i, d) =>\n      bins[i] + '<br />' + d.toFixed(2),\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IHistogramProps) {\n    super(props);\n    this.chart = histogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IHistogramProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default Histogram;\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n} from './Histogram';\nimport tips, { makeTip } from './tip';\n\nexport const horizontalHistogramD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let tipContent;\n  const x = scaleLinear();\n  const y = scaleBand();\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisLeft(y)\n      .ticks(ticks);\n  }\n\n  const defaultProps = {\n    axis: {\n      x: {\n        height: 25,\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        ticks: 10,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        width: 20,\n      },\n    },\n    bar: {\n      height: 50,\n      margin: 10,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [],\n    delay: 0,\n    duration: 400,\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    width: 200,\n  };\n\n  const HorizontalHistogramD3 = {\n    /**\n     * Initialization\n     * @param {Node} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: HTMLElement, props = {}) {\n      this.props = merge(defaultProps, props);\n      this.update(el, this.props);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Dom} el Dom container node\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = this.props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(this.props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     * @param {Object} counts Histogram data set values\n     * @return {Number} count\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Draw scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data: IHistogramData) {\n      const { margin, width, height, axis } = this.props;\n      const valuesCount = this.valuesCount(data.counts);\n\n      svg.selectAll('.y-axis').remove();\n      svg.selectAll('.x-axis').remove();\n\n      const h = this.gridHeight();\n      let xDomain;\n      let xAxis;\n      let yAxis;\n      let xRange;\n      const allCounts = data.counts.reduce((a: number[], b: IHistogramDataSet): number[] => {\n        return [...a, ...b.data];\n      }, []);\n\n      y.domain(data.bins)\n        .rangeRound([0, h]);\n\n      xAxis = axisBottom(x).ticks(axis.x.ticks);\n      yAxis = axisLeft(y).ticks(axis.y.ticks);\n\n      if (h / valuesCount < 10) {\n        // Show one in 10 x axis labels\n        xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n      }\n\n      xDomain = extent(allCounts, (d) => d);\n      xDomain[0] = 0;\n      xRange = [0, width - (margin.top * 2) - axis.y.width];\n      x.range(xRange)\n        .domain(xDomain);\n\n      svg.append('g').attr('class', 'y-axis')\n        .attr('transform', 'translate(' + axis.y.width + ', 0)')\n        .call(yAxis);\n\n      svg.append('g').attr('class', 'x-axis')\n        .attr('transform', 'translate(' + axis.y.width + ',' +\n          (height - axis.x.height - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style);\n    },\n\n    /**\n     * Draw the bars\n     * @param {Object} info Bar data etc\n     */\n    _drawBars(info: IHistogramData) {\n      const valuesCount = this.valuesCount(info.counts);\n      info.counts.forEach((set: IHistogramDataSet, setIndex: number) => {\n        this.drawDataSet(info.bins, set, setIndex, info.counts.length);\n      });\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     * @return {number} width\n     */\n    gridWidth(): number {\n      const { axis, width, margin } = this.props;\n      return width - (margin.left * 2) - axis.y.width;\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     * @return {number} width\n     */\n    gridHeight(): number {\n      const { height, margin, axis } = this.props;\n      return height - (margin.top * 2) - axis.x.height;\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     * @return {Number} Margin\n     */\n    groupedMargin(): number {\n      const { data } = this.props;\n      return ((data.counts.length - 1) * 3);\n    },\n\n    /**\n     * Calculate the bar height\n     * @return {number} bar height\n     */\n    barHeight() {\n      const { axis, width, margin, data, bar, stroke } = this.props;\n      const h = this.gridHeight();\n      const valuesCount = this.valuesCount(data.counts);\n      const setCount = data.counts.length;\n      let barHeight = (h / valuesCount) - (bar.margin * 2) - this.groupedMargin();\n\n      // Small bars - reduce margin and re-calcualate bar width\n      if (barHeight < 5) {\n        bar.margin = 1;\n        barHeight = Math.max(1, (h - (valuesCount + 1) * bar.margin) /\n          valuesCount);\n      }\n\n      // show data sets next to each other...\n      return barHeight / setCount;\n    },\n\n    /**\n     * Draw a single data set into the chart\n     * @param {Array} bins Data set labels\n     * @param {Object} set HistogramDataSet\n     * @param {number} setIndex Data set index\n     * @param {number} setCount Total number of data sets\n     */\n    drawDataSet(\n      bins: string[], set: IHistogramDataSet,\n      setIndex: number, setCount: number,\n    ) {\n      const { height, width, margin, bar, delay, duration,\n        axis, stroke, tip, tipContentFn } = this.props;\n      let barItem;\n      const barHeight = this.barHeight();\n      const colors = scaleOrdinal(set.colors || this.props.colorScheme);\n      const borderColors = set.borderColors ? scaleOrdinal(set.borderColors) : null;\n\n      const selector = '.bar-' + setIndex;\n      const multiLineOffset = (index) => setCount === 1\n        ? 0\n        : ((index + setIndex) * (barHeight + this.groupedMargin()));\n\n      svg.selectAll(selector).remove();\n\n      // Set up bar initial props\n      barItem = svg.selectAll(selector)\n        .data(set.data)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar ' + selector)\n        .attr('y', (d, index, all) => {\n          return bar.margin\n            + (barHeight + (bar.margin * 2)) * (index)\n            + multiLineOffset(index);\n        })\n        .attr('height', (d) => barHeight)\n        .attr('fill', (d, i) => colors(i))\n        .on('mouseover', (d: number, i: number) => {\n          tipContent.html(() => tipContentFn(bins, i, d));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .attr('x', (d: number): number => axis.y.width + axis.y.style['stroke-width'])\n        .attr('width', 0);\n\n      barItem.attr('stroke', (d, i) => {\n        if (borderColors) {\n          return borderColors(i);\n        }\n        return typeof stroke.color === 'function'\n          ? stroke.color(d, i, colors)\n          : stroke.color;\n      })\n        .attr('shape-rendering', 'crispEdges')\n        .attr('stroke-width', stroke.width)\n        .attr('stroke-linecap', stroke.linecap);\n\n      if (stroke.dasharray !== '') {\n        barItem.attr('stroke-dasharray', stroke.dasharray);\n      }\n\n      // Animate in bar\n      barItem\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        // Hide bar's left border\n        .attr('stroke-dasharray',\n          (d: number): string => {\n            const currentWidth = x(d);\n            return `${currentWidth + barHeight + currentWidth} ${barHeight}`;\n          })\n        .attr('width',\n          (d: number): number => x(d));\n\n      barItem.exit().remove();\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     * @param {Object} props Props\n     */\n    _drawGrid(props: IHistogramProps) {\n      const { data, height, width, axis, grid, margin } = props;\n      const ticks = this.valuesCount(data.counts);\n      const axisWidth = axis.y.style['stroke-width'];\n      const offset = {\n        x: axis.y.width + this.groupedMargin() / 2,\n        y: 0,\n      };\n      let g;\n      let gy;\n\n      // Horizontal lines\n      if (grid.x.visible) {\n        // Add the X gridlines\n        g = svg.append('g')\n          .attr('class', 'grid gridX')\n          .attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        g.call(make_x_gridlines(grid.x.ticks || ticks)\n          .tickSize(-width + (margin.left * 2) + axis.y.width)\n          .tickFormat(() => ''));\n\n        attrs(g.selectAll('.tick line'), grid.x.style);\n        attrs(g.selectAll('.domain'), { stroke: 'transparent' });\n      }\n\n      // Vertical lines.....\n      if (grid.y.visible) {\n        // add the Y gridlines\n        gy = svg.append('g')\n          .attr('class', 'grid gridY')\n          .attr('transform', 'translate(' + (axis.y.width + axisWidth) + ', '\n            + (height - axis.x.height - (margin.top * 2)) + ')')\n          .call(make_y_gridlines(grid.y.ticks || ticks)\n            .tickSize(-height + (margin.left * 2) + axis.x.height) // Line Length\n            .tickFormat(() => ''),\n          );\n        attrs(gy.selectAll('.tick line'), grid.y.style);\n\n        attrs(gy.selectAll('.domain'), { stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     * @param {HTMLElement} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: HTMLElement, props: IHistogramProps) {\n      if (!props.data) {\n        return;\n      }\n      this.props = merge(defaultProps, props);\n      this._makeSvg(el);\n      if (!this.props.data.bins) {\n        return;\n      }\n\n      this._drawScales(this.props.data);\n      this._drawGrid(this.props);\n      this._drawBars(this.props.data);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HorizontalHistogramD3;\n});\n","import { rgb } from 'd3-color';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramProps,\n} from './Histogram';\nimport { horizontalHistogramD3 } from './HorizontalHistogramD3';\n\n/**\n * Horizontal Histogram component\n */\nclass HorizontalHistogram extends React.Component<IHistogramProps, IChartState> {\n\n  private histogram: IChartAdaptor;\n  private ref;\n\n  public static defaultProps = {\n    axis: {},\n    bar: {\n      margin: 2,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: (d, i, colors) => rgb(colors(i)).darker(1),\n      width: 1,\n    },\n    tipContentFn: (bins: string[], i, d) =>\n      bins[i] + '<br />' + d.toFixed(2),\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IHistogramProps) {\n    super(props);\n    this.histogram = horizontalHistogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.histogram.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.histogram.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.histogram.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IHistogramProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Props recieved, update the chart\n   * @param {Object} props Props\n   */\n  public componentWillReceiveProps(props: IHistogramProps) {\n    this.histogram.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.histogram.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default HorizontalHistogram;\n","import {\n  scaleLinear,\n  ScaleLinear,\n  scaleLog,\n  ScaleLogarithmic,\n  scaleTime,\n  ScaleTime,\n} from 'd3-scale';\n\nimport { IAxes } from '../';\n\nexport type AnyScale = ScaleLinear<number, number> | ScaleTime<any, any>\n  | ScaleLogarithmic<any, any>;\n\nexport const buildScales = (axis: IAxes) => {\n  let x: AnyScale;\n  let y: AnyScale;\n  switch (axis.x.scale) {\n    case 'LOG':\n      x = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      x = scaleTime();\n      break;\n    default:\n      x = scaleLinear();\n      break;\n  }\n\n  switch (axis.y.scale) {\n    case 'LOG':\n      y = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      x = scaleTime();\n      break;\n    default:\n      y = scaleLinear();\n      break;\n  }\n  return [x, y];\n};\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport { easeCubic } from 'd3-ease';\nimport { format } from 'd3-format';\nimport { select } from 'd3-selection';\nimport {\n  area,\n  curveCatmullRom,\n  line,\n} from 'd3-shape';\nimport {\n  timeFormat,\n  timeParse,\n} from 'd3-time-format';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\n\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridWidth,\n  xAxisHeight as getXAxisHeight,\n  yAxisWidth as getYAxisWidth,\n} from './grid';\nimport {\n  IChartAdaptor,\n  IHistogramDataSet,\n} from './Histogram';\nimport {\n  IChartPoint,\n  ILineChartDataSet,\n  ILineChartProps,\n  ISVGPoint,\n} from './LineChart';\nimport tips, { makeTip } from './tip';\nimport { buildScales } from './utils/scales';\n\nconst ZERO_SUBSITUTE: number = 1e-6;\n\nexport const lineChartD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let xParseTime;\n  let xFormatTime;\n  let tipContent;\n\n  const\n    lineProps = {\n      curveType: curveCatmullRom,\n      fill: false,\n      show: true,\n      stroke: '#005870',\n      strokeDashArray: '5 5',\n      strokeDashOffset: 0,\n    };\n\n  const pointProps: ISVGPoint = {\n    fill: 'rgba(255, 255, 255, 0)',\n    radius: 4,\n    show: true,\n    stroke: '#005870',\n  };\n\n  const defaultProps: ILineChartProps = {\n    axis: {\n      x: {\n        height: 20,\n        scale: 'LINEAR',\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n      },\n      y: {\n        scale: 'LINEAR',\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        ticks: 10,\n        width: 25,\n      },\n    },\n    className: 'line-chart-d3',\n    fx: easeCubic,\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 250,\n    line: lineProps,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    point: pointProps,\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (info, i, d) => {\n      switch (typeof info[i].x) {\n        case 'object': // date\n          return xFormatTime(info[i].x) + ', ' + info[i].y;\n        default:\n          return Number(info[i].x).toFixed(3) + ', ' + info[i].y;\n      }\n    },\n    width: 200,\n  };\n\n  const datumProps = {\n    line: lineProps,\n    point: pointProps,\n  };\n\n  const curve = (curveType, yAxisWidth, x, y) => line()\n    .curve(curveType)\n    .x((d: any) => x(d.x) + yAxisWidth)\n    .y((d: any) => y(d.y));\n\n  const LineChartD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Node, props: Object = {}) {\n      this.props = merge(defaultProps, props);\n      this._makeSvg(el);\n      this.makeScales();\n      [this.x, this.y] = buildScales(this.props.axis);\n      this.makeGrid();\n      this.container = svg\n        .append('g')\n        .attr('class', 'linechart-container');\n\n      this.lineContainer = this.container\n        .append('g')\n        .attr('class', 'line-container');\n      this._createLines(this.props.data);\n      this.update(el, this.props);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = this.props;\n      const scale = {\n        x: 1 - (margin.left / width),\n        y: 1 - (margin.top / height),\n      };\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top}) scale(${scale.x},${scale.y})`);\n\n      const r = makeTip(this.props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Iterate over the dataset drawing points for sets marked as\n     * requiring points.\n     */\n    _drawDataPointSet(data: ILineChartDataSet[]) {\n      const { axis, tip } = this.props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      const pointContainer = this.container.selectAll('g').data(data);\n\n      // Don't ask why but we must reference tipContentFn as this.props.tipContentFn otherwise\n      // it doesn't update with props changes\n      const onMouseOver = (d: ILineChartDataSet, i: number) => {\n        tipContent.html(() => this.props.tipContentFn([d], 0));\n        tip.fx.in(tipContainer);\n      };\n      const points = pointContainer.enter()\n        .append('g')\n        .attr('class', (d, i: number) => 'point-container' + i)\n        .merge(pointContainer)\n        .selectAll('circle')\n        .data((d) => {\n          return d.data.map((dx) => ({\n            ...dx,\n            point: d.point,\n          }));\n        });\n\n      // UPDATE - Update old elements as needed.\n      points.attr('class', 'update');\n\n      // ENTER + UPDATE\n      // After merging the entered elements with the update selection,\n      // apply operations to both.\n      points.enter().append('circle')\n        .attr('class', 'enter')\n        .on('mouseover', onMouseOver)\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .merge(points)\n        .attr('class', 'point')\n        .attr('cy', (d) => this.y(d.y))\n        .attr('r', (d, i: number) => 0)\n        .attr('fill', (d) => d.point.fill)\n        .attr('stroke', (d) => d.point.stroke)\n        .attr('cx', (d) => {\n          return this.x(d.x) + yAxisWidth;\n        })\n        .transition()\n        .duration(400)\n        .attr('r', (d) => d.point.show ? d.point.radius : 0)\n        .delay(650);\n\n      // EXIT - Remove old elements as needed.\n      pointContainer.exit().remove();\n      points.exit().remove();\n    },\n\n    makeScales() {\n      this.xAxis = svg.append('g').attr('class', 'x-axis');\n      this.yAxis = svg.append('g').attr('class', 'y-axis');\n\n      this.xAxisLabel = svg.append('g');\n      this.yAxisLabel = svg.append('g');\n    },\n\n    /**\n     * Draw the chart scales\n     */\n    _drawScales(data: Array<ILineChartDataSet<IChartPoint<number, number>>>) {\n      // @TODO Grid not rendering down to x axis\n      const { axis, height } = this.props;\n      const w = gridWidth(this.props);\n      let yDomain;\n      let xDomain;\n      const ys: any[] = [];\n      const xs: any[] = [];\n      const yAxis = axisLeft(this.y);\n      if (axis.y.tickValues) {\n        yAxis.tickValues(axis.y.tickValues);\n      } else {\n        yAxis.ticks(axis.y.ticks);\n      }\n      if (axis.y.numberFormat) {\n        yAxis.tickFormat(format(axis.y.numberFormat));\n      }\n\n      const xAxis = axisBottom(this.x); // .ticks(axis.x.ticks);\n      if (axis.x.tickValues) {\n        xAxis.tickValues(axis.x.tickValues);\n      }\n      if (axis.x.scale === 'TIME' && axis.x.dateFormat) {\n        xAxis.tickFormat(timeFormat(axis.x.dateFormat));\n      }\n      const xAxisHeight = getXAxisHeight(axis);\n      const yAxisWidth = getYAxisWidth(axis);\n\n      data.forEach((datum: ILineChartDataSet<IChartPoint<number, number>>) => {\n        datum.data.forEach((d: IChartPoint<number, number>) => {\n          let parsedY = d.y;\n          let parsedX = d.x;\n          if (axis.y.scale === 'LOG' && d.y === 0) {\n            parsedY = ZERO_SUBSITUTE;\n          }\n          if (axis.x.scale === 'LOG' && d.x === 0) {\n            parsedX = ZERO_SUBSITUTE;\n          }\n          ys.push((parsedY));\n          xs.push((parsedX));\n        });\n      });\n      yDomain = extent(ys);\n      xDomain = extent(xs);\n      // domain mustn't be 0 as log(0) gives Infinity. 1 lower domain gives better looking graphs\n      if (axis.y.scale === 'LOG' && yDomain[0] === ZERO_SUBSITUTE) {\n        yDomain[0] = 1;\n      }\n      if (axis.x.scale === 'LOG' && xDomain[0] === ZERO_SUBSITUTE) {\n        xDomain[0] = 1;\n      }\n      this.x\n        .domain(xDomain)\n        .rangeRound([0, w]);\n\n      this.y.domain(yDomain)\n        .range([height - xAxisHeight, 0]);\n\n      this.yAxis\n        .attr('transform', `translate(${yAxisWidth}, 0)`)\n        .transition()\n        .call(yAxis);\n\n      this.xAxis\n        .attr('transform', `translate(${yAxisWidth},${(height - xAxisHeight)})`)\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style);\n    },\n\n    _createLines(data: ILineChartDataSet[]) {\n      data.forEach((d, i) => {\n        this.lineContainer.append('path')\n          .attr('class', `line-${i}`);\n      });\n\n      // change the line\n      data\n        .forEach((d, i) => {\n          this.lineContainer.append('path')\n            .attr('class', `fill-${i}`);\n\n        });\n\n    },\n\n    /**\n     * Iterate over data and update lines\n     */\n    _drawLines(data: ILineChartDataSet[]) {\n      const { axis } = this.props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      // change the line\n      data.forEach((d, i) => {\n        this.lineContainer.select(`.line-${i}`)\n          .attr('fill', 'none')\n          .attr('stroke-dashoffset', d.line.strokeDashOffset)\n          .attr('stroke-dasharray', d.line.strokeDashOffset)\n          .attr('stroke', d.line.stroke)\n          .transition()\n          .duration(500)\n          .attr('d', curve(d.line.curveType, yAxisWidth, this.x, this.y)(d.data as any))\n          .delay(50);\n      });\n    },\n\n    /**\n     * Iterates ove data and updates area fills\n     */\n    drawAreas(data: ILineChartDataSet[]) {\n      const { axis, height } = this.props;\n      const yAxisWidth = getYAxisWidth(axis);\n      const xAxisHeight = getXAxisHeight(axis);\n      const thisArea = (curveType) => area()\n        .curve(curveType)\n        .x((d: any) => this.x(d.x) + yAxisWidth)\n        .y0((d) => height - xAxisHeight)\n        .y1((d: any) => this.y(d.y));\n\n      // change the line\n      data\n        .forEach((d, i) => {\n          this.lineContainer.select(`.fill-${i}`)\n            .attr('fill', d.line.fill.fill)\n            .style('opacity', d.line.show && d.line.fill.show ? 1 : 0)\n            .transition()\n            .duration(500)\n            .delay(50)\n            .attr('d', thisArea(d.line.curveType)(d.data as any))\n\n            ;\n        });\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(data: IHistogramDataSet[]): number {\n      return data.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    makeGrid() {\n      this.gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      this.gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, props) {\n      if (!props.data) {\n        return;\n      }\n      console.log('receive update', props);\n      this.props = merge(defaultProps, props);\n      console.log('update', this.props.point);\n      [this.x, this.y] = buildScales(this.props.axis);\n      let data = props.data;\n\n      xParseTime = timeParse(props.axis.x.dateFormat);\n      xFormatTime = timeFormat(props.axis.x.dateFormat);\n      data = data.map((datum: ILineChartDataSet<IChartPoint<number, number>>) => {\n        if (props.axis.x.scale === 'TIME') {\n          datum.data = datum.data.map((d) => {\n            const newd = {\n              ...d,\n              x: typeof d.x === 'object'\n                ? d.x\n                : xParseTime(d.x.toString()),\n            };\n            return newd;\n          });\n        }\n        return Object.assign({}, datumProps, datum);\n      });\n      this._drawScales(data);\n      this._drawLines(data);\n      this.drawAreas(data);\n      drawGrid(this.x, this.y, this.gridX, this.gridY, this.props, this.valuesCount(data));\n      this._drawDataPointSet(data);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return LineChartD3;\n});\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IGrid,\n  IHistogramData,\n  IMargin,\n  ISVGLineStyle,\n  TipContentFn,\n} from './Histogram';\nimport { lineChartD3 } from './lineChartD3';\n\ninterface IState {\n  parentWidth?: number;\n}\n\nexport type IChartPointValue = number | string | Date | object;\nexport interface IChartPoint<X extends IChartPointValue = Date | number, Y extends IChartPointValue = number> {\n  x: X;\n  y: Y;\n}\nexport interface ILineChartDataSet<T extends IChartPoint<IChartPointValue, IChartPointValue> = IChartPoint> {\n  label: string;\n  point?: {\n    radius: number;\n    stroke: string;\n    fill: string;\n    show: boolean;\n  };\n  line?: {\n    show: boolean;\n    fill?: {\n      show: boolean;\n      fill: string;\n    };\n    curveType?: any;\n    stroke?: string;\n    strokeDashOffset?: number;\n    strokeDashArray?: string;\n  };\n  data: T[];\n}\n\nexport interface ISVGPoint extends ISVGLineStyle {\n  radius?: 4;\n  show: boolean;\n}\n\nexport interface ILineChartProps {\n  axis?: IAxes;\n  className?: string;\n  data?: ILineChartDataSet[];\n  fx?: (n: number) => number;\n  grid?: IGrid;\n  height?: number | string;\n  line?: any;\n  margin?: IMargin;\n  point?: ISVGPoint;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<{ x: string | number, y: string | number }>;\n  width?: number | string;\n}\n\nclass LineChart extends React.Component<ILineChartProps, IState> {\n\n  private chart;\n  private ref;\n\n  constructor(props: ILineChartProps) {\n    super(props);\n    this.chart = lineChartD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n\n  }\n\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state. If a histogram has been assigned\n   * to the props, then render this data. Otherwise generate\n   * a random normal dist\n   */\n  public getChartState(): ILineChartProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  public getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  public render(): JSX.Element {\n    return <div ref={(ref) => this.ref = ref} className=\"chart-container\"></div>;\n  }\n}\n\nexport default LineChart;\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","import {\n  geoMercator,\n  geoPath,\n} from 'd3-geo';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\nimport { FeatureCollection } from 'geojson';\n\nimport { IChartAdaptor } from './Histogram';\nimport { IMapProps } from './Map';\n\nexport const mapD3 = ((): IChartAdaptor => {\n  let svg;\n\n  const defaultProps: IMapProps = {\n    className: 'map-d3',\n    data: [],\n    geojson: {\n      features: [],\n      type: 'FeatureCollection',\n    },\n    height: 200,\n    width: 200,\n  };\n\n  const MapD3 = {\n    /**\n     * Initialization\n     * @param {Node} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: HTMLElement, props: Partial<IMapProps> = {}) {\n      this.mergeProps(props);\n      this._makeSvg(el);\n      this.container = svg\n        .append('g')\n        .attr('class', 'histogram-container');\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: Partial<IMapProps>) {\n      this.props = merge<IMapProps>(defaultProps, newProps);\n      this.props.data = newProps.data;\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Dom} el Dom container node\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { width, height, className } = this.props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g');\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      data: any,\n      geojson: FeatureCollection<any, any>,\n    ) {\n\n      const { width, height } = this.props;\n      const zoom = 3;\n      const projection = geoMercator()\n        .scale((width / 2 / Math.PI) * zoom)\n        .translate([(width / 2), (height / 2)]);\n\n      const geoGenerator = geoPath()\n        .projection(projection);\n\n      // const g = this.container\n      // .selectAll('g')\n      // .data(groupData);\n\n      // Join the FeatureCollection's features array to path elements\n      const u = this.container\n        .selectAll('path')\n        .data(geojson.features);\n\n      // Create path elements and update the d attribute using the geo generator\n      u.enter()\n        .append('path')\n        .attr('d', geoGenerator);\n    },\n\n    /**\n     * Update chart\n     * @param {HTMLElement} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: HTMLElement, props: IMapProps) {\n      if (!props.data) {\n        return;\n      }\n      this.mergeProps(props);\n      const { data, geojson } = this.props;\n      this.updateChart(data, geojson);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return MapD3;\n});\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import { FeatureCollection } from 'geojson';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n} from './Histogram';\nimport { mapD3 } from './MapD3';\n\nexport interface IMapProps {\n  className?: string;\n  data: any;\n  geojson: FeatureCollection<any, any>;\n  height: number;\n  width: number | string;\n}\n\n/**\n * Map component\n */\nclass Map extends React.Component<IMapProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Partial<IMapProps> = {\n    geojson: {\n      features: [],\n      type: 'FeatureCollection',\n    },\n    height: 200,\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IMapProps) {\n    super(props);\n    this.chart = mapD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IMapProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"map-chart-container\"></div>);\n  }\n}\n\nexport default Map;\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\n\nimport colorScheme from './colors';\nimport { IChartPoint } from './LineChart';\nimport {\n  IScatterPlotProps,\n  ScatterPlotData,\n} from './ScatterPlot';\n\nexport const scatterPlotD3 = (() => {\n  let svg;\n  const yScale = scaleLinear();\n  const xScale = scaleLinear();\n  const domainByTrait = {};\n  let xAxis;\n  let color;\n  let yAxis;\n\n  const defaultProps = {\n    choices: [],\n    className: 'scatter-plot-d3',\n    colorScheme,\n    data: [],\n    delay: 0,\n    duration: 400,\n    height: 300,\n    legendWidth: 100,\n    padding: 20,\n    radius: 4,\n    width: '100%',\n  };\n\n  const GenerateChart = {\n\n    /**\n     * Initialization\n     * @param {Element} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: Element, props: IScatterPlotProps = defaultProps) {\n      this.props = merge(defaultProps, props);\n      this.update(el, props);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Element} el Dom container node\n     * @param {Array} data Chart data\n     */\n    _makeSvg(el: Element, data: ScatterPlotData) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { width, className, height,\n        legendWidth, padding } = this.props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width + padding + legendWidth)\n        .attr('height', height + padding)\n        .append('g')\n        .attr('transform', 'translate(' + padding + ',' + padding / 2 + ')');\n\n      color = scaleOrdinal(this.props.colorScheme);\n    },\n\n    /**\n     * Draw the chart scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data) {\n      const { height, padding, width } = this.props;\n      const xSize = width / data.length;\n      const ySize = height / data.length;\n      xScale.range([padding / 2, xSize - padding / 2]);\n      yScale.range([height - padding / 2, padding / 2]);\n\n      svg.selectAll('.x.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'x axis')\n        .attr('transform', (d, i) =>\n          'translate(' + (data.length - i - 1) * xSize + ',0)')\n        .each(function (d) {\n          xScale.domain(domainByTrait[d]);\n          select(this).call(xAxis);\n        });\n\n      svg.selectAll('.y.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'y axis')\n        .attr('transform', (d: any, i: number) => 'translate(0,' + i * ySize + ')')\n        .each(function (d: any) {\n          yScale.domain(domainByTrait[d]);\n          select(this).call(yAxis);\n        });\n    },\n\n    /**\n     * Make a legend showing spit choice options\n     */\n    _drawLegend() {\n      const { choices, padding, width, split } = this.props;\n      if (choices === undefined) {\n        return;\n      }\n      const legend = svg.append('g')\n        .attr('transform', 'translate(' + (width + padding / 2) +\n          ', ' + (padding + 50) + ')');\n\n      legend.append('g').append('text')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('dy', '.71em')\n        .text((d) => split);\n      legend.selectAll('.legendItem')\n        .data(choices)\n        .enter().append('g')\n        .each(function (c, i: number) {\n          const cell = select(this);\n          cell.append('rect')\n            .attr('class', 'legendItem')\n            .attr('x', 0)\n            .attr('y', 20 + (i * 15))\n            .attr('fill', color(i))\n            .attr('height', 10)\n            .attr('width', 10);\n\n          cell.append('text')\n            .attr('x', 15)\n            .attr('y', 20 + (i * 15))\n            .attr('dy', '.71em')\n            .text((d) => c);\n        });\n\n      legend.exit().remove();\n    },\n\n    /**\n     * Draw scatter points\n     * @param {Object} traits Chart data\n     * @param {Number} size Chart size\n     */\n    _drawPoints(traits, width: number, height: number) {\n      const { data, delay, duration,\n        choices, split, padding, radius } = this.props;\n      const n = traits.length;\n      const cell = svg.selectAll('.cell')\n        .data(cross(traits, traits))\n        .enter().append('g')\n        .attr('class', 'cell')\n        .attr('transform', (d) => 'translate(' + (n - d.i - 1) * width +\n          ',' + d.j * width + ')')\n        .each(plot);\n\n      // Titles for the diagonal.\n      cell.filter((d) => d.i === d.j).append('text')\n        .attr('x', padding)\n        .attr('y', padding)\n        .attr('dy', '.71em')\n        .text((d) => d.x);\n\n      /**\n       * Plot a point\n       * @param {Object} p Point\n       */\n      function plot(p: IChartPoint) {\n        const plotCell = select(this);\n        let circle;\n        xScale.domain(domainByTrait[Number(p.x)]);\n        yScale.domain(domainByTrait[Number(p.y)]);\n\n        plotCell.append('rect')\n          .attr('class', 'frame')\n          .attr('x', padding / 2)\n          .attr('y', padding / 2)\n          .attr('width', width - padding)\n          .attr('height', height - padding);\n\n        circle = plotCell.selectAll('circle')\n          .data(data.values)\n          .enter().append('circle')\n          .attr('r', (d) => radius)\n          .attr('cx', (d) => xScale(d[Number(p.x)]))\n          .attr('cy', (d) => yScale(d[Number(p.y)]))\n          .style('fill', (d) => {\n            if (d[split]) {\n              const i = choices.findIndex((c) => c === d[split]);\n              return color(i);\n            }\n            return '#eeaabb';\n          });\n\n        circle\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('r', (d) => radius);\n      }\n\n      /**\n       * Create cross array\n       * // @TODO looks like d3 has its own cross function now...\n       * @param {Object} a point\n       * @param {Object} b point\n       * @return {Array} data\n       */\n      function cross(a, b) {\n        const c = [];\n        const nx = a.length;\n        const m = b.length;\n        let i: number;\n        let j: number;\n        for (i = -1; ++i < nx;) {\n          for (j = -1; ++j < m;) {\n            c.push({ x: a[i], i, y: b[j], j });\n          }\n        }\n        return c;\n      }\n    },\n\n    /**\n     * Update chart\n     * @param {Node} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: Element, props: IScatterPlotProps) {\n      this.props = { ...this.props, ...props };\n      if (!props.data) {\n        return;\n      }\n      const { data, distModels, height, width } = this.props;\n      this._makeSvg(el, props.data);\n      this._drawLegend();\n      const traits = data.keys.filter((k) => distModels.indexOf(k) !== -1);\n      const xSize = width / traits.length;\n      const ySize = height / traits.length;\n      const n = traits.length;\n\n      traits.forEach((trait) => {\n        domainByTrait[trait] = extent(data.values, (d) => d[trait]);\n      });\n      xAxis = axisBottom(xScale)\n        .ticks(6)\n        .tickSize(xSize * n);\n      yAxis = axisLeft(yScale)\n        .ticks(6)\n        .tickSize(-ySize * n);\n\n      this._drawScales(traits);\n      this._drawPoints(traits, xSize, ySize);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return GenerateChart;\n});\n","import * as React from 'react';\nimport { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { scatterPlotD3 } from './ScatterPlotD3';\n\ninterface IChartState {\n  choices: string[];\n  data: any[];\n  height: number;\n  distModels: string[];\n  split: string;\n  parentWidth: number;\n  width: number | string;\n}\n\nexport type ScatterPlotData = any[];\n\nexport interface IScatterPlotProps {\n  choices?: any[];\n  className?: string;\n  chartSize?: number;\n  data: ScatterPlotData;\n  delay?: number;\n  distModels?: string[];\n  duration?: number;\n  height: number;\n  legendWidth?: number;\n  colorScheme?: string[];\n  padding?: number;\n  radius?: number;\n  split?: string;\n  width: string | number;\n}\nclass ScatterPlot extends Component<IScatterPlotProps, IChartState> {\n\n  private chart;\n  private ref;\n\n  public static defaultProps = {\n    height: 400,\n    width: '100%',\n  };\n\n  constructor(props: IScatterPlotProps) {\n    super(props);\n    this.chart = scatterPlotD3();\n    this.state = {\n      choices: [],\n      data: [],\n      distModels: [],\n      height: this.props.height,\n      parentWidth: 400,\n      split: '',\n      width: this.props.width,\n    };\n  }\n\n  private handleResize() {\n    const { legendWidth, padding } = this.props;\n    const chartWidth = Math.max(200, this.ref.offsetWidth - padding - legendWidth);\n    const chartHeight = Math.max(200, window.innerHeight - padding -\n      this.ref.getBoundingClientRect().top);\n    const width = Math.min(chartHeight, chartWidth);\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(this.getDOMNode(), this.getChartState()));\n  }\n\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  private getChartState(): IChartState {\n    let { width } = this.props;\n    const { data, choices, split, distModels, height } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      choices,\n      data,\n      distModels,\n      height,\n      parentWidth: this.state.parentWidth,\n      split,\n      width,\n    };\n  }\n\n  public componentWillReceiveProps(props: IScatterPlotProps) {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  public componentWillUnmount() {\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  public render() {\n    return <div ref={(ref) => this.ref = ref} className=\"scatterplot-chart-container\"></div>;\n  }\n}\n\nexport default ScatterPlot;\n","import filterRange from './colors/filterRange';\nimport Histogram, {\n  IAxes, IHistogramBar, IHistogramData, IHistogramDataSet,\n  IHistogramProps, IStroke,\n} from './Histogram';\n\nimport HorizontalHistogram from './HorizontalHistogram';\nimport JoyPlot from './JoyPlot';\nimport Legend from './Legend';\nimport LineChart, { IChartPoint, ILineChartDataSet, ILineChartProps } from './LineChart';\nimport Map from './Map';\nimport PieChart from './PieChart';\nimport ScatterPlot from './ScatterPlot';\n\nexport {\n  filterRange,\n  JoyPlot,\n  Histogram,\n  HorizontalHistogram,\n  Legend,\n  LineChart,\n  Map,\n  PieChart,\n  ScatterPlot,\n  ILineChartDataSet,\n  IChartPoint,\n  ILineChartProps,\n  IAxes,\n  IHistogramBar,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n  IStroke,\n};\n"],"sourceRoot":""}