{"version":3,"sources":["webpack:///../node_modules/d3-chord/node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-chord/node_modules/d3-array/src/zip.js","webpack:///../node_modules/d3-chord/src/math.js","webpack:///../node_modules/d3-chord/src/chord.js","webpack:///../node_modules/d3-chord/src/array.js","webpack:///../node_modules/d3-chord/src/constant.js","webpack:///../node_modules/d3-chord/src/ribbon.js","webpack:///../node_modules/d3-path/src/path.js","webpack:///../node_modules/d3-shape/src/constant.js","webpack:///../node_modules/d3-shape/src/arc.js"],"names":["a","b","NaN","f","ascending","length","compare","d","x","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","sqrt","cos","sin","pi","PI","halfPi","tau","compareValue","source","value","target","padAngle","sortGroups","sortSubgroups","sortChords","chord","matrix","k","x0","dx","j","groupSums","groupIndex","subgroupIndex","chords","groups","subgroups","push","sort","forEach","di","dj","v","a0","a1","index","subindex","startAngle","endAngle","_","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","context","ribbon","buffer","argv","call","s","apply","this","t","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","path","moveTo","arc","quadraticCurveTo","closePath","tauEpsilon","Path","_x0","_y0","_x1","_y1","constructor","y","lineTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","l01","l","tan","acos","t01","t21","ccw","dy","cw","da","rect","w","h","toString","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","r0","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","ax","ay","bx","by","kc","lc","centroid"],"mappings":"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","file":"102cc6e3234adf3e881871fbfb2c08513ffff5a6-04634b3745a28bc534b7.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;","import { range } from \"d3-array\";\nimport { max, tau } from \"./math\";\n\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n\nexport default function () {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j; // Compute the sum.\n\n    k = 0, i = -1;\n\n    while (++i < n) {\n      x = 0, j = -1;\n\n      while (++j < n) {\n        x += matrix[i][j];\n      }\n\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    } // Sort groups…\n\n\n    if (sortGroups) groupIndex.sort(function (a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    }); // Sort subgroups…\n\n    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {\n      d.sort(function (a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    }); // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n; // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n\n    x = 0, i = -1;\n\n    while (++i < n) {\n      x0 = x, j = -1;\n\n      while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    } // Generate chords for each (non-empty) subgroup-subgroup link.\n\n\n    i = -1;\n\n    while (++i < n) {\n      j = i - 1;\n\n      while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n\n        if (source.value || target.value) {\n          chords.push(source.value < target.value ? {\n            source: target,\n            target: source\n          } : {\n            source: source,\n            target: target\n          });\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}","export var slice = Array.prototype.slice;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { slice } from \"./array\";\nimport constant from \"./constant\";\nimport { cos, halfPi, sin } from \"./math\";\nimport { path } from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function () {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n    if (!context) context = buffer = path();\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n          this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n        } // Otherwise, draw an arc!\n        else {\n            var x20 = x2 - x0,\n                y20 = y2 - y0,\n                l21_2 = x21 * x21 + y21 * y21,\n                l20_2 = x20 * x20 + y20 * y20,\n                l21 = Math.sqrt(l21_2),\n                l01 = Math.sqrt(l01_2),\n                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n                t01 = l / l01,\n                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n            if (Math.abs(t01 - 1) > epsilon) {\n              this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n            }\n\n            this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n          }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._ += \"L\" + x0 + \",\" + y0;\n      } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n      }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport { abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau } from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n      y10 = y1 - y0,\n      x32 = x3 - x2,\n      y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n} // Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function () {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n    if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n    if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n        context.moveTo(r1 * cos(a0), r1 * sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n\n        if (r0 > epsilon) {\n          context.moveTo(r0 * cos(a1), r0 * sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      } // Or is it a circular or annular sector?\n      else {\n          var a01 = a0,\n              a11 = a1,\n              a00 = a0,\n              a10 = a1,\n              da0 = da,\n              da1 = da,\n              ap = padAngle.apply(this, arguments) / 2,\n              rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n              rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n              rc0 = rc,\n              rc1 = rc,\n              t0,\n              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n          if (rp > epsilon) {\n            var p0 = asin(rp / r0 * sin(ap)),\n                p1 = asin(rp / r1 * sin(ap));\n            if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n            if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n          }\n\n          var x01 = r1 * cos(a01),\n              y01 = r1 * sin(a01),\n              x10 = r0 * cos(a10),\n              y10 = r0 * sin(a10); // Apply rounded corners?\n\n          if (rc > epsilon) {\n            var x11 = r1 * cos(a11),\n                y11 = r1 * sin(a11),\n                x00 = r0 * cos(a00),\n                y00 = r0 * sin(a00),\n                oc; // Restrict the corner radius according to the sector angle.\n\n            if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n              var ax = x01 - oc[0],\n                  ay = y01 - oc[1],\n                  bx = x11 - oc[0],\n                  by = y11 - oc[1],\n                  kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                  lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n              rc0 = min(rc, (r0 - lc) / (kc - 1));\n              rc1 = min(rc, (r1 - lc) / (kc + 1));\n            }\n          } // Is the sector collapsed to a line?\n\n\n          if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n          else if (rc1 > epsilon) {\n              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n                  context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the outer ring just a circular arc?\n            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n          // Or perhaps it’s an annular sector collapsed due to padding?\n\n          if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n          else if (rc0 > epsilon) {\n              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n                  context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the inner ring just a circular arc?\n            else context.arc(0, 0, r0, a10, a00, cw);\n        }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}"],"sourceRoot":""}