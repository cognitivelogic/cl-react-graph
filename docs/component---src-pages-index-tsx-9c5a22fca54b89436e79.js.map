{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","a","createElement","title","keywords","description","to","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","length","join","defaultProps","arrayOf","array","Header","siteTitle","react_default","index_es","position","variant","color","gatsby_browser_entry","Layout","Fragment","header","style","flexGrow","margin","padding","paddingTop","width","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-index-tsx-9c5a22fca54b89436e79.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`infoSum`, `charts`, `react`]} description=\"\" />\n    <ul>\n      <li><Link to=\"/histogram\">Histogram</Link></li>\n      <li><Link to=\"/line\">Line Chart</Link></li>\n      <li><Link to=\"/pie\">Pie Chart</Link></li>\n      <li><Link to=\"/joyplot\">Joy Plot</Link></li>\n      <li><Link to=\"/map\">Map</Link></li>\n    </ul>\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"/histogram\">Histogram</Link></Button>\n      <Button><Link to=\"/line\">Line Chart</Link></Button>\n      <Button><Link to=\"/pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"/joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}