{"version":3,"sources":["webpack:///../node_modules/d3-shape/src/curve/step.js","webpack:///./src/pages/scatter.tsx","webpack:///../src/ScatterPlot.tsx","webpack:///../test/fixtures.ts"],"names":["Step","context","t","this","_context","_t","stepBefore","stepAfter","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x","_y","_point","lineEnd","lineTo","closePath","point","x","y","moveTo","x1","initialState","axis","height","width","scale","data","scatterData","Fruit","z","cx","cy","children","fontSize","Scatter","chart","id","PointComponent","props","title","description","variant","container","spacing","className","item","xs","md","component","ScatterPlot","clampToZero","grid","xAxisHeight","yAxisWidth","axisLabelFormat","domain","useScatterDomain","values","reduce","prev","next","concat","map","d","left","svgProps","style","lines","vertical","ticks","horizontal","key","label","replace","show","radius","fill","showTitle","stroke","labelFormat","top","length","Math","floor","now","Date","dateValues","Array","_","i","setDate","getDate","v","lineChartData","curveType","curveStepBefore","data3","curveCatmullRom","tornadoData","bins","counts"],"mappings":"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","file":"component---src-pages-scatter-tsx-cfbbb89228ff58f9aea0.js","sourcesContent":["function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n\n            this._context.lineTo(x1, this._y);\n\n            this._context.lineTo(x1, y);\n          }\n\n          break;\n        }\n    }\n\n    this._x = x, this._y = y;\n  }\n};\nexport default function (context) {\n  return new Step(context, 0.5);\n}\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}","import React, { FC } from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core';\n\nimport { IPointProps } from '../../../src/components/Points';\nimport ScatterPlot, { IProps } from '../../../src/ScatterPlot';\nimport { scatterData } from '../../../test/fixtures';\nimport JSXToString from '../components/JSXToString';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst initialState: IProps = {\n  axis: {\n    x: {\n      height: 20,\n      width: 400,\n      scale: 'linear',\n    },\n    y: {\n      width: 20,\n      height: 400,\n      scale: 'linear',\n    },\n  },\n  height: 400,\n  width: 400,\n  data: [scatterData],\n}\n\nconst Fruit: FC<IPointProps> = ({\n  x,\n  y,\n  z,\n  cx,\n  cy,\n  children,\n}) => <text x={cx} y={cy} fontSize={z * 4}>\n    {x > 2 ? \"üçé\" : \"üçê\"}\n    {children}\n  </text>\n\nconst Scatter = () => {\n  const chart = <ScatterPlot\n    id=\"scatter-demo\"\n    PointComponent={(props: IPointProps) => <Fruit {...props} />}\n    {...initialState} />\n  return (\n    <Layout>\n      <SEO title=\"Line Chart\" description=\"\" />\n      <Typography variant=\"h2\">Scatter Chart</Typography>\n      <div>\n        <Grid container spacing={5} className=\"wrapper\">\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                {chart}\n              </CardContent>\n            </Card>\n            <br />\n            <Card>\n              <CardContent>\n                <JSXToString component={chart} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n\n          </Grid>\n\n        </Grid>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Scatter;\n","import React, {\n  FC,\n  Fragment,\n} from 'react';\n\nimport Base from './components/Base';\nimport Grid from './components/Grid';\nimport Points, { IPointProps } from './components/Points';\nimport XAxis from './components/XAxis';\nimport YAxis, { TAxisLabelFormat } from './components/YAxis';\nimport { IGrid } from './Histogram';\nimport { IAxes } from './legacy/types';\nimport {\n  IChartPoint,\n  IChartPointValue,\n} from './LineChart';\nimport { useScatterDomain } from './utils/useDomain';\n\nexport interface IScatterPlotDataSet<T> {\n  label: string;\n  point: {\n    radius: number;\n    stroke: string;\n    fill: string;\n    show: boolean;\n    showTitle?: boolean;\n  };\n  data: T[];\n}\n\nexport interface IProps<T extends IChartPoint<IChartPointValue, IChartPointValue> = IChartPoint> {\n  axis: IAxes;\n  data: IScatterPlotDataSet<T>[];\n  grid?: IGrid;\n  height: number;\n  id?: string;\n  width: number;\n  xAxisHeight?: number;\n  yAxisWidth?: number;\n  title?: string;\n  description?: string;\n  /**\n   * @description if true then adds a 0 to the data domain. Useful if you don't want your lowest value to appear on top of the x axis\n   */\n  clampToZero?: boolean;\n  axisLabelFormat?: TAxisLabelFormat;\n  /** @description Custom component to override the default <circle /> used to plot points */\n  PointComponent?: FC<IPointProps>;\n}\n\nconst ScatterPlot: FC<IProps> = ({\n  axis,\n  clampToZero = true,\n  data,\n  grid,\n  height,\n  width,\n  xAxisHeight = 60,\n  yAxisWidth = 100,\n  title,\n  description,\n  axisLabelFormat,\n  PointComponent,\n}) => {\n  const domain = useScatterDomain({\n    values: data,\n    clampToZero,\n  });\n  const values = data.reduce((prev, next) => prev.concat(next.data.map((d) => d.x)), [] as any[])\n\n  return (\n    <Base\n      width={width}\n      height={height}\n      title={title}\n      description={description}>\n\n      {\n        grid && <Grid\n          left={yAxisWidth}\n          height={height - xAxisHeight}\n          svgProps={{ ...grid.x.style }}\n          lines={{\n            vertical: grid.y.ticks,\n            horizontal: grid.x.ticks,\n          }}\n          width={width - yAxisWidth} />\n      }\n      {\n        data.map((item) => <Fragment key={item.label.replace(/[^a-zA-Z0-9-]/, '')}>\n\n          {\n            item.point.show &&\n            <Points\n              axis={axis}\n              label={item.label}\n              key={`points-${item.label}`}\n              width={width - yAxisWidth}\n              left={yAxisWidth}\n              height={height - xAxisHeight}\n              radius={item.point.radius}\n              fill={item.point.fill}\n              showTitle={item.point.showTitle}\n              stroke={item.point.stroke}\n              data={item.data}\n              PointComponent={PointComponent} />\n          }\n\n\n        </Fragment>)\n      }\n\n      <YAxis\n        width={yAxisWidth}\n        height={height - xAxisHeight}\n        scale={axis.y.scale ?? 'linear'}\n        domain={domain}\n      />\n\n      <XAxis\n        width={width - yAxisWidth}\n        height={xAxisHeight}\n        labelFormat={axisLabelFormat}\n        scale={axis.x.scale ?? 'band'}\n        top={height - xAxisHeight}\n        left={yAxisWidth}\n        values={\n          values.length > 4\n            ? [values[0], values[Math.floor(values.length / 4)],\n            values[Math.floor(values.length / 2)],\n            values[Math.floor(values.length * (3 / 4))],\n            ] as number[]\n            : values}\n      />\n\n    </Base>\n  )\n}\n\nexport default ScatterPlot;\n","import {\n  curveCatmullRom,\n  curveStepBefore,\n} from 'd3-shape';\n\nimport {\n  IBarChartData,\n  ILineChartDataSet,\n} from '../src';\nimport { IHistogramData } from '../src/Histogram';\nimport { IScatterPlotDataSet } from '../src/ScatterPlot';\nimport { ITornadoData } from '../src/Tornado';\n\nconst now = new Date();\nconst xs = new Array(100).fill('').map((_, i) => new Date(new Date().setDate(now.getDate() + i)))\nconst dateValues = xs.map((v, i) => ({\n  x: v, y: i * 1000,\n}));\n\nexport const lineChartData: ILineChartDataSet<any>[] = [\n  {\n    \"label\": \"cdd7c30f-4d9b-433c-a5d4-12bb39df89c6 usage\",\n    \"line\": {\n      \"fill\": {\n        \"fill\": \"rgba(11, 85, 167, 0.7)\",\n        \"show\": true\n      },\n      \"show\": true,\n      \"stroke\": \"#000\",\n      \"strokeDashArray\": \"0\",\n      \"strokeDashOffset\": 0,\n      curveType: curveStepBefore,\n    },\n    \"point\": {\n      \"fill\": \"#000\",\n      \"radius\": 2,\n      \"show\": true,\n      \"stroke\": \"#000\"\n    },\n    \"data\": dateValues\n  }\n]\n\nexport const histogramData: IHistogramData = {\n  bins: [[0, 50], [50, 150], [150, 300]],\n  counts: [\n    {\n      data: [500, 2000, 1500],\n      label: 'Baseline',\n    },\n  ]\n}\n\nexport const barChartData: IBarChartData = {\n  bins: ['Female', 'Male', 'Other', 'sdfdfg', 'dagdsg', 'sfsd', 'ds34fsdf', 'dfsfsd', 'sdfs34dfs', 'ghf34hfg', 'fd33gag', 'jg343hj', 'a343wes', 'ye343ye', 'fd343gjs', 'sdfd343fg', '34', 'sfsd', '433', '45245', '745'],\n  counts: [\n    {\n      data: [58483, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300],\n      label: 'Baseline',\n    },\n    {\n      data: [54932, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000],\n      label: 'Filtered',\n    },\n  ]\n}\n\nexport const data3: ILineChartDataSet<any>[] = [{\n  'label': 'rob Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(11, 85, 167, 0.2)', show: true },\n    show: true,\n    stroke: 'rgb(11, 85, 167)',\n    'strokeDashArray': '0',\n    'strokeDashOffset': 0\n  },\n  'point':\n    { fill: '#000', radius: 4, show: true, stroke: '' },\n  'data': dateValues,\n}, {\n  'label': 'rob\\'',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(11, 85, 167, 0.7)', show: true },\n    show: true, stroke: '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { fill: '', radius: 0, show: false, stroke: '' },\n  'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n},\n{\n  'label': 'Their Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(0, 169, 123, 0.2)', show: true },\n    show: true, stroke: 'rgb(0, 169, 123)', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { fill: '', radius: 0, show: false, stroke: '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}, {\n  'label': 'Theirs',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(0, 169, 123, 0.7)', show: true },\n    show: true, stroke: '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { fill: '', radius: 0, show: false, stroke: '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}];\n\nexport const tornadoData: ITornadoData = {\n  bins: ['16-18', '18-25', '25-35', '35-50', '50-65', '65-‚àû'],\n  counts: [\n    {\n      label: 'Background',\n      data: [\n        [200, 2600, 5100, 9700, 8400, 6700], // Male bin 1, Male bin 2,\n        [2002, 2100, 4700, 8700, 4900, 1400], // Female bin 1, Female bin 2,\n      ],\n    },\n    {\n      label: 'Foreground',\n      data: [\n        [100, 260, 510, 970, 840, 670], // Male bin 1, Male bin 2,\n        [1000, 5500, 470, 870, 490, 140], // Female bin 1, Female bin 2,\n      ],\n    },\n\n  ],\n}\nexport const scatterData: IScatterPlotDataSet<any> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\n"],"sourceRoot":""}