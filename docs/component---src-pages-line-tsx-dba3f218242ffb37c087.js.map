{"version":3,"sources":["webpack:///../node_modules/d3-shape/src/curve/step.js","webpack:///../node_modules/d3-shape/src/curve/basis.js","webpack:///../node_modules/d3-shape/src/curve/monotone.js","webpack:///./src/components/CurveSelector.tsx","webpack:///./src/pages/line.tsx","webpack:///../test/fixtures.ts"],"names":["Step","context","t","this","_context","_t","stepBefore","stepAfter","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x","_y","_point","lineEnd","lineTo","closePath","point","x","y","moveTo","x1","that","bezierCurveTo","_x0","_x1","_y0","_y1","Basis","sign","slope3","x2","y2","h0","h1","s0","s1","p","Math","min","abs","slope2","h","t0","t1","x0","y0","y1","dx","MonotoneX","MonotoneY","ReflectContext","_t0","Object","create","call","curves","curveBasis","curveCardinal","curveCatmullRom","curveLinear","curveMonotoneX","curveStep","curveStepAfter","curveStepBefore","CurveSelector","onChange","value","useState","functionName","setFunctionName","TextField","select","label","e","target","keys","map","c","MenuItem","key","now","Date","dateValues","Array","fill","_","i","setDate","getDate","v","random","data","lineChartData","line","curveType","show","stroke","strokeDashArray","strokeDashOffset","radius","data2","initialState","axis","height","width","scale","data3","grid","reducer","draft","action","type","labelOrientation","row","newData","index","changes","forEach","cell","col","Number","curve","dash","offset","length","LineExample","useImmerReducer","state","dispatch","useWidth","ref","w","tab","setTab","gridData","toDateString","chart","LineChart","axisLabelFormat","bin","timeFormat","title","description","Typography","variant","Grid","container","spacing","className","item","md","xs","Card","CardContent","JSXToString","component","Tabs","Tab","TabContainer","Button","onClick","valueRenderer","sheetRenderer","props","children","onCellsChanged","gutterBottom","color","id","FormControlLabel","control","Switch","checked","FormGroup","Slider","aria-labelledby","step","tornadoData","bins","counts"],"mappings":"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","file":"component---src-pages-line-tsx-dba3f218242ffb37c087.js","sourcesContent":["function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n\n            this._context.lineTo(x1, this._y);\n\n            this._context.lineTo(x1, y);\n          }\n\n          break;\n        }\n    }\n\n    this._x = x, this._y = y;\n  }\n};\nexport default function (context) {\n  return new Step(context, 0.5);\n}\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}","function _point(that, x, y) {\n  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);\n}\n\nexport { _point as point };\nexport function Basis(context) {\n  this._context = context;\n}\nBasis.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 3:\n        _point(this, this._x1, this._y1);\n\n      // proceed\n\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);\n\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new Basis(context);\n}","function sign(x) {\n  return x < 0 ? -1 : 1;\n} // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\n\n\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n} // Calculate a one-sided slope.\n\n\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\n\nfunction _point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n\n      case 3:\n        _point(this, this._t0, slope2(this, this._t0));\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    var t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        _point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n\n        break;\n\n      default:\n        _point(this, this._t0, t1 = slope3(this, x, y));\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function moveTo(x, y) {\n    this._context.moveTo(y, x);\n  },\n  closePath: function closePath() {\n    this._context.closePath();\n  },\n  lineTo: function lineTo(x, y) {\n    this._context.lineTo(y, x);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n  }\n};\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}","import {\n  curveBasis,\n  curveCardinal,\n  curveCatmullRom,\n  curveLinear,\n  curveMonotoneX,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n} from 'd3-shape';\nimport React, {\n  FC,\n  useState,\n} from 'react';\n\nimport {\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\n\nconst curves = {\n  curveBasis,\n  curveCardinal,\n  curveCatmullRom,\n  curveLinear,\n  curveMonotoneX,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n};\n\n// export const getCurve\n\ninterface IProps {\n  onChange: (curve: any) => void;\n  value: string;\n}\nexport const CurveSelector: FC<IProps> = ({ onChange, value }) => {\n  const [functionName, setFunctionName] = useState('');\n  return (\n    <TextField\n      select\n      label=\"Curve\"\n      value={functionName === '' ? value : functionName}\n      onChange={(e) => {\n        setFunctionName(e.target.value);\n        onChange(curves[e.target.value]);\n      }}\n    >\n      {Object.keys(curves).map((c) => (\n        <MenuItem key={c} value={c}>\n          {c}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n","// Be sure to include styles at some point, probably during your bootstrapping\nimport 'react-datasheet/lib/react-datasheet.css';\n\nimport { curveCatmullRom } from 'd3-shape';\nimport { timeFormat } from 'd3-time-format';\nimport { Draft } from 'immer';\nimport ColorPicker from 'material-ui-color-picker';\nimport React, {\n  FC,\n  useState,\n} from 'react';\nimport ReactDataSheet, { Cell } from 'react-datasheet';\nimport { useImmerReducer } from 'use-immer';\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  MenuItem,\n  Slider,\n  Switch,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport { ILineChartDataSet } from '../../../src';\nimport { ELabelOrientation } from '../../../src/components/YAxis';\nimport LineChart, { IProps } from '../../../src/LineChart';\nimport { useWidth } from '../../../src/utils/useWidth';\nimport {\n  data3,\n  lineChartData,\n} from '../../../test/fixtures';\nimport { AxisActions } from '../components/AxisOptions';\nimport { CurveSelector } from '../components/CurveSelector';\nimport JSXToString from '../components/JSXToString';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { TabContainer } from '../components/TabContainer';\nimport { grid } from '../data';\n\ntype TInitialState = IProps<{ x: number | string | Date, y: number }>;\ntype TData = ILineChartDataSet<{ x: string | number | Date, y: number }>;\n\nconst now = new Date();\nconst xs = new Array(15).fill('').map((_, i) => new Date(new Date().setDate(now.getDate() + i)))\n\nconst dateValues = xs.map((v) => ({\n  x: v, y: Math.random() * 1000,\n}));\n\nconst data = {\n  data: lineChartData[0].data,\n  label: 'test data',\n  line: {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: 'rgba(54, 174, 141, 0.28)',\n      show: true,\n    },\n    show: true,\n    stroke: '#00a97b',\n    strokeDashArray: '10 5',\n    strokeDashOffset: 0,\n  },\n  point: {\n    fill: '#08697F',\n    radius: 1,\n    show: true,\n    stroke: '#483A3A',\n  },\n};\n\nconst data2 = {\n  data: dateValues,\n  label: 'test data 2',\n  line: {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: 'rgba(154, 74, 141, 0.28)',\n      show: true,\n    },\n    show: true,\n    stroke: '#000',\n    strokeDashArray: '10 5',\n    strokeDashOffset: 0,\n  },\n  point: {\n    fill: '#00a97b',\n    radius: 10,\n    show: true,\n    stroke: '#0000',\n  },\n};\n\nconst initialState: TInitialState = {\n  axis: {\n    x: {\n      height: 20,\n      width: 400,\n      scale: 'time',\n    },\n    y: {\n      width: 20,\n      height: 400,\n      scale: 'log',\n    },\n  },\n  height: 400,\n  data: [data3[0]],\n  width: 400,\n  grid,\n};\n\ntype Actions = { type: 'applyChanges', index: 0, changes: any }\n  | { type: 'setCurve', curve: any, index: number }\n  | { type: 'setStroke', stroke: string, index: number }\n  | { type: 'setStrokeDashArray', dash: string, index: number }\n  | { type: 'strokeDashOffset', offset: number, index: number }\n  | { type: 'pointFill', fill: string, index: number }\n  | { type: 'pointRadius', radius: number, index: number }\n  | { type: 'pointStroke', fill: string, index: number }\n  | { type: 'pointShow', show: boolean, index: number }\n  | { type: 'lineFillShow', show: boolean, index: number }\n  | { type: 'lineFillColor', fill: string, index: number }\n  | { type: 'addRow', row: TData; }\n  | { type: 'toggleRow'; }\n  | { type: 'setLabelOrientation', value: ELabelOrientation, axis: 'x' | 'y' }\n  | AxisActions\n  ;\n\nfunction reducer(draft: Draft<TInitialState>, action: Actions) {\n  switch (action.type) {\n    case 'setScale':\n      draft.axis[action.axis].scale = action.value;\n      return;\n    case 'setLabelOrientation':\n      draft.axis[action.axis].labelOrientation = action.value;\n      return;\n    case 'addRow':\n      draft.data = [...draft.data, action.row];\n      return;\n\n    case 'applyChanges':\n      const newData: any = draft.data[action.index].data.map((row) => ({ ...row }));\n      action.changes.forEach(({ cell, row, col, value }) => {\n        const key = col === 0 ? 'x' : 'y';\n        newData[row] = { ...newData[row], [key]: Number(value) };\n      });\n      draft.data[action.index].data = newData;\n      return;\n    case 'setCurve':\n      draft.data[action.index].line.curveType = action.curve;\n      return;\n    case 'setStroke':\n      draft.data[action.index].line.stroke = action.stroke;\n      return;\n    case 'setStrokeDashArray':\n      draft.data[action.index].line.strokeDashArray = action.dash\n      return;\n    case 'strokeDashOffset':\n      draft.data[action.index].line.strokeDashOffset = action.offset;;\n      return;\n    case 'pointFill':\n      draft.data[action.index].point.fill = action.fill;\n      return;\n    case 'pointRadius':\n      draft.data[action.index].point.radius = action.radius;\n      return;\n    case 'pointStroke':\n      draft.data[action.index].point.stroke = action.fill;\n      return;\n    case 'pointShow':\n      draft.data[action.index].point.show = action.show;\n      return;\n    case 'lineFillShow':\n      draft.data[action.index].line.fill.show = action.show;\n      return;\n    case 'lineFillColor':\n      draft.data[action.index].line.fill.fill = action.fill;\n      return;\n    case 'toggleRow':\n      draft.data = draft.data.length === 2 ? [data2] : [data, data2];\n      return;\n  }\n}\n\nconst LineExample: FC = () => {\n  const [state, dispatch] = useImmerReducer(reducer, initialState);\n  const [ref, w] = useWidth('90%');\n\n  const [tab, setTab] = useState(0);\n  const gridData: Cell[][] = state.data[0].data.map((point) => {\n    const x = typeof (point.x) === 'object' ? point.x.toDateString() : point.x;\n    return [{ value: x }, { value: Number(point.y) }];\n  });\n\n  const chart = <LineChart\n    width={w}\n    height={300}\n    grid={state.grid}\n    axisLabelFormat={(axis, bin, i) => axis === 'x' ?\n      timeFormat('%d-%b-%y')(new Date(bin))\n      : bin\n    }\n    axis={state.axis}\n    data={state.data}\n  />\n  return (\n    <Layout>\n      <SEO title=\"Line Chart\" description=\"\" />\n      <Typography variant=\"h2\">Line Chart</Typography>\n\n      <Grid container spacing={5} className=\"wrapper\">\n        <Grid item md={6} xs={12} spacing={5}>\n          <Card>\n            <CardContent>\n              <div ref={ref}>\n                {chart}\n              </div>\n            </CardContent>\n          </Card>\n          <br />\n          <Card>\n            <CardContent>\n              <JSXToString component={chart} />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item md={6} xs={12} spacing={5}>\n          <Card >\n            <CardContent>\n              <Tabs value={tab} onChange={(e, v) => setTab(v)}>\n                <Tab label=\"Data\" />\n                <Tab label=\"Styling\" />\n                <Tab label=\"Grid\" />\n              </Tabs>\n              {\n                tab === 0 && <TabContainer>\n                  <Button onClick={() => dispatch({ type: 'toggleRow' })}>Toggle Row</Button>\n                  <ReactDataSheet\n                    data={gridData}\n                    valueRenderer={(cell) => cell.value}\n                    sheetRenderer={(props) => (\n                      <table className={props.className}>\n                        <thead>\n                          <tr>\n                            {['x', 'y'].map((col) => (<th key={col} className=\"action-cell\">{col}</th>))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {props.children}\n                        </tbody>\n                      </table>\n                    )}\n                    onCellsChanged={(changes) => {\n                      dispatch({ type: 'applyChanges', index: 0, changes });\n                    }} />\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      label=\"Y Axis Scale\"\n                      select\n                      value={state.axis.y.scale}\n                      onChange={(e) => dispatch({ type: 'setScale', axis: 'y', value: e.target.value as Scale })}\n                    >\n                      <MenuItem value=\"LINEAR\">\n                        Linear\n                      </MenuItem>\n                      <MenuItem value=\"LOG\">\n                        Log\n                      </MenuItem>\n                      <MenuItem value=\"TIME\">\n                        Time\n                      </MenuItem>\n                    </TextField>\n                  </Grid>\n                </TabContainer>\n              }\n              {\n                tab === 1 && <TabContainer>\n\n                  <Typography variant=\"h6\" gutterBottom>Line</Typography>\n                  <Grid container spacing={5}>\n                    <Grid item md={6} xs={12}>\n                      <CurveSelector\n                        value={'curveCatmullRom'}\n                        onChange={(curve) => dispatch({ type: 'setCurve', curve, index: 0 })} />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <ColorPicker\n                        value={state.data[0].line.stroke}\n                        label=\"Stroke color\"\n                        onChange={(color) => dispatch({ type: 'setStroke', stroke: color, index: 0 })} />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"strokeDashArray\"\n                        value={state.data[0].line.strokeDashArray}\n                        label=\"Stroke dash array\"\n                        onChange={(e) => dispatch({ type: 'setStrokeDashArray', index: 0, dash: e.target.value })}\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"strokeDashOffset\"\n                        value={state.data[0].line.strokeDashOffset}\n                        label=\"Stroke dash offset\"\n                        onChange={(e) => dispatch({\n                          index: 0,\n                          offset: Number(e.target.value),\n                          type: 'strokeDashOffset',\n                        })}\n                      />\n                    </Grid>\n                  </Grid>\n\n                  <br />\n\n                  <Typography variant=\"h6\" gutterBottom>Point</Typography>\n                  <Grid container spacing={5}>\n                    <Grid item md={6} xs={12}>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={state.data[0].point.show}\n                            color=\"primary\"\n                            onChange={(_, value) => {\n                              dispatch({ type: 'pointShow', show: value, index: 0 });\n                            }}\n                          />\n                        }\n                        label=\"Show points\"\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <Typography>Radius <small>({state.data[0].point.radius})</small></Typography>\n                        <Slider\n                          value={state.data[0].point.radius}\n                          aria-labelledby=\"label\"\n                          step={1}\n                          onChange={(_, value) => dispatch({\n                            index: 0,\n                            radius: Number(value),\n                            type: 'pointRadius',\n                          })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <ColorPicker\n                          id=\"pointFill\"\n                          value={state.data[0].point.fill}\n                          label=\"Fill\"\n                          onChange={(color) => dispatch({ type: 'pointFill', fill: color, index: 0 })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <ColorPicker\n                          id=\"pointStroke\"\n                          value={state.data[0].point.stroke}\n                          label=\"Stroke color\"\n                          onChange={(color) => dispatch({ type: 'pointStroke', fill: color, index: 0 })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                  </Grid>\n\n                  <br />\n\n\n                  <Typography variant=\"h6\" gutterBottom>Fill</Typography>\n                  <Grid container spacing={5}>\n                    <Grid item md={6} xs={12}>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={state.data[0].line.fill.show}\n                            color=\"primary\"\n                            onChange={(_, value) => {\n                              dispatch({ type: 'lineFillShow', show: value, index: 0 });\n                            }}\n                          />\n                        }\n                        label=\"Fill under line\"\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <ColorPicker\n                          id=\"lineFillColor\"\n                          value={state.data[0].line.fill.fill}\n                          label=\"Fill Color\"\n                          onChange={(color) => dispatch({ type: 'lineFillColor', fill: color, index: 0 })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                  </Grid>\n\n                </TabContainer>\n              }\n\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default LineExample;\n","import {\n  curveCatmullRom,\n  curveStepBefore,\n} from 'd3-shape';\nimport { timeFormat } from 'd3-time-format';\n\nimport {\n  IBarChartData,\n  ILineChartDataSet,\n} from '../src';\nimport { IHistogramData } from '../src/Histogram';\nimport { ITornadoData } from '../src/legacy/Tornado';\n\nconst now = new Date();\nconst xs = new Array(100).fill('').map((_, i) => new Date(new Date().setDate(now.getDate() + i)))\nconst dateValues = xs.map((v, i) => ({\n  x: v, y: i * 1000,\n}));\n\nexport const lineChartData: ILineChartDataSet<any>[] = [\n  {\n    \"label\": \"cdd7c30f-4d9b-433c-a5d4-12bb39df89c6 usage\",\n    \"line\": {\n      \"fill\": {\n        \"fill\": \"rgba(11, 85, 167, 0.7)\",\n        \"show\": true\n      },\n      \"show\": true,\n      \"stroke\": \"#000\",\n      \"strokeDashArray\": \"0\",\n      \"strokeDashOffset\": 0,\n      curveType: curveStepBefore,\n    },\n    \"point\": {\n      \"fill\": \"#000\",\n      \"radius\": 2,\n      \"show\": true,\n      \"stroke\": \"#000\"\n    },\n    \"data\": dateValues\n  }\n]\n\nexport const histogramData: IHistogramData = {\n  bins: [[0, 50], [50, 150], [150, 300]],\n  counts: [\n    {\n      data: [500, 2000, 1500],\n      label: 'Baseline',\n    },\n  ]\n}\n\nexport const barChartData: IBarChartData = {\n  bins: ['Female', 'Male', 'Other', 'sdfdfg', 'dagdsg', 'sfsd', 'ds34fsdf', 'dfsfsd', 'sdfs34dfs', 'ghf34hfg', 'fd33gag', 'jg343hj', 'a343wes', 'ye343ye', 'fd343gjs', 'sdfd343fg', '34', 'sfsd', '433', '45245', '745'],\n  counts: [\n    {\n      data: [58483, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300],\n      label: 'Baseline',\n    },\n    {\n      data: [54932, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000],\n      label: 'Filtered',\n    },\n  ]\n}\n\nexport const data3: ILineChartDataSet<any>[] = [{\n  'label': 'rob Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(11, 85, 167, 0.2)', 'show': true },\n    'show': true,\n    'stroke': 'rgb(11, 85, 167)',\n    'strokeDashArray': '0',\n    'strokeDashOffset': 0\n  },\n  'point':\n    { 'fill': '#000', 'radius': 4, 'show': true, 'stroke': '' },\n  'data': dateValues,\n}, {\n  'label': 'rob\\'',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(11, 85, 167, 0.7)', 'show': true },\n    'show': true, 'stroke': '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { 'fill': '', 'radius': 0, 'show': false, 'stroke': '' },\n  'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n},\n{\n  'label': 'Their Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(0, 169, 123, 0.2)', 'show': true },\n    'show': true, 'stroke': 'rgb(0, 169, 123)', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { 'fill': '', 'radius': 0, 'show': false, 'stroke': '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}, {\n  'label': 'Theirs',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(0, 169, 123, 0.7)', 'show': true },\n    'show': true, 'stroke': '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { 'fill': '', 'radius': 0, 'show': false, 'stroke': '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}];\n\nexport const tornadoData: ITornadoData = {\n  bins: ['16-18', '18-25', '25-35', '35-50', '50-65', '65-∞'],\n  // @Todo test with only one count set\n  counts: [\n    {\n      label: 'Background',\n      data: [\n        [200, 2600, 5100, 9700, 8400, 6700], // Male bin 1, Male bin 2,\n        [2002, 2100, 4700, 8700, 4900, 1400], // Female bin 1, Female bin 2,\n      ],\n    },\n    {\n      label: 'Foreground',\n      data: [\n        [100, 260, 510, 970, 840, 670], // Male bin 1, Male bin 2,\n        [1000, 5500, 470, 870, 490, 140], // Female bin 1, Female bin 2,\n      ],\n    },\n\n  ],\n}\n"],"sourceRoot":""}