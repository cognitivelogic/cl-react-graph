{"version":3,"sources":["webpack:///../node_modules/d3-shape/src/curve/basis.js","webpack:///../node_modules/d3-shape/src/curve/monotone.js","webpack:///../node_modules/d3-shape/src/curve/step.js","webpack:///./src/components/CurveSelector.tsx","webpack:///./src/pages/line.tsx","webpack:///../test/fixtures.ts"],"names":["_point","that","x","y","_context","bezierCurveTo","_x0","_x1","_y0","_y1","Basis","context","this","prototype","areaStart","_line","areaEnd","NaN","lineStart","lineEnd","lineTo","closePath","point","moveTo","sign","slope3","x2","y2","h0","h1","s0","s1","p","Math","min","abs","slope2","t","h","t0","t1","x0","y0","x1","y1","dx","MonotoneX","MonotoneY","ReflectContext","Step","_t","_t0","Object","create","call","_x","_y","curves","curveBasis","curveCardinal","curveCatmullRom","curveLinear","curveMonotoneX","curveStep","curveStepAfter","curveStepBefore","CurveSelector","onChange","value","useState","functionName","setFunctionName","TextField","select","label","e","target","keys","map","c","MenuItem","key","formatTime","timeFormat","now","Date","xs","i","setDate","getDate","data","line","curveType","fill","show","stroke","strokeDashArray","strokeDashOffset","radius","data2","initialState","axis","height","width","scale","data3","grid","reducer","draft","action","type","labelOrientation","row","newData","index","changes","forEach","cell","col","Number","curve","dash","offset","length","LineExample","useImmerReducer","state","dispatch","useWidth","ref","w","tab","setTab","gridData","toDateString","chart","useLineDomain","values","LineChart","title","description","Typography","variant","Grid","container","spacing","className","item","md","Card","CardContent","JSXToString","component","Tabs","v","Tab","TabContainer","valueRenderer","sheetRenderer","props","children","onCellsChanged","Button","onClick","gutterBottom","color","id","FormControlLabel","control","Switch","checked","_","FormGroup","Slider","aria-labelledby","step","dateValues","Array","random"],"mappings":"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","file":"component---src-pages-line-tsx-76c8e69a20465bf9b0ea.js","sourcesContent":["function _point(that, x, y) {\n  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);\n}\n\nexport { _point as point };\nexport function Basis(context) {\n  this._context = context;\n}\nBasis.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 3:\n        _point(this, this._x1, this._y1);\n\n      // proceed\n\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);\n\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new Basis(context);\n}","function sign(x) {\n  return x < 0 ? -1 : 1;\n} // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\n\n\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n} // Calculate a one-sided slope.\n\n\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\n\nfunction _point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n\n      case 3:\n        _point(this, this._t0, slope2(this, this._t0));\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    var t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        _point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n\n        break;\n\n      default:\n        _point(this, this._t0, t1 = slope3(this, x, y));\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function moveTo(x, y) {\n    this._context.moveTo(y, x);\n  },\n  closePath: function closePath() {\n    this._context.closePath();\n  },\n  lineTo: function lineTo(x, y) {\n    this._context.lineTo(y, x);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n  }\n};\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n\n            this._context.lineTo(x1, this._y);\n\n            this._context.lineTo(x1, y);\n          }\n\n          break;\n        }\n    }\n\n    this._x = x, this._y = y;\n  }\n};\nexport default function (context) {\n  return new Step(context, 0.5);\n}\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}","import {\n  curveBasis,\n  curveCardinal,\n  curveCatmullRom,\n  curveLinear,\n  curveMonotoneX,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n} from 'd3-shape';\nimport React, {\n  FC,\n  useState,\n} from 'react';\n\nimport {\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\n\nconst curves = {\n  curveBasis,\n  curveCardinal,\n  curveCatmullRom,\n  curveLinear,\n  curveMonotoneX,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n};\n\n// export const getCurve\n\ninterface IProps {\n  onChange: (curve: any) => void;\n  value: string;\n}\nexport const CurveSelector: FC<IProps> = ({ onChange, value }) => {\n  const [functionName, setFunctionName] = useState('');\n  return (\n    <TextField\n      select\n      label=\"Curve\"\n      value={functionName === '' ? value : functionName}\n      onChange={(e) => {\n        setFunctionName(e.target.value);\n        onChange(curves[e.target.value]);\n      }}\n    >\n      {Object.keys(curves).map((c) => (\n        <MenuItem key={c} value={c}>\n          {c}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n","// Be sure to include styles at some point, probably during your bootstrapping\nimport 'react-datasheet/lib/react-datasheet.css';\n\nimport { curveCatmullRom } from 'd3-shape';\nimport { timeFormat } from 'd3-time-format';\nimport { Draft } from 'immer';\nimport ColorPicker from 'material-ui-color-picker';\nimport React, {\n  FC,\n  useState,\n} from 'react';\nimport ReactDataSheet, { Cell } from 'react-datasheet';\nimport { useImmerReducer } from 'use-immer';\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  MenuItem,\n  Slider,\n  Switch,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nimport { ILineChartDataSet } from '../../../src';\nimport { ELabelOrientation } from '../../../src/components/YAxis';\nimport LineChart, { IProps } from '../../../src/LineChart';\nimport { useLineDomain } from '../../../src/utils/useDomain';\nimport { useWidth } from '../../../src/utils/useWidth';\nimport { data3 } from '../../../test/fixtures';\nimport { AxisActions } from '../components/AxisOptions';\nimport { CurveSelector } from '../components/CurveSelector';\nimport JSXToString from '../components/JSXToString';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { TabContainer } from '../components/TabContainer';\nimport { grid } from '../data';\n\ntype TInitialState = IProps<{ x: number | string | Date, y: number }>;\ntype TData = ILineChartDataSet<{ x: string | number | Date, y: number }>;\n\nconst dateFormat = '%d-%b-%y';\nconst formatTime = timeFormat(dateFormat);\nconst now = new Date();\nconst xs = [1, 2, 4, 5, 6, 8, 10].map((i) => formatTime(new Date(new Date().setDate(now.getDate() + i))))\nconst dateValues = [\n  { x: xs[0], y: 1500000 },\n  { x: xs[1], y: 12 },\n  { x: xs[2], y: 3 },\n  { x: xs[3], y: 4 },\n];\n\nconst data = {\n  data: dateValues,\n  label: 'test data',\n  line: {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: 'rgba(54, 174, 141, 0.28)',\n      show: true,\n    },\n    show: true,\n    stroke: '#00a97b',\n    strokeDashArray: '10 5',\n    strokeDashOffset: 0,\n  },\n  point: {\n    fill: '#08697F',\n    radius: 10,\n    show: true,\n    stroke: '#483A3A',\n  },\n};\n\nconst data2 = {\n  data: [\n    { x: 13, y: 1 },\n    { x: 23, y: 12 },\n    { x: 32, y: 3 },\n    { x: 41, y: 4 },\n  ],\n  label: 'test data 2',\n  line: {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: 'rgba(54, 174, 141, 0.28)',\n      show: true,\n    },\n    show: true,\n    stroke: '#08697F',\n    strokeDashArray: '10 5',\n    strokeDashOffset: 0,\n  },\n  point: {\n    fill: '#00a97b',\n    radius: 10,\n    show: true,\n    stroke: '#483A3A',\n  },\n};\n\nconst initialState: TInitialState = {\n  axis: {\n    x: {\n      height: 20,\n      width: 400,\n      scale: 'time',\n    },\n    y: {\n      width: 20,\n      height: 400,\n    },\n  },\n  height: 400,\n  data: [data3[0]],\n  width: 400,\n  grid,\n};\n\ntype Actions = { type: 'applyChanges', index: 0, changes: any }\n  | { type: 'setCurve', curve: any, index: number }\n  | { type: 'setStroke', stroke: string, index: number }\n  | { type: 'setStrokeDashArray', dash: string, index: number }\n  | { type: 'strokeDashOffset', offset: number, index: number }\n  | { type: 'pointFill', fill: string, index: number }\n  | { type: 'pointRadius', radius: number, index: number }\n  | { type: 'pointStroke', fill: string, index: number }\n  | { type: 'pointShow', show: boolean, index: number }\n  | { type: 'lineFillShow', show: boolean, index: number }\n  | { type: 'lineFillColor', fill: string, index: number }\n  | { type: 'addRow', row: TData; }\n  | { type: 'toggleRow'; }\n  | { type: 'setLabelOrientation', value: ELabelOrientation, axis: 'x' | 'y' }\n  | AxisActions\n  ;\n\nfunction reducer(draft: Draft<TInitialState>, action: Actions) {\n  switch (action.type) {\n    case 'setScale':\n      draft.axis[action.axis].scale = action.value;\n      return;\n    case 'setLabelOrientation':\n      draft.axis[action.axis].labelOrientation = action.value;\n      return;\n    case 'addRow':\n      draft.data = [...draft.data, action.row];\n      return;\n\n    case 'applyChanges':\n      const newData: any = draft.data[action.index].data.map((row) => ({ ...row }));\n      action.changes.forEach(({ cell, row, col, value }) => {\n        const key = col === 0 ? 'x' : 'y';\n        newData[row] = { ...newData[row], [key]: Number(value) };\n      });\n      draft.data[action.index].data = newData;\n      return;\n    case 'setCurve':\n      draft.data[action.index].line.curveType = action.curve;\n      return;\n    case 'setStroke':\n      draft.data[action.index].line.stroke = action.stroke;\n      return;\n    case 'setStrokeDashArray':\n      draft.data[action.index].line.strokeDashArray = action.dash\n      return;\n    case 'strokeDashOffset':\n      draft.data[action.index].line.strokeDashOffset = action.offset;;\n      return;\n    case 'pointFill':\n      draft.data[action.index].point.fill = action.fill;\n      return;\n    case 'pointRadius':\n      draft.data[action.index].point.radius = action.radius;\n      return;\n    case 'pointStroke':\n      draft.data[action.index].point.stroke = action.fill;\n      return;\n    case 'pointShow':\n      draft.data[action.index].point.show = action.show;\n      return;\n    case 'lineFillShow':\n      draft.data[action.index].line.fill.show = action.show;\n      return;\n    case 'lineFillColor':\n      draft.data[action.index].line.fill.fill = action.fill;\n      return;\n    case 'toggleRow':\n      draft.data = draft.data.length === 2 ? [data2] : [data, data2];\n      return;\n  }\n}\n\nconst LineExample: FC = () => {\n  const [state, dispatch] = useImmerReducer(reducer, initialState);\n  const [ref, w] = useWidth('90%');\n\n  const [tab, setTab] = useState(0);\n  const gridData: Cell[][] = state.data[0].data.map((point) => {\n    const x = typeof (point.x) === 'object' ? point.x.toDateString() : point.x;\n    return [{ value: x }, { value: Number(point.y) }];\n  });\n  const domain = useLineDomain({\n    values: state.data,\n  });\n  const chart = <LineChart\n    width={w}\n    height={300}\n    grid={state.grid}\n    axis={state.axis}\n    data={state.data}\n  />\n  return (\n    <Layout>\n      <SEO title=\"Line Chart\" description=\"\" />\n      <Typography variant=\"h2\">Line Chart</Typography>\n\n      <Grid container spacing={5} className=\"wrapper\">\n        <Grid item md={6} xs={12} spacing={5}>\n          <Card>\n            <CardContent>\n              <div ref={ref}>\n                {chart}\n              </div>\n            </CardContent>\n          </Card>\n          <br />\n          <Card>\n            <CardContent>\n              <JSXToString component={chart} />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item md={6} xs={12} spacing={5}>\n          <Card >\n            <CardContent>\n              <Tabs value={tab} onChange={(e, v) => setTab(v)}>\n                <Tab label=\"Data\" />\n                <Tab label=\"Styling\" />\n                <Tab label=\"Grid\" />\n              </Tabs>\n              {\n                tab === 0 && <TabContainer>\n                  <ReactDataSheet\n                    data={gridData}\n                    valueRenderer={(cell) => cell.value}\n                    sheetRenderer={(props) => (\n                      <table className={props.className}>\n                        <thead>\n                          <tr>\n                            {['x', 'y'].map((col) => (<th key={col} className=\"action-cell\">{col}</th>))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {props.children}\n                        </tbody>\n                      </table>\n                    )}\n                    onCellsChanged={(changes) => {\n                      dispatch({ type: 'applyChanges', index: 0, changes });\n                    }} />\n                  <Button onClick={() => dispatch({ type: 'toggleRow' })}>Toggle Row</Button>\n                  <Grid item md={6} xs={12}>\n                    <TextField\n                      label=\"Y Axis Scale\"\n                      select\n                      value={state.axis.y.scale}\n                      onChange={(e) => dispatch({ type: 'setScale', axis: 'y', value: e.target.value as Scale })}\n                    >\n                      <MenuItem value=\"LINEAR\">\n                        Linear\n                      </MenuItem>\n                      <MenuItem value=\"LOG\">\n                        Log\n                      </MenuItem>\n                      <MenuItem value=\"TIME\">\n                        Time\n                      </MenuItem>\n                    </TextField>\n                  </Grid>\n                </TabContainer>\n              }\n              {\n                tab === 1 && <TabContainer>\n\n                  <Typography variant=\"h6\" gutterBottom>Line</Typography>\n                  <Grid container spacing={5}>\n                    <Grid item md={6} xs={12}>\n                      <CurveSelector\n                        value={'curveCatmullRom'}\n                        onChange={(curve) => dispatch({ type: 'setCurve', curve, index: 0 })} />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <ColorPicker\n                        value={state.data[0].line.stroke}\n                        label=\"Stroke color\"\n                        onChange={(color) => dispatch({ type: 'setStroke', stroke: color, index: 0 })} />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"strokeDashArray\"\n                        value={state.data[0].line.strokeDashArray}\n                        label=\"Stroke dash array\"\n                        onChange={(e) => dispatch({ type: 'setStrokeDashArray', index: 0, dash: e.target.value })}\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <TextField\n                        id=\"strokeDashOffset\"\n                        value={state.data[0].line.strokeDashOffset}\n                        label=\"Stroke dash offset\"\n                        onChange={(e) => dispatch({\n                          index: 0,\n                          offset: Number(e.target.value),\n                          type: 'strokeDashOffset',\n                        })}\n                      />\n                    </Grid>\n                  </Grid>\n\n                  <br />\n\n                  <Typography variant=\"h6\" gutterBottom>Point</Typography>\n                  <Grid container spacing={5}>\n                    <Grid item md={6} xs={12}>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={state.data[0].point.show}\n                            color=\"primary\"\n                            onChange={(_, value) => {\n                              dispatch({ type: 'pointShow', show: value, index: 0 });\n                            }}\n                          />\n                        }\n                        label=\"Show points\"\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <Typography>Radius <small>({state.data[0].point.radius})</small></Typography>\n                        <Slider\n                          value={state.data[0].point.radius}\n                          aria-labelledby=\"label\"\n                          step={1}\n                          onChange={(_, value) => dispatch({\n                            index: 0,\n                            radius: Number(value),\n                            type: 'pointRadius',\n                          })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <ColorPicker\n                          id=\"pointFill\"\n                          value={state.data[0].point.fill}\n                          label=\"Fill\"\n                          onChange={(color) => dispatch({ type: 'pointFill', fill: color, index: 0 })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <ColorPicker\n                          id=\"pointStroke\"\n                          value={state.data[0].point.stroke}\n                          label=\"Stroke color\"\n                          onChange={(color) => dispatch({ type: 'pointStroke', fill: color, index: 0 })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                  </Grid>\n\n                  <br />\n\n\n                  <Typography variant=\"h6\" gutterBottom>Fill</Typography>\n                  <Grid container spacing={5}>\n                    <Grid item md={6} xs={12}>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={state.data[0].line.fill.show}\n                            color=\"primary\"\n                            onChange={(_, value) => {\n                              dispatch({ type: 'lineFillShow', show: value, index: 0 });\n                            }}\n                          />\n                        }\n                        label=\"Fill under line\"\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <FormGroup>\n                        <ColorPicker\n                          id=\"lineFillColor\"\n                          value={state.data[0].line.fill.fill}\n                          label=\"Fill Color\"\n                          onChange={(color) => dispatch({ type: 'lineFillColor', fill: color, index: 0 })}\n                        />\n                      </FormGroup>\n                    </Grid>\n                  </Grid>\n\n                </TabContainer>\n              }\n\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default LineExample;\n","import { curveCatmullRom } from 'd3-shape';\nimport { timeFormat } from 'd3-time-format';\n\nimport {\n  IBarChartData,\n  ILineChartDataSet,\n} from '../src';\nimport { IHistogramData } from '../src/Histogram';\n\nconst dateFormat = '%d-%b-%y';\nconst now = new Date();\nconst xs = new Array(100).fill('').map((_, i) => new Date(new Date().setDate(now.getDate() + i)))\nconst dateValues = xs.map((v) => ({\n  x: v, y: Math.random() * 1000,\n}));\n\nexport const histogramData: IHistogramData = {\n  bins: [[0, 50], [50, 150], [150, 300]],\n  counts: [\n    {\n      data: [500, 2000, 1500],\n      label: 'Baseline',\n    },\n  ]\n}\n\nexport const barChartData: IBarChartData = {\n  bins: ['Female', 'Male', 'Other', 'sdfdfg', 'dagdsg', 'sfsd', 'ds34fsdf', 'dfsfsd', 'sdfs34dfs', 'ghf34hfg', 'fd33gag', 'jg343hj', 'a343wes', 'ye343ye', 'fd343gjs', 'sdfd343fg', '34', 'sfsd', '433', '45245', '745'],\n  counts: [\n    {\n      data: [58483, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300],\n      label: 'Baseline',\n    },\n    {\n      data: [54932, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000],\n      label: 'Filtered',\n    },\n  ]\n}\n\nexport const data3: ILineChartDataSet<any>[] = [{\n  'label': 'rob Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(11, 85, 167, 0.2)', 'show': true },\n    'show': true,\n    'stroke': 'rgb(11, 85, 167)',\n    'strokeDashArray': '0',\n    'strokeDashOffset': 0\n  },\n  'point':\n    { 'fill': '#000', 'radius': 4, 'show': true, 'stroke': '' },\n  'data': dateValues,\n}, {\n  'label': 'rob\\'',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(11, 85, 167, 0.7)', 'show': true },\n    'show': true, 'stroke': '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { 'fill': '', 'radius': 0, 'show': false, 'stroke': '' },\n  'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n},\n{\n  'label': 'Their Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(0, 169, 123, 0.2)', 'show': true },\n    'show': true, 'stroke': 'rgb(0, 169, 123)', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { 'fill': '', 'radius': 0, 'show': false, 'stroke': '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}, {\n  'label': 'Theirs',\n  'line': {\n    'curveType': curveCatmullRom,\n    'fill': { 'fill': 'rgba(0, 169, 123, 0.7)', 'show': true },\n    'show': true, 'stroke': '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { 'fill': '', 'radius': 0, 'show': false, 'stroke': '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}];\n"],"sourceRoot":""}