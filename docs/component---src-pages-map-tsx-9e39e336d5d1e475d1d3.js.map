{"version":3,"sources":["webpack:///../node_modules/d3-request/src/request.js","webpack:///../node_modules/d3-request/src/type.js","webpack:///../node_modules/d3-request/src/json.js","webpack:///../node_modules/d3-request/src/html.js","webpack:///../node_modules/d3-dsv/src/dsv.js","webpack:///../node_modules/d3-request/src/text.js","webpack:///../node_modules/d3-request/src/xml.js","webpack:///../node_modules/d3-dsv/src/csv.js","webpack:///../node_modules/d3-dsv/src/tsv.js","webpack:///../node_modules/d3-request/src/dsv.js","webpack:///../node_modules/d3-request/src/csv.js","webpack:///../node_modules/d3-request/src/tsv.js","webpack:///./src/pages/map.tsx","webpack:///../src/utils/defaults.ts","webpack:///../src/Histogram.tsx","webpack:///../src/colors/index.js","webpack:///../src/tip.ts","webpack:///../src/d3/attrs.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///../src/colors/filterRange.ts","webpack:///./src/components/seo.tsx","webpack:///../src/Legend.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/JoyplotD3.ts","webpack:///../src/JoyPlot.tsx","webpack:///../src/PieChartD3.ts","webpack:///../src/PieChart.tsx","webpack:///../src/HistogramD3.ts","webpack:///../src/grid.ts","webpack:///./src/data.ts","webpack:///../src/utils/scales.ts","webpack:///../src/lineChartD3.ts","webpack:///../src/LineChart.tsx","webpack:///../src/ScatterPlotD3.ts","webpack:///../src/ScatterPlot.tsx","webpack:///../src/HorizontalHistogramD3.ts","webpack:///../src/HorizontalHistogram.tsx","webpack:///../src/index.ts"],"names":["src_request","url","callback","request","mimeType","response","responseType","event","Object","d3_dispatch","headers","d3_collection","xhr","XMLHttpRequest","user","password","timeout","respond","o","result","status","type","responseText","hasResponse","call","e","XDomainRequest","test","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","name","value","toLowerCase","arguments","length","get","remove","set","data","send","post","method","open","has","setRequestHeader","each","overrideMimeType","error","fixCallback","on","abort","apply","Error","defaultMimeType","r","json","document","createRange","createContextualFragment","JSON","parse","EOL","xml","responseXML","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","i","stringify","join","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","rows","N","I","n","eof","eol","token","c","j","slice","replace","row","push","formatRow","formatValue","convert","object","customConverter","format","columnSet","create","forEach","column","inferColumns","concat","formatRows","csv","csvParse","tsv","tsvParse","src_dsv","_","responseOf","MapExample","_useState","useState","loading","setLoading","_useState2","geojson","setGeoJson","useEffect","collection","react_default","a","createElement","layout","seo","title","description","gatsby_browser_entry","to","src","height","width","lineStyle","fill","opacity","shape-rendering","stroke","stroke-opacity","stroke-width","visible","color","dasharray","linecap","axis","curveCatmullRom","x","dateFormat","label","margin","numberFormat","scale","style","assign","dy","transform","y","tickSize","tickValues","ticks","grid","Histogram","props","_this","_React$Component","this","ref","chart","histogramD3","state","parentWidth","handleResize","_this2","el","getDOMNode","offsetWidth","setState","getChartState","componentDidMount","_this3","window","addEventListener","componentDidUpdate","update","_this$props","rest","children","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","componentWillUnmount","removeEventListener","destroy","node","ReactDOM","findDOMNode","HTMLElement","render","_this4","react__WEBPACK_IMPORTED_MODULE_5___default","className","React","Component","defaultProps","defaultAxis","bar","groupMargin","colorScheme","delay","domain","max","min","duration","bottom","left","right","top","d","colors","rgb","darker","toString","tip","tips","tipContainer","tipContentFn","bins","toFixed","__webpack_exports__","__webpack_require__","makeTip","d3_selection__WEBPACK_IMPORTED_MODULE_0__","fx","in","container","pageX","pageY","transition","move","out","selector","select","append","attr","tipContent","selection","keys","k","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","propTypes","PropTypes","string","isRequired","func","m","module","exports","require","default","filter","Color","hsl","array","luminosity","v","index","self","indexOf","sort","Math","random","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","arrayOf","legendIconStyle","cursor","display","listStyle","Legend","_ref$theme","theme","onSelect","scheme","scaleOrdinal","labels","active","hasOwnProperty","key","backgroundColor","border","onClick","Header","siteTitle","index_es","position","variant","Layout","Fragment","flexGrow","padding","paddingTop","Date","getFullYear","href","_755544856","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","shape","joyPlotD3","svg","dataSets","containers","xAxisContainer","yAxisContainer","gridXContainer","gridYContainer","yOuterScaleBand","scaleBand","scaleLinear","innerScaleBand","counts","defaultGrid","joyTitle","newProps","mergeProps","_makeSvg","makeGrid","makeScales","merge","selectAll","childNodes","getElementsByTagName","removeChild","_props","valuesCount","reduce","b","appendDomainRange","yDomain","allCounts","prev","next","thisCounts","p","item","thisExtent","extent","Number","yRange","bandwidth","range","yAxisWidth","xAxisHeight","_props5","gridHeight","getBins","Array","from","Set","_drawScales","xAxis","_props6","w","gridWidth","dataLabels","rangeRound","paddingInner","groupedMargin","barMargin","axisBottom","undefined","yLabels","String","yOuterBounds","yAxis","axisLeft","yTickSize","attrs","_props7","_props8","barWidth","updateChart","groupData","_props9","borderColors","thisMax","g","bars","enter","ix","findIndex","html","currentHeight","exit","_drawGrid","_props10","axisWidth","offset","make_x_gridlines","tickFormat","make_y_gridlines","_props11","lineData","count","groupLabel","joyLabel","JoyPlot","objectWithoutPropertiesLoose_default","gridDefault","pieChartD3","previousData","storedWidth","storedHeight","donutWidth","displayFn","setIndex","dataSet","drawChartBg","drawCharts","outerRadius","_props2","_props2$donutWidth","radius","innerRadius","_props3","_props3$donutWidth","_props4","drawChart","tau","PI","bgArc","arc","startAngle","endAngle","background","thisPie","pie","arcs","thisArc","path","attrTween","interpolate","_current","arcTween","path2","centroid","PieChart","formatTickTime","timeFormat","gridX","gridY","xAxisLabel","yAxisLabel","gHeight","xd","stackIndex","xText","yText","drawGrid","makeXGridlines","makeYGridlines","data2","filterRange","buildScales","scaleLog","clamp","scaleTime","lineChartD3","xParseTime","xFormatTime","lineContainer","xScale","yScale","lineProps","curveType","show","strokeDashArray","strokeDashOffset","pointProps","easeCubic","info","datumProps","line","point","_buildScales","_createLines","_drawDataPointSet","getYAxisWidth","pointContainer","points","dx","xDomain","ys","xs","getXAxisHeight","datum","parsedY","parsedX","_drawLines","curve","drawAreas","area","y0","y1","_buildScales2","timeParse","LineChart","scatterPlotD3","domainByTrait","choices","values","distModels","legendWidth","split","xSize","ySize","_drawLegend","legend","cell","_drawPoints","traits","nx","cross","plotCell","trait","ScatterPlot","chartWidth","chartHeight","innerHeight","getBoundingClientRect","_this$props2","componentWillReceiveProps","horizontalHistogramD3","xRange","h","_drawBars","drawDataSet","barHeight","setCount","barItem","all","multiLineOffset","currentWidth","gy","HorizontalHistogram","histogram","src_LineChart","src_HorizontalHistogram"],"mappings":"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","file":"component---src-pages-map-tsx-9e39e336d5d1e475d1d3.js","sourcesContent":["import {map} from \"d3-collection\";\nimport {dispatch} from \"d3-dispatch\";\n\nexport default function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n","import request from \"./request\";\n\nexport default function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n","import type from \"./type\";\n\nexport default type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import type from \"./type\";\n\nexport default type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n","import type from \"./type\";\n\nexport default type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import request from \"./request\";\n\nexport default function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request) {\n    return parse(request.responseText, row);\n  };\n}\n","import {csvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/csv\", csvParse);\n","import {tsvParse} from \"d3-dsv\";\nimport dsv from \"./dsv\";\n\nexport default dsv(\"text/tab-separated-values\", tsvParse);\n","import { json } from 'd3-request';\nimport { Link } from 'gatsby';\nimport { FeatureCollection } from 'geojson';\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Map } from '../../../src';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data } from '../data';\n\nconst MapExample = () => {\n  const [loading, setLoading] = useState(true);\n\n  const [geojson, setGeoJson] = useState<FeatureCollection<any, any>>(null);\n  useEffect(() => {\n    const url = 'https://opendata.arcgis.com/datasets/8d3a9e6e7bd445e2bdcc26cdf007eac7_3.geojson';\n    json(url, (error, collection) => {\n      if (error) { throw error; }\n      setGeoJson(collection);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return <div>loading</div>;\n  }\n  return (\n    <Layout>\n      <SEO title=\"Histogram\" description=\"\" />\n      <h1>Map</h1>\n      <Link to=\"/\">Go back to the homepage</Link>\n      <div>\n        <Map\n          data={data}\n          geojson={geojson}\n          height={400}\n          width={400} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default MapExample;\n\n","import { curveCatmullRom } from 'd3-shape';\n\nimport {\n  IAxes,\n  IStroke,\n} from '../';\nimport {\n  IGrid,\n  ISVGLineStyle,\n} from '../Histogram';\nimport { ILineProps } from '../LineChart';\n\nexport const lineStyle: ISVGLineStyle = {\n  'fill': '#000',\n  'opacity': 1,\n  'shape-rendering': 'auto',\n  'stroke': '#000',\n  'stroke-opacity': 1,\n  'stroke-width': 1,\n  'visible': true,\n};\n\nexport const stroke: IStroke = {\n  color: '#000',\n  dasharray: '0',\n  linecap: 'butt',\n  width: 1,\n};\n\nexport const line: ILineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: '#000',\n    show: true,\n  },\n  show: true,\n  stroke: '#000',\n  strokeDashArray: '0',\n  strokeDashOffset: 0,\n};\n\nexport const axis: IAxes = {\n  x: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        dy: '.35em',\n        transform: 'rotate(0)',\n        x: 0,\n        y: 10,\n      },\n    },\n    tickSize: 0,\n    tickValues: [],\n    ticks: 3,\n    visible: true,\n    width: 50,\n  },\n  y: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        fill: '#666',\n      },\n    },\n    tickSize: 20,\n    tickValues: [],\n    ticks: 3,\n    visible: true,\n    width: 50,\n  },\n};\n\nexport const grid: IGrid = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n","import { rgb } from 'd3-color';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { histogramD3 } from './HistogramD3';\nimport tips from './tip';\nimport {\n  axis as defaultAxis,\n  lineStyle,\n  stroke,\n} from './utils/defaults';\nimport Omit from './utils/types';\n\nexport interface IChartAdaptor<P> {\n  create: (el: Element, props: Partial<P>) => void;\n  update: (el: Element, props: Partial<P>) => void;\n  destroy: (el: Element) => void;\n}\n\nexport interface IHistogramBar {\n  groupMargin: number;\n  margin: number;\n  width: number;\n}\n\nexport interface IGrid {\n  x: {\n    height: number;\n    ticks: number;\n    visible: boolean;\n    style: ISVGLineStyle;\n  };\n  y: {\n    style: ISVGLineStyle;\n    ticks: number;\n    visible: boolean;\n  };\n}\n\nexport interface IStroke {\n  color: ((d, i: number, colors: (i: number) => string) => string) | string;\n  dasharray: string;\n  linecap: 'butt' | 'round' | 'square';\n  width: number;\n}\n\nexport interface IAxes {\n  y: IAxis;\n  x: IAxis;\n}\nexport interface IHistogramDataSet {\n  borderColors?: string[];\n  colors?: string[];\n  label: string;\n  data: number[];\n}\n\nexport interface IHistogramData {\n  bins: string[];\n  counts: IHistogramDataSet[];\n  colorScheme?: string[];\n  title?: string;\n}\n\nexport interface IDomain {\n  max: number | null;\n  min: number | null;\n}\n\nexport interface IMargin {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n}\nexport interface IHistogramProps {\n  axis: IAxes;\n  bar: IHistogramBar;\n  className: string;\n  data: IHistogramData;\n  delay: number;\n  duration: number;\n  colorScheme: string[];\n  domain: IDomain;\n  grid: IGrid;\n  height: number;\n  margin: IMargin;\n  stroke: IStroke;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\ntype Scale = 'LINEAR' | 'TIME' | 'LOG';\n\nexport interface ISVGLineStyle {\n  'stroke': string;\n  'fill': string;\n  'opacity': number;\n  'stroke-width': number;\n  'stroke-opacity': number;\n  'shape-rendering': string;\n  'visible': boolean;\n}\n\ninterface ISVGTextStyle {\n  fill?: string;\n  'font-size'?: string;\n  dy?: string | number;\n  'stroke-opacity'?: number;\n  'text-anchor'?: string;\n  transform?: string;\n  x?: string | number;\n  y?: string | number;\n}\n\nexport interface IChartState {\n  parentWidth?: number;\n}\nexport interface IAxis {\n  dateFormat: string;\n  numberFormat: string;\n  ticks: number;\n  tickValues: number[];\n  height: number;\n  label: string;\n  margin: number;\n  scale: Scale;\n  style: ISVGLineStyle;\n  text: {\n    style: ISVGTextStyle;\n  };\n  width: number;\n  tickSize: number;\n  visible: boolean;\n}\n\nexport type TipContentFn<T> = (bins: T[], i: number, d: number, groupTitle?: string) => string;\n\n/**\n * Histogram component\n */\nclass Histogram extends React.Component<IHistogramProps, IChartState> {\n\n  private chart: IChartAdaptor<IHistogramProps>;\n  private ref: HTMLDivElement | null = null;\n\n  public static defaultProps: Omit<IHistogramProps, 'data'> = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      width: 10,\n    },\n    className: '',\n    colorScheme: [],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 100,\n    grid: {\n      x: {\n        height: 0,\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          ...lineStyle,\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      ...stroke,\n      color: (d, i, colors) => rgb(colors(i)).darker(1).toString(),\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i, d) =>\n      bins[i] + '<br />' + d.toFixed(2),\n    visible: {},\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(props: IHistogramProps) {\n    super(props);\n    this.chart = histogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): IHistogramProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default Histogram;\n","export default ['#4bbcad',\n  '#d54539',\n  '#5ab94d',\n  '#8a5cd3',\n  '#a4b243',\n  '#ba5ccd',\n  '#54995c',\n  '#cf47a1',\n  '#d29f3e',\n  '#5c6fda',\n  '#c36528',\n  '#5fa6dc',\n  '#d74770',\n  '#7d7430',\n  '#8a529e',\n  '#df9273',\n  '#5f74b8',\n  '#ac5450',\n  '#d192d7',\n  '#b26088'];\n","import { event } from 'd3-selection';\nimport { select } from 'd3-selection';\n\nexport default {\n  fx: {\n    in: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n      container.transition()\n        .duration(200)\n        .style('opacity', 0.9);\n    },\n    move: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n    },\n    out: (container) => {\n      container.transition()\n        .duration(100)\n        .style('opacity', 0);\n    },\n  },\n};\n\nexport const makeTip = (selector, tipContainer): { tipContainer: any, tipContent: any } => {\n  if (tipContainer) {\n    // Chart could be rebuilt - remove old tip\n    tipContainer.remove();\n  }\n  tipContainer = select(selector).append('div')\n    .attr('class', 'tooltip top')\n    .style('opacity', 0);\n\n  tipContainer.append('div')\n    .attr('class', 'tooltip-arrow');\n  return {\n    tipContainer,\n    tipContent: tipContainer.append('div')\n      .attr('class', 'tooltip-inner'),\n  };\n};\n","import { ISVGLineStyle } from '../Histogram';\n\n/**\n * Apply style object to a d3 selection\n * @param {Object} selection D3 selection\n * @param {Object} style Css styling\n * @return {Object} selection\n */\nexport default (selection, style: ISVGLineStyle) => {\n  Object.keys(style).forEach((k: string) => {\n    selection.attr(k, style[k]);\n  });\n  return selection;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { scaleOrdinal } from 'd3-scale';\nimport React from 'react';\n\nimport colorScheme from './colors';\nimport { IHistogramDataSet } from './Histogram';\n\ninterface IProps {\n  className?: string;\n  theme?: string[];\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  onSelect: (label: string) => void;\n  visible: { [key: string]: boolean };\n}\n\nconst legendIconStyle = {\n  cursor: 'pointer',\n  display: 'inline-block',\n  height: '1rem',\n  margin: '0.25rem 0.5rem',\n  width: '1rem',\n};\n\nconst listStyle = {\n  listStyle: 'none',\n};\n\nconst Legend: React.SFC<IProps> = ({ className, theme = colorScheme, data, onSelect, visible }) => {\n  const scheme: any = scaleOrdinal(theme);\n  const labels = data.bins;\n  return (\n    <div className={className}>\n      <ul style={listStyle}>\n        {\n          labels.map((label) => {\n            const active = (visible.hasOwnProperty(label) && visible[label]) || !visible.hasOwnProperty(label);\n            return (\n              <li key={label}>\n                <div style={{\n                  ...legendIconStyle,\n                  backgroundColor: active ? scheme(label) : '#FFF',\n                  border: '2px solid ' + scheme(label),\n                }}\n                  onClick={() => onSelect(label)}>\n                </div> {label}\n              </li>\n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default Legend;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"histogram\">Histogram</Link></Button>\n      <Button><Link to=\"line\">Line Chart</Link></Button>\n      <Button><Link to=\"pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport merge from 'deepmerge';\nimport get from 'lodash.get';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n} from './Histogram';\nimport { IJoyPlotProps } from './JoyPlot';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n} from './utils/defaults';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const joyPlotD3 = ((): IChartAdaptor<IJoyPlotProps> => {\n  let svg: Selection<any, any, any, any>;;\n  let tipContainer;\n  let tipContent;\n  let props: IJoyPlotProps;\n  let dataSets: IGroupData[];\n  let containers: Array<Selection<SVGGElement, any, any, any>>;\n  let xAxisContainer: Selection<SVGGElement, any, any, any>;\n  let yAxisContainer: Selection<SVGGElement, any, any, any>;\n  let gridXContainer: Selection<SVGGElement, any, any, any>;\n  let gridYContainer: Selection<SVGGElement, any, any, any>;\n  const yOuterScaleBand = scaleBand();\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisLeft(yOuterScaleBand)\n      .ticks(ticks);\n  }\n\n  const defaultProps: IJoyPlotProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [{\n      bins: [],\n      counts: [],\n    }],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: defaultGrid,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins, i, d, joyTitle): string =>\n      joyTitle + ': ' +\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const JoyPlotD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: Partial<IJoyPlotProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      containers = props.data.map((d, i) => svg\n        .append('g')\n        .attr('class', `histogram-container-${i}`),\n      );\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: Partial<IJoyPlotProps>) {\n      props = merge<IJoyPlotProps>(defaultProps, newProps);\n      if (newProps.data) {\n        props.data = newProps.data;\n      }\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     * @param {Object} counts Histogram data set values\n     * @return {Number} count\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData[]): void {\n      const yDomain: number[] = [];\n      const { domain } = props;\n\n      const allCounts: number[] = data.reduce((prev, next) => {\n        const thisCounts: number[] = next.reduce((p, n) => {\n          return [...p, ...n.map((item) => item.value)];\n        }, [] as number[]);\n        return [...prev, ...thisCounts];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : Number(thisExtent[1]);\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : Number(thisExtent[0]);\n      const yRange = [yOuterScaleBand.bandwidth(), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    yAxisWidth() {\n      const { axis } = props;\n      return axis.y.label === ''\n        ? axis.y.width\n        : axis.y.width + 30;\n    },\n\n    xAxisHeight() {\n      const { axis } = props;\n      return axis.x.label === ''\n        ? axis.x.height\n        : axis.x.height + 30;\n    },\n\n    makeScales() {\n      const { axis, margin, height, width } = props;\n      xAxisContainer = svg.append('g').attr('class', 'x-axis');\n      yAxisContainer = svg.append('g').attr('class', 'y-axis');\n\n      if (axis.x.label !== '') {\n        svg.append('text')\n          .attr('class', 'x-axis-label')\n          .attr('transform',\n            'translate(' + (Number(width) / 2) + ' ,' +\n            ((height - this.xAxisHeight() - (margin.left * 2)) + 10 + axis.x.margin) + ')')\n          .style('text-anchor', 'middle')\n          .text(axis.x.label);\n      }\n\n      if (axis.y.label !== '') {\n        svg.append('text')\n          .attr('class', 'y-axis-label')\n          .attr('transform', 'translate(0, -' + this.gridHeight() + ')rotate(-90)')\n          .attr('y', 0 - margin.left)\n          .attr('x', 0 - (height / 2 - (margin.top * 2)))\n          .attr('dy', '1em')\n          .style('text-anchor', 'middle')\n          .text(axis.y.label);\n      }\n    },\n\n    getBins() {\n      return props.data.reduce((prev, next) => {\n        return Array.from(new Set(prev.concat(next.bins)));\n      }, [] as string[]);\n    },\n\n    /**\n     * Draw scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data: IHistogramData[]) {\n      const { bar, domain, margin, width, height, axis } = props;\n      const valuesCount = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? c : prev;\n      }, 0);\n      const w = this.gridWidth();\n\n      let xAxis;\n      const dataLabels = data[0].counts.map((c) => c.label);\n\n      const bins = this.getBins();\n      x\n        .domain(bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      innerScaleBand\n        .domain(dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(this.barMargin());\n\n      xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n\n      xAxisContainer\n        .attr('transform', 'translate(' + (this.yAxisWidth() + axis.y.style['stroke-width']) + ',' +\n          (height - this.xAxisHeight() - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      const yLabels = data.map((d) => String(d.title));\n      const yOuterBounds: [number, number] = [height - (margin.top * 2) - this.xAxisHeight(), 0];\n      yOuterScaleBand.domain(yLabels)\n        .rangeRound(yOuterBounds);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft(yOuterScaleBand).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n\n      yAxisContainer\n        .attr('transform', 'translate(' + this.yAxisWidth() + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     */\n    gridWidth(): number {\n      const { width, margin } = props;\n      return Number(width) - (margin.left * 2) - this.yAxisWidth();\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     */\n    gridHeight(): number {\n      const { height, margin } = props;\n      return height - (margin.top * 2) - this.xAxisHeight();\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    /**\n     * Calculate the bar width\n     */\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      groupData: IGroupData[],\n    ) {\n      const bins = this.getBins();\n      const { height, width, margin, bar, delay, duration,\n        axis, stroke, tip, tipContentFn } = props;\n      const barWidth = this.barWidth();\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const borderColors = scaleOrdinal(['#FFF']);\n\n      const yAxisWidth = this.yAxisWidth();\n      const groupedMargin = this.groupedMargin();\n\n      const maxItems = groupData.reduce((prev, next) => {\n        const thisMax = next.reduce((p, n) => n.length > p ? n.length : p, 0);\n        return thisMax > prev ? thisMax : prev;\n      }, 0);\n      groupData.forEach((data, i) => {\n        const joyTitle = props.data[i].title;\n        const g = containers[i]\n          .selectAll<SVGGElement, {}>('g')\n          .data(data);\n\n        const bars = g.enter()\n          .append<SVGGElement>('g')\n          .merge(g)\n          .attr('transform', (d) => {\n            const xdelta = yAxisWidth\n              + axis.y.style['stroke-width']\n              + (x(d[0].label) || 0);\n\n            const ydelta = yOuterScaleBand(d[0].label);\n            return `translate(${xdelta}, ${ydelta})`;\n          })\n          .selectAll<SVGRectElement, {}>('rect')\n          .data((d) => d);\n\n        bars\n          .enter()\n          .append<SVGRectElement>('rect')\n          .attr('height', 0)\n          .attr('y', (d: IGroupDataItem): number => yOuterScaleBand.bandwidth())\n\n          .attr('class', 'bar')\n          .attr('x', (d) => String(innerScaleBand(d.label)))\n          .attr('width', (d) => barWidth)\n          .attr('fill', (d, ix) => colors(String(ix)))\n\n          .on('mouseover', (d: IGroupDataItem) => {\n            const ix = bins.findIndex((b) => b === d.label);\n            tipContent.html(() => tipContentFn(bins, ix, d.value, joyTitle));\n            tip.fx.in(tipContainer);\n          })\n          .on('mousemove', () => tip.fx.move(tipContainer))\n          .on('mouseout', () => tip.fx.out(tipContainer))\n          .merge(bars)\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('y', (d: IGroupDataItem): number => y(d.value))\n          .attr('stroke', (d, ix) => {\n            if (borderColors) {\n              return borderColors(String(ix));\n            }\n            return '';\n          })\n          .attr('shape-rendering', 'crispEdges')\n          .attr('stroke-width', stroke.width)\n          .attr('stroke-linecap', stroke.linecap)\n\n          // Hide bar's bottom border\n          .attr('stroke-dasharray',\n            (d: IGroupDataItem): string => {\n              const currentHeight = yOuterScaleBand.bandwidth() - y(d.value);\n              return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n            })\n          .attr('height', (d: IGroupDataItem): number =>\n            yOuterScaleBand.bandwidth() - y(d.value),\n          );\n\n        g.exit().remove();\n      });\n    },\n\n    makeGrid() {\n      gridXContainer = svg.append('g')\n        .attr('class', 'grid gridX');\n      gridYContainer = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     * @param {Object} props Props\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin, bar } = props;\n      const ticks = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? prev : c;\n      }, 0);\n      const axisWidth = axis.y.style['stroke-width'];\n\n      const offset = {\n        x: this.yAxisWidth() + axisWidth,\n        y: this.gridHeight(),\n      };\n\n      if (grid.x.visible) {\n        // Add the X gridlines\n        gridXContainer.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        gridXContainer.call(make_x_gridlines(get(grid, 'x.ticks', ticks))\n          .tickSize(-height + this.xAxisHeight() + (margin.top * 2))\n          .tickFormat(() => ''));\n\n        attrs(gridXContainer.selectAll('.tick line'), grid.x.style);\n        attrs(gridXContainer.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n      }\n\n      if (grid.y.visible) {\n        // add the Y gridlines\n        gridYContainer.attr('transform', 'translate(' + (this.yAxisWidth() + axisWidth) + ', 0)')\n          .transition()\n          .call(make_y_gridlines(get(grid, 'y.ticks', ticks))\n            .tickSize(-width + (margin.left * 2) + this.yAxisWidth())\n            .tickFormat(() => ''),\n          );\n\n        attrs(gridYContainer.selectAll('.tick line'), grid.y.style);\n\n        // Hide the first horizontal grid line to show axis\n        gridYContainer.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n          .attr('display', 'none');\n        attrs(gridYContainer.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: Partial<IJoyPlotProps>) {\n      if (!props.data) {\n        return;\n      }\n      this.mergeProps(newProps);\n      const { data, visible } = props;\n\n      dataSets = data.map((d) => {\n        const lineData = [] as IGroupData;\n        d.counts.forEach((count) => {\n          count.data.forEach((value, i) => {\n            if (!lineData[i]) {\n              lineData[i] = [];\n            }\n            lineData[i].push({\n              groupLabel: count.label,\n              joyLabel: d.title,\n              label: d.bins[i],\n              value: visible[d.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n            } as IGroupDataItem);\n          });\n        });\n        return lineData;\n      });\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this.updateChart(dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return JoyPlotD3;\n});\n","import { rgb } from 'd3-color';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IChartState,\n  IDomain,\n  IGrid,\n  IHistogramBar,\n  IHistogramData,\n  IMargin,\n  IStroke,\n  TipContentFn,\n} from './Histogram';\nimport { joyPlotD3 } from './JoyplotD3';\nimport {\n  axis as defaultAxis,\n  grid as gridDefault,\n  lineStyle,\n  stroke,\n} from './utils/defaults';\n\nexport interface IJoyPlotProps {\n  axis: IAxes;\n  bar: IHistogramBar;\n  className: string;\n  data: IHistogramData[];\n  delay: number;\n  duration: number;\n  colorScheme: string[];\n  domain: IDomain;\n  grid: IGrid;\n  height: number;\n  margin: IMargin;\n  stroke: IStroke;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * JoyPlot component\n */\nclass JoyPlot extends React.Component<IJoyPlotProps, IChartState> {\n\n  private chart: IChartAdaptor<IJoyPlotProps>;\n  private ref: HTMLDivElement | null = null;\n\n  public static defaultProps: Partial<IJoyPlotProps> = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0.1,\n      margin: 0,\n      width: 10,\n    },\n    grid: gridDefault,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      ...stroke,\n      color: (d, i, colors) => rgb(colors(i)).darker(1).toString(),\n      width: 1,\n    },\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(props: IJoyPlotProps) {\n    super(props);\n    this.chart = joyPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): IJoyPlotProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default JoyPlot;\n","import 'd3-transition';\n\nimport { interpolate } from 'd3-interpolate';\nimport { scaleOrdinal } from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport {\n  arc,\n  Arc,\n  pie,\n  PieArcDatum,\n} from 'd3-shape';\nimport merge from 'deepmerge';\nimport get from 'lodash.get';\nimport { string } from 'prop-types';\n\nimport colorScheme from './colors';\nimport {\n  IChartAdaptor,\n  IHistogramDataSet,\n} from './Histogram';\nimport {\n  IPieChartProps,\n  IPieDataItem,\n} from './PieChart';\nimport tips, { makeTip } from './tip';\n\ninterface IPieDataset {\n  count: number;\n  groupLabel: string;\n  label: string;\n}\n\nexport const pieChartD3 = ((): IChartAdaptor<IPieChartProps> => {\n\n  let tipContainer;\n  let tipContent;\n\n  const defaultProps: IPieChartProps = {\n    backgroundColor: '#ddd',\n    className: 'piechart-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    donutWidth: 0,\n    height: 200,\n    labels: {\n      display: true,\n      displayFn: (d, ix) => d.value,\n    },\n    margin: {\n      bottom: 0,\n      left: 10,\n      right: 0,\n      top: 10,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number, groupLabel): string => {\n      return groupLabel + ': ' + bins[i] + '<br />' + d;\n    },\n    visible: {},\n    width: 200,\n  };\n\n  let containers: any[];\n  let props: IPieChartProps;\n  let svg: Selection<any, any, any, any>;\n  let dataSets: IPieDataset[][];\n  let previousData: any;\n  let current: any;\n  let storedWidth: number;\n  let storedHeight: number;\n\n  const PieChartD3 = {\n\n    create(el: Element, newProps: Partial<IPieChartProps> = {}) {\n      props = merge(defaultProps, newProps);\n      previousData = props.data.counts.map((set: IHistogramDataSet, setIndex: number) => {\n        return set.data\n          .map((count, i) => ({\n            count,\n            groupLabel: set.label,\n            label: props.data.bins[i],\n          }));\n      });\n      this._makeSvg(el);\n      containers = [];\n      previousData.forEach((dataSet, i) => {\n        this.drawChartBg(props.data, i);\n      });\n\n      this.update(el, props);\n    },\n\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    update(el: Element, newProps: Partial<IPieChartProps>) {\n      if (!props.data) {\n        return;\n      }\n      props = merge(defaultProps, newProps);\n      if (props.colorScheme) {\n        props.colorScheme = props.colorScheme;\n      }\n      if (!props.data.bins) {\n        return;\n      }\n\n      this.drawCharts();\n    },\n\n    outerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = props;\n\n      const radius = Math.min(Number(width), height) / 2;\n      return donutWidth === 0\n        ? radius - 10\n        : radius - 10 - (setIndex * (donutWidth + 10));\n    },\n\n    innerRadius(setIndex = 0) {\n      const { donutWidth = 0, width, height } = props;\n      const radius = Math.min(Number(width), height) / 2;\n      return donutWidth === 0\n        ? 0\n        : radius - 10 - donutWidth - (setIndex * (donutWidth + 10));\n    },\n\n    drawCharts() {\n      const { data, visible } = props;\n      dataSets = data.counts.map((set: IHistogramDataSet) => {\n        return set.data\n          .map((count, i) => ({\n            count: visible[data.bins[i]] !== false ? count : 0,\n            groupLabel: set.label,\n            label: data.bins[i],\n          }));\n      });\n\n      dataSets.forEach((dataSet, i) => {\n        const theme = get(data.counts[i], 'colors', props.colorScheme);\n        this.drawChart(dataSet, i, data.bins, theme);\n      });\n      previousData = dataSets;\n    },\n\n    drawChartBg(data, i) {\n      const { backgroundColor, width, height } = props;\n      const tau = 2 * Math.PI; // http://tauday.com/tau-manifesto\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n      const bgArc = arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius)\n        .startAngle(0)\n        .endAngle(tau);\n      const container = svg\n        .append('g')\n        .attr('class', 'pie-bg');\n      const background = container.append('path')\n        .attr('class', 'pie-background')\n        .style('fill', backgroundColor);\n      background.enter()\n        .attr('transform', 'translate(' + Number(width) / 2 + ',' + height / 2 + ')')\n        .attr('d', bgArc);\n\n      background.merge(background);\n\n      if (!containers[i]) {\n        containers[i] = svg\n          .append('g')\n          .attr('class', 'pie-container');\n      }\n    },\n\n    drawChart(data, i: number, bins: string[], theme: string[]) {\n      const { labels, width, height, tip, tipContentFn } = props;\n      // Stack multiple charts in concentric circles\n      const outerRadius = this.outerRadius(i);\n      const innerRadius = this.innerRadius(i);\n\n      // Function to calculate pie chart paths from data\n      const thisPie = pie()\n        .sort(null)\n        .value((d: any) => d.count);\n\n      // Formated pie chart arcs based on previous current data\n      const arcs = thisPie(previousData[i]);\n\n      const colors = scaleOrdinal(theme);\n\n      const thisArc = arc()\n        .outerRadius(outerRadius)\n        .innerRadius(innerRadius);\n\n      const path = containers[i].selectAll('path')\n        .data(thisPie(data));\n\n      const g = path.enter().append('g')\n        .attr('class', 'arc');\n\n      g.append('path')\n        .attr('transform', 'translate(' + Number(width) / 2 + ',' + height / 2 + ')')\n        .attr('stroke', '#FFF')\n        .attr('fill', (d, j) => colors(j))\n\n        .each((d, j) => { current = arcs[j]; }) // store the initial angles\n        .attr('d', thisArc)\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .style('opacity', 0)\n        .transition()\n        .duration(500)\n        .style('opacity', 1);\n\n      // Fade in when adding (merge)\n      path\n        .merge(path)\n\n        .on('mouseover', (d: PieArcDatum<IPieDataItem>, ix: number) => {\n          tipContent.html(() => tipContentFn(bins, ix, d.data.count, d.data.groupLabel));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .transition()\n        .delay(400)\n        .duration(500)\n        .attr('fill', (d, j) => colors(j))\n        .attrTween('d', arcTween(thisArc));\n\n      const path2 = containers[i].selectAll('text.label')\n        .data(thisPie(data));\n      const gLabel = path2.enter().append('text')\n        .attr('class', 'label')\n        .each(() => {\n          // Store initial offset incase we change chart heights.\n          storedHeight = height;\n          storedWidth = Number(width);\n        })\n        .attr('transform', (d) => {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (storedWidth / 2);\n          const y = centroid[1] + (storedHeight / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .each((d: any) => {\n          // Store current value to work out fx transition opacities\n          current = d;\n        })\n        .text((d, ix) => {\n          if (d.value === 0) {\n            return '';\n          }\n          return labels.displayFn(d, ix);\n        });\n\n      path2\n        .merge(path2)\n        .transition()\n        .duration(500)\n        .style('opacity', 0)\n        .transition()\n        .attr('transform', (d) => {\n          const centroid = thisArc.centroid(d);\n          const x = centroid[0] + (storedWidth / 2);\n          const y = centroid[1] + (storedHeight / 2);\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .transition()\n        .duration(500)\n        .style('opacity', (d, ix, c) => {\n          // Only show if the new value is not 0 and labels are set to be displayed\n          return labels.display === false || d.data.count === 0 || c[ix]._current.value === 0 ? 0 : 1;\n        });\n\n      path2.exit().remove();\n\n      path.exit().transition()\n        .duration(500)\n        .style('opacity', 0).remove();\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n\n  return PieChartD3;\n});\n\n// Returns a tween for a transition’s \"d\" attribute, transitioning any selected\n// arcs from their current angle to the specified new angle.\nfunction arcTween(this: any, thisArc: Arc<any, any>) {\n  return function (this: any, d) {\n    const i = interpolate(this._current, d);\n    this._current = i(0);\n    return function (this: any, t) {\n      return thisArc(i(t));\n    };\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramDataSet,\n  IMargin,\n  TipContentFn,\n} from './Histogram';\nimport { pieChartD3 } from './PieChartD3';\n\ninterface ILabels {\n  display: boolean;\n  displayFn: (d: any, ix: number) => string | number;\n}\n\nexport interface IPieDataItem {\n  count: number;\n  groupLabel: string;\n  label: string;\n}\n\nexport interface IPieChartProps {\n  data: {\n    bins: string[],\n    counts: IHistogramDataSet[];\n  };\n  backgroundColor: string;\n  className: string;\n  colorScheme: string[];\n  donutWidth: number;\n  height: number;\n  labels: ILabels;\n  margin: IMargin;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * PieChart component\n */\nclass PieChart extends React.Component<IPieChartProps, IChartState> {\n\n  private chart: IChartAdaptor<IPieChartProps>;\n  private ref: HTMLDivElement | null = null;\n\n  public static defaultProps: Partial<IPieChartProps> = {\n    backgroundColor: '#ddd',\n    donutWidth: 0,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(props: IPieChartProps) {\n    super(props);\n    this.chart = pieChartD3();\n\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (el) {\n      const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n      this.setState({\n        parentWidth: width,\n      }, () => this.chart.create(el, this.getChartState()));\n    }\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (el) {\n      this.chart.create(el, this.getChartState());\n      if (this.props.width === '100%') {\n        window.addEventListener('resize', (e) => this.handleResize());\n        this.handleResize();\n      }\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (el) {\n      this.chart.update(el, this.getChartState());\n    }\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): IPieChartProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    const el = this.getDOMNode();\n    if (el) {\n      this.chart.destroy(el);\n    }\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"piechart-chart-container\"></div>);\n  }\n}\n\nexport default PieChart;\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport { timeFormat } from 'd3-time-format';\nimport merge from 'deepmerge';\nimport get from 'lodash.get';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridHeight,\n  gridWidth,\n  xAxisHeight,\n  yAxisWidth,\n} from './grid';\nimport {\n  IAxis,\n  IChartAdaptor,\n  IHistogramDataSet,\n  IHistogramProps,\n} from './Histogram';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid,\n} from './utils/defaults';\n\nexport const formatTickTime = (axis: IAxis) => (v: string | number) => {\n  return timeFormat(axis.dateFormat)(new Date(v));\n};\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const histogramD3 = ((): IChartAdaptor<IHistogramProps> => {\n  let svg: Selection<any, any, any, any>;;\n  let tipContainer;\n  let tipContent;\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n  let container: any;\n  let dataSets: any[];\n  let gridX: any;\n  let gridY: any;\n  let yAxisContainer: any;\n  let xAxisContainer: any;\n  let xAxisLabel: any;\n  let yAxisLabel: any;\n\n  // @TODO make this a prop\n  const stacked = false;\n\n  const defaultProps: IHistogramProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0.1,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      counts: [],\n    },\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  let props: IHistogramProps;\n\n  const HistogramD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: Partial<IHistogramProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      container = svg\n        .append('g')\n        .attr('class', 'histogram-container');\n\n      this.update(el, newProps);\n    },\n\n    mergeProps(newProps: Partial<IHistogramProps>) {\n      props = merge<IHistogramProps>(defaultProps, newProps);\n      if (newProps.data) {\n        props.data = newProps.data;\n      }\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n      const scale = {\n        x: 1 - (margin.left / Number(width)),\n        y: 1 - (margin.top / height),\n      };\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top}) scale(${scale.x},${scale.y})`);\n\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData): void {\n      const yDomain: number[] = [];\n      const { domain, margin, height } = props;\n      const allCounts: number[] = data.reduce((prev: number[], next): number[] => {\n        return [...prev, ...next.map((n) => n.value)];\n      }, [0]);\n\n      const thisExtent = extent<any>(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : Number(thisExtent[1]);\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : Number(thisExtent[0]);\n      const yRange = [height - (margin.top * 2) - xAxisHeight(props.axis), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    makeScales() {\n      xAxisContainer = svg.append('g').attr('class', 'x-axis');\n      yAxisContainer = svg.append('g').attr('class', 'y-axis');\n\n      xAxisLabel = svg.append('g');\n      yAxisLabel = svg.append('g');\n    },\n\n    /**\n     * Draw scales\n     */\n    _drawScales() {\n      const { axis, data, margin, height } = props;\n      const valuesCount = this.valuesCount(data.counts);\n      const w = gridWidth(props);\n\n      const dataLabels = data.counts.map((c) => c.label);\n\n      x\n        .domain(data.bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      if (stacked) {\n        innerScaleBand\n          .domain(['main'])\n          .rangeRound([0, x.bandwidth()])\n          .paddingInner(this.barMargin());\n      } else {\n        innerScaleBand\n          .domain(dataLabels)\n          .rangeRound([0, x.bandwidth()])\n          .paddingInner(this.barMargin());\n      }\n      const xAxis = axisBottom<string>(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n      if (axis.x.scale === 'TIME' && axis.x.dateFormat) {\n        xAxis.tickFormat(formatTickTime(axis.x));\n      }\n\n      xAxisContainer\n        .attr('transform', 'translate(' + (yAxisWidth(axis) + axis.y.style['stroke-width']) + ',' +\n          (height - xAxisHeight(props.axis) - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft<number>(y).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n      if (axis.y.scale === 'TIME' && axis.y.dateFormat) {\n        yAxis.tickFormat(formatTickTime(axis.y));\n      }\n      yAxisContainer\n        .attr('transform', 'translate(' + yAxisWidth(axis) + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      bins: string[],\n      groupData: IGroupData,\n    ) {\n      const { axis, height, width, margin, delay, duration, tip } = props;\n      const barWidth = this.barWidth();\n\n      // const borderColors = set.borderColors ? d3.scaleOrdinal(set.borderColors) : null;\n      const colors = scaleOrdinal(props.colorScheme);\n      const gHeight = gridHeight(props);\n\n      const g = container\n        .selectAll('g')\n        .data(groupData);\n\n      const bars = g.enter()\n        .append('g')\n        .merge(g)\n        .attr('transform', (d: any[]) => {\n          let xd = x(d[0].label);\n          if (xd === undefined) {\n            xd = 0;\n          }\n          const xdelta = yAxisWidth(axis)\n            + axis.y.style['stroke-width']\n            + xd;\n          return `translate(${xdelta}, 0)`;\n        })\n        .selectAll('rect')\n        .data((d) => d);\n\n      // Don't ask why but we must reference tipContentFn as props.tipContentFn otherwise\n      // it doesn't update with props changes\n      const onMouseOver = (d: IGroupDataItem, i: number) => {\n        const ix = bins.findIndex((b) => b === d.label);\n        tipContent.html(() => props.tipContentFn(bins, ix, d.value));\n        tip.fx.in(tipContainer);\n      };\n\n      bars\n        .enter()\n        .append('rect')\n        .attr('height', 0)\n        .attr('y', (d: IGroupDataItem, stackIndex: number): number => {\n          const setIndex = bins.findIndex((b) => b === d.label);\n          const thisSetData = groupData[setIndex];\n          // @TODO stack charts\n          // const offset = stackIndex > 0\n          //   ? y(10)\n          //   : 0;\n          const offset = 0;\n          return gHeight - offset;\n        })\n        .attr('class', 'bar')\n        .on('mouseover', onMouseOver)\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .merge(bars)\n        .attr('x', (d) => {\n          return innerScaleBand(d.groupLabel);\n        })\n        .attr('width', (d) => barWidth)\n        .attr('fill', (d, i) => colors(i))\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        .attr('y', (d: IGroupDataItem, stackIndex: number): number => {\n          // const setIndex = bins.findIndex((b) => b === d.label);\n          // const thisSetData = groupData[setIndex];\n          // @TODO stack charts\n          // const offset = stackIndex > 0\n          //   ? 5\n          //   : 0;\n          const offset = 0;\n          return y(d.value + offset);\n        })\n        // Hide bar's bottom border\n        .attr('stroke-dasharray',\n          (d: IGroupDataItem): string => {\n            const currentHeight = gHeight - (y(d.value));\n            return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n          })\n        .attr('height', (d: IGroupDataItem): number => gHeight - (y(d.value)));\n\n      bars.exit().remove();\n      g.exit().remove();\n\n      const xText = xAxisLabel\n        .selectAll('text')\n        .data([axis.x.label]);\n\n      xText.enter().append('text')\n        .attr('class', 'x-axis-label')\n        .merge(xText)\n        .attr('transform',\n          'translate(' + (Number(width) / 2) + ' ,' +\n          ((height - xAxisHeight(props.axis) - (margin.left * 2)) + axis.x.margin) + ')')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n\n      const yText = yAxisLabel\n        .selectAll('text')\n        .data([axis.y.label]);\n\n      yText.enter().append('text')\n        .attr('class', 'y-axis-label')\n        .merge(yText)\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0)\n        .attr('x', 0 - (gHeight / 2 - (margin.top * 2)))\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text((d) => d);\n    },\n\n    makeGrid() {\n      gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: Partial<IHistogramProps>) {\n      if (!newProps.data) {\n        return;\n      }\n      this.mergeProps(newProps);\n      if (!props.data.bins) {\n        return;\n      }\n\n      const { data, visible } = props;\n      dataSets = [] as IGroupData;\n\n      data.counts.forEach((count) => {\n        count.data.forEach((value, i) => {\n          if (!dataSets[i]) {\n            dataSets[i] = [];\n          }\n          dataSets[i].push({\n            groupLabel: count.label,\n            label: data.bins[i],\n            value: visible[data.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n          } as IGroupDataItem);\n        });\n      });\n\n      this._drawScales();\n      drawGrid(x, y, gridX, gridY, props, this.valuesCount(data.counts));\n      this.updateChart(data.bins, dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HistogramD3;\n});\n","import {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport get from 'lodash.get';\n\nimport attrs from './d3/attrs';\nimport { IAxes } from './Histogram';\n\n// Gridlines in y axis function\nexport const makeYGridlines = (y, ticks: number = 5) => {\n  return axisLeft(y)\n    .ticks(ticks);\n};\n\n// Gridlines in x axis function\nexport const makeXGridlines = (x, ticks: number = 5) => {\n  return axisBottom(x)\n    .ticks(ticks);\n};\n\nexport const drawGrid = (x, y, gridX, gridY, props, ticks) => {\n  const { height, width, axis, grid, margin } = props;\n  const axisWidth = axis.y.style['stroke-width'];\n\n  const offset = {\n    x: yAxisWidth(axis) + axisWidth,\n    y: gridHeight(props),\n  };\n\n  if (grid.x.visible) {\n    // Add the X gridlines\n    gridX.attr('transform', `translate(${offset.x}, ${offset.y})`)\n      .transition()\n      .call(makeXGridlines(x, get(grid, 'x.ticks', ticks))\n        .tickSize(-height + xAxisHeight(props.axis) + (margin.top * 2))\n        .tickFormat(() => ''));\n\n    attrs(gridX.selectAll('.tick line'), grid.x.style);\n    attrs(gridX.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n  }\n\n  if (grid.y.visible) {\n    // add the Y gridlines\n    gridY.attr('transform', 'translate(' + (yAxisWidth(axis) + axisWidth) + ', 0)')\n      .transition()\n      .call(makeYGridlines(y, get(grid, 'y.ticks', ticks))\n        .tickSize(-width + (margin.left * 2) + yAxisWidth(axis))\n        .tickFormat(() => ''),\n      );\n\n    attrs(gridY.selectAll('.tick line'), grid.y.style);\n\n    // Hide the first horizontal grid line to show axis\n    gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n      .attr('display', 'none');\n    attrs(gridY.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n  }\n};\n\nexport const gridHeight = (props): number => {\n  const { height, margin, axis } = props;\n  return height - (margin.top * 2) - xAxisHeight(axis);\n};\n\nexport const yAxisWidth = (axis: IAxes) => {\n  return axis.y.label === ''\n    ? axis.y.width\n    : axis.y.width + 30;\n};\n\nexport const xAxisHeight = (axis: IAxes) => {\n  return axis.x.label === ''\n    ? axis.x.height\n    : axis.x.height + 30 + get(axis, 'x.margin', 0);\n};\n\nexport const gridWidth = (props): number => {\n  const { axis, width, margin } = props;\n  return width - (margin.left * 2) - yAxisWidth(axis);\n};\n","import { IHistogramData } from '../../src';\nimport filterRange from '../../src/colors/filterRange';\nimport { IGrid } from '../../src/Histogram';\nimport { lineStyle } from '../../src/utils/defaults';\n\nexport const grid: IGrid = {\n  x: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n","import {\n  scaleLinear,\n  ScaleLinear,\n  scaleLog,\n  ScaleLogarithmic,\n  scaleTime,\n  ScaleTime,\n} from 'd3-scale';\n\nimport { IAxes } from '../';\n\nexport type AnyScale = ScaleLinear<number, number>\n  | ScaleTime<any, any>\n  | ScaleLogarithmic<any, any>;\n\nexport const buildScales = (axis: IAxes) => {\n  let x: AnyScale;\n  let y: AnyScale;\n  switch (axis.x.scale) {\n    case 'LOG':\n      x = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      x = scaleTime();\n      break;\n    default:\n      x = scaleLinear();\n      break;\n  }\n\n  switch (axis.y.scale) {\n    case 'LOG':\n      y = scaleLog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'TIME':\n      y = scaleTime();\n      break;\n    default:\n      y = scaleLinear();\n      break;\n  }\n  return [x, y];\n};\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport { easeCubic } from 'd3-ease';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport {\n  area,\n  curveCatmullRom,\n  CurveFactory,\n  CurveFactoryLineOnly,\n  line,\n} from 'd3-shape';\nimport {\n  timeFormat,\n  timeParse,\n} from 'd3-time-format';\nimport merge from 'deepmerge';\n\nimport attrs from './d3/attrs';\nimport {\n  drawGrid,\n  gridWidth,\n  xAxisHeight as getXAxisHeight,\n  yAxisWidth as getYAxisWidth,\n} from './grid';\nimport { IChartAdaptor } from './Histogram';\nimport { formatTickTime } from './HistogramD3';\nimport {\n  ILineChartDataSet,\n  ILineChartProps,\n  ILineProps,\n  ISVGPoint,\n} from './LineChart';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n  lineStyle,\n} from './utils/defaults';\nimport {\n  AnyScale,\n  buildScales,\n} from './utils/scales';\n\nconst ZERO_SUBSITUTE: number = 1e-6;\n\nexport const lineChartD3 = ((): IChartAdaptor<ILineChartProps> => {\n  let tipContainer;\n  let xParseTime;\n  let xFormatTime;\n  let tipContent;\n\n  const lineProps: ILineProps = {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: '#eee',\n      show: false,\n    },\n    show: true,\n    stroke: '#005870',\n    strokeDashArray: '5 5',\n    strokeDashOffset: 0,\n  };\n\n  const pointProps: ISVGPoint = {\n    ...lineStyle,\n    fill: 'rgba(255, 255, 255, 0)',\n    radius: 4,\n    show: true,\n    stroke: '#005870',\n  };\n\n  const defaultProps: ILineChartProps = {\n    axis: defaultAxis,\n    className: 'line-chart-d3',\n    data: [],\n    fx: easeCubic,\n    grid: defaultGrid,\n    height: 250,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (info, i, d) => {\n      switch (typeof info[i].x) {\n        case 'object': // date\n          return xFormatTime(info[i].x) + ', ' + info[i].y;\n        default:\n          return Number(info[i].x).toFixed(3) + ', ' + info[i].y;\n      }\n    },\n    visible: {},\n    width: 200,\n  };\n\n  const datumProps = {\n    line: lineProps,\n    point: pointProps,\n  };\n\n  const curve = (\n    curveType: CurveFactory | CurveFactoryLineOnly,\n    yAxisWidth: number,\n    x,\n    y,\n  ) => line()\n    .curve(curveType)\n    .x((d: any) => x(d.x) + yAxisWidth)\n    .y((d: any) => y(d.y));\n\n  let props: ILineChartProps;\n  let svg: Selection<any, any, any, any>;\n  let container: Selection<SVGElement, any, any, any>;\n  let lineContainer: Selection<any, any, any, any>;\n  let gridX: Selection<any, any, any, any>;\n  let gridY: Selection<any, any, any, any>;\n  let xScale: any; // AnyScale;\n  let yScale: any; // AnyScale;\n  let xAxisContainer: Selection<any, any, any, any>;\n  let yAxisContainer: Selection<any, any, any, any>;\n\n  const LineChartD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: Partial<ILineChartProps> = {}) {\n      props = merge(defaultProps, newProps);\n      this._makeSvg(el);\n      this.makeScales();\n      [xScale, yScale] = buildScales(props.axis);\n      this.makeGrid();\n      container = svg\n        .append<SVGElement>('g')\n        .attr('class', 'linechart-container');\n\n      lineContainer = container\n        .append('g')\n        .attr('class', 'line-container');\n      this._createLines(props.data);\n      this.update(el, props);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n      const scale = {\n        x: 1 - (margin.left / Number(width)),\n        y: 1 - (margin.top / Number(height)),\n      };\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top}) scale(${scale.x},${scale.y})`);\n\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Iterate over the dataset drawing points for sets marked as\n     * requiring points.\n     */\n    _drawDataPointSet(data: ILineChartProps['data']) {\n      const { axis, tip } = props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      const pointContainer = container.selectAll<SVGElement, {}>('g').data(data);\n\n      // Don't ask why but we must reference tipContentFn as props.tipContentFn otherwise\n      // it doesn't update with props changes\n      const onMouseOver = (d: ILineChartDataSet<any>, i: number) => {\n        tipContent.html(() => props.tipContentFn([d as any], 0, 0, ''));\n        tip.fx.in(tipContainer);\n      };\n      const points = pointContainer.enter()\n        .append<SVGElement>('g')\n        .attr('class', (d, i: number) => 'point-container' + i)\n        .merge(pointContainer)\n        .selectAll<SVGElement, {}>('circle')\n        .data((d) => {\n          return d.data.map((dx) => ({\n            ...dx,\n            point: d.point,\n          }));\n        });\n\n      // UPDATE - Update old elements as needed.\n      points.attr('class', 'update');\n\n      // ENTER + UPDATE\n      // After merging the entered elements with the update selection,\n      // apply operations to both.\n      points.enter().append<SVGElement>('circle')\n        .attr('class', 'enter')\n        .on('mouseover', (d, i) => {\n          tipContent.html(() => props.tipContentFn([d as any], 0, 0, ''));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .merge(points)\n        .attr('class', 'point')\n        .attr('cy', (d) => yScale(d.y))\n        .attr('r', (d, i: number) => 0)\n        .attr('fill', (d) => d.point.fill)\n        .attr('stroke', (d) => d.point.stroke)\n        .attr('cx', (d) => {\n          return xScale(d.x) + yAxisWidth;\n        })\n        .transition()\n        .duration(400)\n        .attr('r', (d) => d.point.show ? d.point.radius : 0)\n        .delay(650);\n\n      // EXIT - Remove old elements as needed.\n      pointContainer.exit().remove();\n      points.exit().remove();\n    },\n\n    makeScales() {\n      xAxisContainer = svg.append('g').attr('class', 'x-axis');\n      yAxisContainer = svg.append('g').attr('class', 'y-axis');\n    },\n\n    /**\n     * Draw the chart scales\n     */\n    _drawScales(data: ILineChartProps['data']) {\n      // @TODO Grid not rendering down to x axis\n      const { axis, height } = props;\n      const w = gridWidth(props);\n      let yDomain;\n      let xDomain;\n      const ys: any[] = [];\n      const xs: any[] = [];\n      const yAxis = axisLeft<number | string>(yScale);\n      if (axis.y.tickValues) {\n        yAxis.tickValues(axis.y.tickValues);\n      } else {\n        yAxis.ticks(axis.y.ticks);\n      }\n      if (axis.y.numberFormat) {\n        yAxis.tickFormat(formatTickTime(axis.y));\n      }\n\n      const xAxis = axisBottom<number | string>(xScale);\n      if (axis.x.tickValues) {\n        xAxis.tickValues(axis.x.tickValues);\n      }\n      if (axis.x.scale === 'TIME' && axis.x.dateFormat) {\n        xAxis.tickFormat(formatTickTime(axis.x));\n      }\n      const xAxisHeight = getXAxisHeight(axis);\n      const yAxisWidth = getYAxisWidth(axis);\n\n      data.forEach((datum) => {\n        datum.data.forEach((d) => {\n          let parsedY = d.y;\n          let parsedX = d.x;\n          if (axis.y.scale === 'LOG' && d.y === 0) {\n            parsedY = ZERO_SUBSITUTE;\n          }\n          if (axis.x.scale === 'LOG' && d.x === 0) {\n            parsedX = ZERO_SUBSITUTE;\n          }\n          ys.push((parsedY));\n          xs.push((parsedX));\n        });\n      });\n      yDomain = extent(ys);\n      xDomain = extent(xs);\n      // domain mustn't be 0 as log(0) gives Infinity. 1 lower domain gives better looking graphs\n      if (axis.y.scale === 'LOG' && yDomain[0] === ZERO_SUBSITUTE) {\n        yDomain[0] = 1;\n      }\n      if (axis.x.scale === 'LOG' && xDomain[0] === ZERO_SUBSITUTE) {\n        xDomain[0] = 1;\n      }\n      xScale\n        .domain(xDomain)\n        .rangeRound([0, w]);\n\n      yScale.domain(yDomain)\n        .range([Number(height) - xAxisHeight, 0]);\n\n      yAxisContainer\n        .attr('transform', `translate(${yAxisWidth}, 0)`)\n        .transition()\n        .call(yAxis);\n\n      xAxisContainer\n        .attr('transform', `translate(${yAxisWidth},${(Number(height) - xAxisHeight)})`)\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    _createLines(data: Array<ILineChartDataSet<any>>) {\n      data.forEach((d, i) => {\n        lineContainer.append('path')\n          .attr('class', `line-${i}`);\n      });\n\n      // change the line\n      data\n        .forEach((d, i) => {\n          lineContainer.append('path')\n            .attr('class', `fill-${i}`);\n\n        });\n\n    },\n\n    /**\n     * Iterate over data and update lines\n     */\n    _drawLines(data: Array<ILineChartDataSet<any>>) {\n      const { axis } = props;\n      const yAxisWidth = getYAxisWidth(axis);\n\n      // change the line\n      data.forEach((d, i) => {\n        lineContainer.select(`.line-${i}`)\n          .attr('fill', 'none')\n          .attr('stroke-dashoffset', d.line.strokeDashOffset)\n          .attr('stroke-dasharray', d.line.strokeDashOffset)\n          .attr('stroke', d.line.stroke)\n          .transition()\n          .duration(500)\n          .attr('d', curve(d.line.curveType, yAxisWidth, xScale, yScale)(d.data as any) as any)\n          .delay(50);\n      });\n    },\n\n    /**\n     * Iterates ove data and updates area fills\n     */\n    drawAreas(data: Array<ILineChartDataSet<any>>) {\n      const { axis, height } = props;\n      const yAxisWidth = getYAxisWidth(axis);\n      const xAxisHeight = getXAxisHeight(axis);\n      const thisArea = (curveType) => area()\n        .curve(curveType)\n        .x((d: any) => xScale(d.x) + yAxisWidth)\n        .y0((d) => Number(height) - xAxisHeight)\n        .y1((d: any) => yScale(d.y));\n\n      // change the line\n      data\n        .forEach((d, i) => {\n          lineContainer.select(`.fill-${i}`)\n            .attr('fill', d.line.fill.fill)\n            .style('opacity', d.line.show && d.line.fill.show ? 1 : 0)\n            .transition()\n            .duration(500)\n            .delay(50)\n            .attr('d', thisArea(d.line.curveType)(d.data) as any)\n\n            ;\n        });\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(data: ILineChartProps['data']): number {\n      return data.reduce((a: number, b): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    makeGrid() {\n      gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: Partial<ILineChartProps>) {\n      if (!newProps.data) {\n        return;\n      }\n      props = merge(defaultProps, newProps);\n      [xScale, yScale] = buildScales(props.axis);\n      let data = props.data;\n\n      xParseTime = timeParse(props.axis.x.dateFormat);\n      xFormatTime = timeFormat(props.axis.x.dateFormat);\n      data = data.map((datum) => {\n        if (props.axis.x.scale === 'TIME') {\n          datum.data = datum.data.map((d) => {\n            const newd = {\n              ...d,\n              x: typeof d.x === 'object'\n                ? d.x\n                : xParseTime(d.x.toString()),\n            };\n            return newd;\n          });\n        }\n        // Assign in default line & point styles\n        return Object.assign({}, datumProps, datum);\n      });\n      this._drawScales(data);\n      this._drawLines(data);\n      this.drawAreas(data);\n      drawGrid(xScale, yScale, gridX, gridY, props, this.valuesCount(data));\n      this._drawDataPointSet(data);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return LineChartD3;\n});\n","import {\n  CurveFactory,\n  CurveFactoryLineOnly,\n} from 'd3';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IGrid,\n  IMargin,\n  ISVGLineStyle,\n  TipContentFn,\n} from './Histogram';\nimport { lineChartD3 } from './lineChartD3';\n\ninterface IState {\n  parentWidth?: number;\n}\n\nexport type IChartPointValue = number | string | Date | object;\nexport interface IChartPoint<X extends IChartPointValue = Date | number, Y extends IChartPointValue = number> {\n  x: X;\n  y: Y;\n}\nexport interface ILineProps {\n  show: boolean;\n  fill: {\n    show: boolean;\n    fill: string;\n  };\n  curveType: CurveFactory | CurveFactoryLineOnly;\n  stroke: string;\n  strokeDashOffset: number;\n  strokeDashArray: string;\n}\n\nexport interface ILineChartDataSet<T> {\n  label: string;\n  point: {\n    radius: number;\n    stroke: string;\n    fill: string;\n    show: boolean;\n  };\n  line: ILineProps;\n  data: T[];\n}\n\nexport interface ISVGPoint extends ISVGLineStyle {\n  radius?: 4;\n  show: boolean;\n}\n\nexport interface ILineChartProps<T extends IChartPoint<IChartPointValue, IChartPointValue> = IChartPoint> {\n  axis: IAxes;\n  className: string;\n  data: Array<ILineChartDataSet<T>>;\n  fx: (n: number) => number;\n  grid: IGrid;\n  height: number | string;\n  margin: IMargin;\n  tip: any;\n  tipContainer?: string;\n  tipContentFn: TipContentFn<{ x: string | number, y: string | number }>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\nclass LineChart extends React.Component<ILineChartProps, IState> {\n\n  private chart: IChartAdaptor<ILineChartProps>;\n  private ref: HTMLDivElement | null = null;\n\n  constructor(props: ILineChartProps) {\n    super(props);\n    this.chart = lineChartD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(el, this.getChartState()));\n\n  }\n\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state. If a histogram has been assigned\n   * to the props, then render this data. Otherwise generate\n   * a random normal dist\n   */\n  public getChartState(): ILineChartProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.destroy(el);\n  }\n\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  public render(): JSX.Element {\n    return <div ref={(ref) => this.ref = ref} className=\"chart-container\"></div>;\n  }\n}\n\nexport default LineChart;\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport merge from 'deepmerge';\nimport { number } from 'prop-types';\n\nimport colorScheme from './colors';\nimport { IChartPoint } from './LineChart';\nimport { IScatterPlotProps } from './ScatterPlot';\n\nexport const scatterPlotD3 = (() => {\n  let svg: Selection<any, any, any, any>;\n  const yScale = scaleLinear();\n  const xScale = scaleLinear();\n  const domainByTrait = {};\n  let xAxis;\n  let color;\n  let yAxis;\n\n  const defaultProps: IScatterPlotProps = {\n    choices: [],\n    className: 'scatter-plot-d3',\n    colorScheme,\n    data: {\n      keys: [],\n      values: []\n    },\n    delay: 0,\n    distModels: [],\n    duration: 400,\n    height: 300,\n    legendWidth: 100,\n    padding: 20,\n    radius: 4,\n    split: '',\n    width: '100%',\n  };\n\n  let props: IScatterPlotProps;\n\n  const GenerateChart = {\n\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: Partial<IScatterPlotProps> = defaultProps) {\n      props = merge(defaultProps, newProps);\n      this.update(el, newProps);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element, data: IScatterPlotProps['data']) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { width, className, height, legendWidth, padding } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', Number(width) + padding + legendWidth)\n        .attr('height', height + padding)\n        .append('g')\n        .attr('transform', 'translate(' + padding + ',' + padding / 2 + ')');\n\n      color = scaleOrdinal(props.colorScheme);\n    },\n\n    /**\n     * Draw the chart scales\n     */\n    _drawScales(data: IScatterPlotProps['data']['keys']) {\n      const { height, padding, width } = props;\n      const xSize = Number(width) / data.length;\n      const ySize = height / data.length;\n      xScale.range([padding / 2, xSize - padding / 2]);\n      yScale.range([height - padding / 2, padding / 2]);\n\n      svg.selectAll('.x.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'x axis')\n        .attr('transform', (d, i) =>\n          'translate(' + (data.length - i - 1) * xSize + ',0)')\n        .each(function (this: any, d: any) {\n          xScale.domain(domainByTrait[d]);\n          select(this).call(xAxis);\n        });\n\n      svg.selectAll('.y.axis')\n        .data(data)\n        .enter().append('g')\n        .attr('class', 'y axis')\n        .attr('transform', (d: any, i: number) => 'translate(0,' + i * ySize + ')')\n        .each(function (this: any, d: any) {\n          yScale.domain(domainByTrait[d]);\n          select(this).call(yAxis);\n        });\n    },\n\n    /**\n     * Make a legend showing spit choice options\n     */\n    _drawLegend() {\n      const { choices, padding, width, split } = props;\n      if (choices === undefined) {\n        return;\n      }\n      const legend = svg.append('g')\n        .attr('transform', 'translate(' + (Number(width) + padding / 2) +\n          ', ' + (padding + 50) + ')');\n\n      legend.append('g').append('text')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('dy', '.71em')\n        .text((d) => split);\n      legend.selectAll('.legendItem')\n        .data(choices)\n        .enter().append('g')\n        .each(function (this: any, c, i: number) {\n          const cell = select(this);\n          cell.append('rect')\n            .attr('class', 'legendItem')\n            .attr('x', 0)\n            .attr('y', 20 + (i * 15))\n            .attr('fill', color(i))\n            .attr('height', 10)\n            .attr('width', 10);\n\n          cell.append('text')\n            .attr('x', 15)\n            .attr('y', 20 + (i * 15))\n            .attr('dy', '.71em')\n            .text((d) => c);\n        });\n\n      legend.exit().remove();\n    },\n\n    /**\n     * Draw scatter points\n     */\n    _drawPoints(traits, width: number, height: number) {\n      const { data, delay, duration,\n        choices, split, padding, radius } = props;\n      const n = traits.length;\n      const cell = svg.selectAll('.cell')\n        .data(cross(traits, traits))\n        .enter().append('g')\n        .attr('class', 'cell')\n        .attr('transform', (d) => 'translate(' + (n - d.i - 1) * width +\n          ',' + d.j * width + ')')\n        .each(plot);\n\n      // Titles for the diagonal.\n      cell.filter((d) => d.i === d.j).append('text')\n        .attr('x', padding)\n        .attr('y', padding)\n        .attr('dy', '.71em')\n        .text((d) => d.x);\n\n      /**\n       * Plot a point\n       */\n      function plot(this: any, p: IChartPoint) {\n        const plotCell = select(this);\n        let circle: Selection<SVGCircleElement, any, any, any>;\n        xScale.domain(domainByTrait[Number(p.x)]);\n        yScale.domain(domainByTrait[Number(p.y)]);\n\n        plotCell.append<SVGRectElement>('rect')\n          .attr('class', 'frame')\n          .attr('x', padding / 2)\n          .attr('y', padding / 2)\n          .attr('width', width - padding)\n          .attr('height', height - padding);\n\n        circle = plotCell.selectAll('circle')\n          .data(data.values)\n          .enter().append('circle')\n          .attr('r', (d) => radius)\n          .attr('cx', (d) => xScale(d[Number(p.x)]))\n          .attr('cy', (d) => yScale(d[Number(p.y)]))\n          .style('fill', (d) => {\n            if (d[split]) {\n              const i = choices.findIndex((c) => c === d[split]);\n              return color(i);\n            }\n            return '#eeaabb';\n          });\n\n        circle\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('r', (d) => radius);\n      }\n\n      /**\n       * Create cross array\n       * // @TODO looks like d3 has its own cross function now...\n       */\n      function cross(a, b) {\n        const c: Array<{ x: number; i: number; y: number; j: number; }> = [];\n        const nx = a.length;\n        const m = b.length;\n        let i: number;\n        let j: number;\n        for (i = -1; ++i < nx;) {\n          for (j = -1; ++j < m;) {\n            c.push({ x: a[i], i, y: b[j], j });\n          }\n        }\n        return c;\n      }\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: Partial<IScatterPlotProps>) {\n      props = merge(props, newProps);\n      if (!props.data) {\n        return;\n      }\n      const { data, distModels, height, width } = props;\n      this._makeSvg(el, props.data);\n      this._drawLegend();\n      const traits = data.keys.filter((k) => distModels.indexOf(k) !== -1);\n      const xSize = Number(width) / traits.length;\n      const ySize = height / traits.length;\n      const n = traits.length;\n\n      traits.forEach((trait) => {\n        domainByTrait[trait] = extent<any>(data.values, (d) => d[trait]);\n      });\n      xAxis = axisBottom(xScale)\n        .ticks(6)\n        .tickSize(xSize * n);\n      yAxis = axisLeft(yScale)\n        .ticks(6)\n        .tickSize(-ySize * n);\n\n      this._drawScales(traits);\n      this._drawPoints(traits, xSize, ySize);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return GenerateChart;\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IChartAdaptor } from './Histogram';\nimport { scatterPlotD3 } from './ScatterPlotD3';\n\ninterface IChartState {\n  choices: string[];\n  data: {\n    keys: any[],\n    values: any[],\n  };\n  height: number;\n  distModels: string[];\n  split: string;\n  parentWidth: number;\n  width: number | string;\n}\n\nexport interface IScatterPlotProps {\n  choices: string[];\n  className: string;\n  data: {\n    keys: string[],\n    values: any[];\n  };\n  delay: number;\n  distModels: string[];\n  duration: number;\n  height: number;\n  legendWidth: number;\n  colorScheme: string[];\n  padding: number;\n  radius: number;\n  split: string;\n  width: string | number;\n}\nclass ScatterPlot extends React.Component<IScatterPlotProps, IChartState> {\n\n  private chart: IChartAdaptor<IScatterPlotProps>;\n  private ref: HTMLDivElement | null = null;\n\n  public static defaultProps = {\n    height: 400,\n    width: '100%',\n  };\n\n  constructor(props: IScatterPlotProps) {\n    super(props);\n    this.chart = scatterPlotD3();\n    this.state = {\n      choices: [],\n      data: {\n        keys: [],\n        values: [],\n      },\n      distModels: [],\n      height: this.props.height,\n      parentWidth: 400,\n      split: '',\n      width: this.props.width,\n    };\n  }\n\n  private handleResize() {\n    const { legendWidth, padding } = this.props;\n    if (!this.ref) {\n      return;\n    }\n    const chartWidth = Math.max(200, this.ref.offsetWidth - padding - legendWidth);\n    const chartHeight = Math.max(200, window.innerHeight - padding -\n      this.ref.getBoundingClientRect().top);\n    const width = Math.min(chartHeight, chartWidth);\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(el, this.getChartState()));\n  }\n\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  private getChartState(): IChartState {\n    let { width } = this.props;\n    const { data, choices, split, distModels, height } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      choices,\n      data,\n      distModels,\n      height,\n      parentWidth: this.state.parentWidth,\n      split,\n      width,\n    };\n  }\n\n  public componentWillReceiveProps(props: IScatterPlotProps) {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  public componentWillUnmount() {\n    const { width } = this.props;\n    if (typeof width === 'string' && width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.destroy(el);\n  }\n\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  public render() {\n    return <div ref={(ref) => this.ref = ref} className=\"scatterplot-chart-container\"></div>;\n  }\n}\n\nexport default ScatterPlot;\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport merge from 'deepmerge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n} from './Histogram';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n} from './utils/defaults';\n\nexport const horizontalHistogramD3 = ((): IChartAdaptor<IHistogramProps> => {\n  let svg: Selection<any, any, any, any>;;\n  let tipContainer;\n  let tipContent;\n  const x = scaleLinear();\n  const y = scaleBand();\n  let props: IHistogramProps;\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisLeft(y)\n      .ticks(ticks);\n  }\n\n  const defaultProps: IHistogramProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0.1,\n      margin: 10,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: {\n      bins: [],\n      colorScheme: [],\n      counts: [],\n    },\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: defaultGrid,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins: string[], i: number, d: number): string =>\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const HorizontalHistogramD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: Partial<IHistogramProps> = {}) {\n      props = merge(defaultProps, newProps);\n      this.update(el, newProps);\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Draw scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data: IHistogramData) {\n      const { margin, width, height, axis } = props;\n      const valuesCount = this.valuesCount(data.counts);\n\n      svg.selectAll('.y-axis').remove();\n      svg.selectAll('.x-axis').remove();\n\n      const h = this.gridHeight();\n      let xDomain;\n      let xAxis;\n      let yAxis;\n      let xRange;\n      const allCounts = data.counts.reduce((a: number[], b: IHistogramDataSet): number[] => {\n        return [...a, ...b.data];\n      }, []);\n\n      y.domain(data.bins)\n        .rangeRound([0, h]);\n\n      xAxis = axisBottom(x).ticks(axis.x.ticks);\n      yAxis = axisLeft(y).ticks(axis.y.ticks);\n\n      if (h / valuesCount < 10) {\n        // Show one in 10 x axis labels\n        xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n      }\n\n      xDomain = extent(allCounts, (d) => d);\n      xDomain[0] = 0;\n      xRange = [0, Number(width) - (margin.top * 2) - axis.y.width];\n      x.range(xRange)\n        .domain(xDomain);\n\n      svg.append('g').attr('class', 'y-axis')\n        .attr('transform', 'translate(' + axis.y.width + ', 0)')\n        .call(yAxis);\n\n      svg.append('g').attr('class', 'x-axis')\n        .attr('transform', 'translate(' + axis.y.width + ',' +\n          (height - axis.x.height - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Draw the bars\n     * @param {Object} info Bar data etc\n     */\n    _drawBars(info: IHistogramData) {\n      const valuesCount = this.valuesCount(info.counts);\n      info.counts.forEach((set: IHistogramDataSet, setIndex: number) => {\n        this.drawDataSet(info.bins, set, setIndex, info.counts.length);\n      });\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     */\n    gridWidth(): number {\n      const { axis, width, margin } = props;\n      return Number(width) - (margin.left * 2) - axis.y.width;\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     */\n    gridHeight(): number {\n      const { height, margin, axis } = props;\n      return height - (margin.top * 2) - axis.x.height;\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     * @return {Number} Margin\n     */\n    groupedMargin(): number {\n      const { data } = props;\n      return ((data.counts.length - 1) * 3);\n    },\n\n    /**\n     * Calculate the bar height\n     * @return {number} bar height\n     */\n    barHeight() {\n      const { axis, width, margin, data, bar, stroke } = props;\n      const h = this.gridHeight();\n      const valuesCount = this.valuesCount(data.counts);\n      const setCount = data.counts.length;\n      let barHeight = (h / valuesCount) - (bar.margin * 2) - this.groupedMargin();\n\n      // Small bars - reduce margin and re-calcualate bar width\n      if (barHeight < 5) {\n        bar.margin = 1;\n        barHeight = Math.max(1, (h - (valuesCount + 1) * bar.margin) /\n          valuesCount);\n      }\n\n      // show data sets next to each other...\n      return barHeight / setCount;\n    },\n\n    /**\n     * Draw a single data set into the chart\n     * @param {Array} bins Data set labels\n     * @param {Object} set HistogramDataSet\n     * @param {number} setIndex Data set index\n     * @param {number} setCount Total number of data sets\n     */\n    drawDataSet(\n      bins: string[], set: IHistogramDataSet,\n      setIndex: number, setCount: number,\n    ) {\n      const { height, width, margin, bar, delay, duration,\n        axis, stroke, tip, tipContentFn } = props;\n      let barItem;\n      const barHeight = this.barHeight();\n      const colors = scaleOrdinal(set.colors || props.colorScheme);\n      const borderColors = set.borderColors ? scaleOrdinal(set.borderColors) : null;\n\n      const selector = '.bar-' + setIndex;\n      const multiLineOffset = (index) => setCount === 1\n        ? 0\n        : ((index + setIndex) * (barHeight + this.groupedMargin()));\n\n      svg.selectAll(selector).remove();\n\n      // Set up bar initial props\n      barItem = svg.selectAll(selector)\n        .data(set.data)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar ' + selector)\n        .attr('y', (d, index, all) => {\n          return bar.margin\n            + (barHeight + (bar.margin * 2)) * (index)\n            + multiLineOffset(index);\n        })\n        .attr('height', (d) => barHeight)\n        .attr('fill', (d, i) => colors(String(i)))\n        .on('mouseover', (d: number, i: number) => {\n          tipContent.html(() => tipContentFn(bins, i, d));\n          tip.fx.in(tipContainer);\n        })\n        .on('mousemove', () => tip.fx.move(tipContainer))\n        .on('mouseout', () => tip.fx.out(tipContainer))\n        .attr('x', (d: number): number => axis.y.width + axis.y.style['stroke-width'])\n        .attr('width', 0);\n\n      barItem.attr('stroke', (d, i) => {\n        if (borderColors) {\n          return borderColors(i);\n        }\n        return typeof stroke.color === 'function'\n          ? stroke.color(d, i, (j: number) => colors[j])\n          : stroke.color;\n      })\n        .attr('shape-rendering', 'crispEdges')\n        .attr('stroke-width', stroke.width)\n        .attr('stroke-linecap', stroke.linecap);\n\n      barItem.attr('stroke-dasharray', stroke.dasharray);\n\n      // Animate in bar\n      barItem\n        .transition()\n        .duration(duration)\n        .delay(delay)\n        // Hide bar's left border\n        .attr('stroke-dasharray',\n          (d: number): string => {\n            const currentWidth = x(d);\n            return `${currentWidth + barHeight + currentWidth} ${barHeight}`;\n          })\n        .attr('width',\n          (d: number): number => x(d));\n\n      barItem.exit().remove();\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin } = props;\n      const ticks = this.valuesCount(data.counts);\n      const axisWidth = axis.y.style['stroke-width'];\n      const offset = {\n        x: axis.y.width + this.groupedMargin() / 2,\n        y: 0,\n      };\n      let g;\n      let gy;\n\n      // Horizontal lines\n      if (grid.x.visible) {\n        // Add the X gridlines\n        g = svg.append('g')\n          .attr('class', 'grid gridX')\n          .attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        g.call(make_x_gridlines(grid.x.ticks || ticks)\n          .tickSize(-width + (margin.left * 2) + axis.y.width)\n          .tickFormat(() => ''));\n\n        attrs(g.selectAll('.tick line'), grid.x.style);\n        attrs(g.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n      }\n\n      // Vertical lines.....\n      if (grid.y.visible) {\n        // add the Y gridlines\n        gy = svg.append('g')\n          .attr('class', 'grid gridY')\n          .attr('transform', 'translate(' + (axis.y.width + axisWidth) + ', '\n            + (height - axis.x.height - (margin.top * 2)) + ')')\n          .call(make_y_gridlines(grid.y.ticks || ticks)\n            .tickSize(-height + (margin.left * 2) + axis.x.height) // Line Length\n            .tickFormat(() => ''),\n          );\n        attrs(gy.selectAll('.tick line'), grid.y.style);\n\n        attrs(gy.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: Partial<IHistogramProps>) {\n      if (!props.data) {\n        return;\n      }\n      props = merge(defaultProps, newProps);\n      this._makeSvg(el);\n      if (!props.data.bins) {\n        return;\n      }\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this._drawBars(props.data);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return HorizontalHistogramD3;\n});\n","import { rgb } from 'd3-color';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IChartAdaptor,\n  IChartState,\n  IHistogramProps,\n} from './Histogram';\nimport { horizontalHistogramD3 } from './HorizontalHistogramD3';\n\n/**\n * Horizontal Histogram component\n */\nclass HorizontalHistogram extends React.Component<IHistogramProps, IChartState> {\n\n  private histogram: IChartAdaptor<IHistogramProps>;\n  private ref: HTMLDivElement | null = null;\n\n  public static defaultProps = {\n    axis: {},\n    bar: {\n      margin: 2,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: (d, i, colors) => rgb(colors(i)).darker(1),\n      width: 1,\n    },\n    tipContentFn: (bins: string[], i, d) =>\n      bins[i] + '<br />' + d.toFixed(2),\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(props: IHistogramProps) {\n    super(props);\n    this.histogram = horizontalHistogramD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.histogram.create(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.histogram.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.histogram.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): IHistogramProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Props recieved, update the chart\n   */\n  public componentWillReceiveProps(props: IHistogramProps) {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.histogram.update(el, this.getChartState());\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.histogram.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default HorizontalHistogram;\n","export {\n  default as Histogram,\n  IAxes,\n  IHistogramBar,\n  IHistogramData,\n  IHistogramDataSet,\n  IHistogramProps,\n  IStroke,\n} from './Histogram';\n\nexport {\n  default as LineChart,\n  IChartPoint,\n  ILineChartDataSet,\n  ILineChartProps,\n} from './LineChart';\n\nexport { default as Legend } from './Legend';\nexport { default as JoyPlot } from './JoyPlot';\n// import Map from './Map';\nexport { default as PieChart } from './PieChart';\nexport { default as ScatterPlot } from './ScatterPlot';\nexport { default as HorizontalHistogram } from './HorizontalHistogram';\nexport { default as filterRange } from './colors/filterRange';\n"],"sourceRoot":""}