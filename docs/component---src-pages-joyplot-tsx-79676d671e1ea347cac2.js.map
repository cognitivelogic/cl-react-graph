{"version":3,"sources":["webpack:///./src/pages/joyplot.tsx","webpack:///../src/utils/defaults.ts","webpack:///../src/colors/index.js","webpack:///../src/d3/attrs.ts","webpack:///../src/tip.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///../src/colors/filterRange.ts","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/JoyplotD3.ts","webpack:///../src/JoyPlot.tsx","webpack:///./src/data.ts"],"names":["data3","Object","assign","data2","counts","data","label","title","JoyPlotExample","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","description","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","variant","container","spacing","item","xs","_src_JoyPlot__WEBPACK_IMPORTED_MODULE_3__","colorScheme","width","height","lineStyle","fill","opacity","shape-rendering","stroke","stroke-opacity","stroke-width","visible","axis","curveCatmullRom","x","dateFormat","margin","numberFormat","scale","style","text","dy","transform","y","tickSize","ticks","grid","__webpack_exports__","selection","keys","forEach","k","attr","__webpack_require__","d","makeTip","d3_selection__WEBPACK_IMPORTED_MODULE_0__","fx","in","event","pageX","pageY","transition","duration","move","out","selector","tipContainer","remove","select","append","tipContent","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","colors","filter","value","c","Color","hsl","array","length","luminosity","e","v","index","self","indexOf","sort","Math","random","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","join","defaultProps","arrayOf","Header","siteTitle","react_default","index_es","position","color","gatsby_browser_entry","to","Layout","Fragment","header","flexGrow","padding","paddingTop","Date","getFullYear","href","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","joyPlotD3","svg","dataSets","containers","xAxisContainer","yAxisContainer","gridXContainer","gridYContainer","yOuterScaleBand","scaleBand","scaleLinear","innerScaleBand","defaultAxis","bar","groupMargin","className","bins","delay","domain","max","min","defaultGrid","bottom","left","right","top","dasharray","linecap","tip","tips","tipContentFn","i","joyTitle","create","el","newProps","this","mergeProps","_makeSvg","makeGrid","makeScales","map","update","merge","selectAll","childNodes","getElementsByTagName","removeChild","r","valuesCount","reduce","b","appendDomainRange","yDomain","allCounts","prev","next","thisCounts","p","thisExtent","extent","hasOwnProperty","Number","yRange","bandwidth","range","yAxisWidth","xAxisHeight","gridHeight","getBins","Array","from","Set","_drawScales","xAxis","_this","w","gridWidth","dataLabels","rangeRound","paddingInner","groupedMargin","barMargin","axisBottom","get","undefined","tickValues","call","yLabels","String","yOuterBounds","yAxis","axisLeft","yTickSize","attrs","barWidth","updateChart","groupData","scaleOrdinal","borderColors","g","bars","enter","ix","on","findIndex","html","currentHeight","exit","_drawGrid","_this2","axisWidth","offset","make_x_gridlines","tickFormat","make_y_gridlines","lineData","count","push","groupLabel","joyLabel","destroy","JoyPlot","_Component","ref","chart","state","parentWidth","handleResize","getDOMNode","offsetWidth","setState","getChartState","componentDidMount","_this3","window","addEventListener","componentDidUpdate","_this$props","rest","objectWithoutPropertiesLoose_default","componentWillUnmount","removeEventListener","ReactDOM","findDOMNode","HTMLElement","_this4","Component","theme","filterRange"],"mappings":"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","file":"component---src-pages-joyplot-tsx-79676d671e1ea347cac2.js","sourcesContent":["import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core';\n\nimport JoyPlot from '../../../src/JoyPlot';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data2 } from '../data';\n\nconst data3 = {\n  ...data2,\n  counts: [{\n    ...data2.counts[0],\n    data: [7, 6, 5, 4, 3, 2, 1],\n    label: 'Data 2',\n  }],\n  title: 'Plot 2',\n};\n\nconst JoyPlotExample = () => {\n  return (\n    <Layout>\n      <SEO title=\"Joy Plot\" description=\"\" />\n      <Typography variant=\"h2\">Joy Plot</Typography>\n      <div>\n        <Grid container spacing={24}>\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <JoyPlot\n                  data={[data2, data3]}\n                  colorScheme={['rgba(0, 0, 0, 0.5)', '#666']}\n                  width={400} \n                  height={400} />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nexport default JoyPlotExample;\n","import { curveCatmullRom } from 'd3-shape';\n\nimport {\n  IAxes,\n  IStroke,\n} from '../';\nimport {\n  IGrid,\n  ISVGLineStyle,\n} from '../Histogram';\nimport { ILineProps } from '../LineChart';\n\nexport const lineStyle: ISVGLineStyle = {\n  'fill': '#000',\n  'opacity': 1,\n  'shape-rendering': 'auto',\n  'stroke': '#000',\n  'stroke-opacity': 1,\n  'stroke-width': 1,\n  'visible': true,\n};\n\nexport const stroke: IStroke = {\n  color: '#000',\n  dasharray: '0',\n  linecap: 'butt',\n  width: 1,\n};\n\nexport const line: ILineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: '#000',\n    show: true,\n  },\n  show: true,\n  stroke: '#000',\n  strokeDashArray: '0',\n  strokeDashOffset: 0,\n};\n\nexport const axis: IAxes = {\n  x: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        dy: '.35em',\n        transform: 'rotate(0)',\n        x: 0,\n        y: 10,\n      },\n    },\n    tickSize: 0,\n    ticks: 3,\n    visible: true,\n    width: 50,\n  },\n  y: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        fill: '#666',\n      },\n    },\n    tickSize: 20,\n    ticks: 3,\n    visible: true,\n    width: 50,\n  },\n};\n\nexport const grid: IGrid = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n","export default ['#4bbcad',\n  '#d54539',\n  '#5ab94d',\n  '#8a5cd3',\n  '#a4b243',\n  '#ba5ccd',\n  '#54995c',\n  '#cf47a1',\n  '#d29f3e',\n  '#5c6fda',\n  '#c36528',\n  '#5fa6dc',\n  '#d74770',\n  '#7d7430',\n  '#8a529e',\n  '#df9273',\n  '#5f74b8',\n  '#ac5450',\n  '#d192d7',\n  '#b26088'];\n","import { ISVGLineStyle } from '../Histogram';\n\n/**\n * Apply style object to a d3 selection\n * @param {Object} selection D3 selection\n * @param {Object} style Css styling\n * @return {Object} selection\n */\nexport default (selection, style: ISVGLineStyle) => {\n  Object.keys(style).forEach((k: string) => {\n    selection.attr(k, style[k]);\n  });\n  return selection;\n};\n","import { event } from 'd3-selection';\nimport { select } from 'd3-selection';\n\nexport default {\n  fx: {\n    in: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n      container.transition()\n        .duration(200)\n        .style('opacity', 0.9);\n    },\n    move: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n    },\n    out: (container) => {\n      container.transition()\n        .duration(100)\n        .style('opacity', 0);\n    },\n  },\n};\n\nexport const makeTip = (selector, tipContainer): { tipContainer: any, tipContent: any } => {\n  if (tipContainer) {\n    // Chart could be rebuilt - remove old tip\n    tipContainer.remove();\n  }\n  tipContainer = select(selector).append('div')\n    .attr('class', 'tooltip top')\n    .style('opacity', 0);\n\n  tipContainer.append('div')\n    .attr('class', 'tooltip-arrow');\n  return {\n    tipContainer,\n    tipContent: tipContainer.append('div')\n      .attr('class', 'tooltip-inner'),\n  };\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"histogram\">Histogram</Link></Button>\n      <Button><Link to=\"line\">Line Chart</Link></Button>\n      <Button><Link to=\"pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport get from 'lodash.get';\nimport merge from 'lodash.merge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n} from './Histogram';\nimport { IJoyPlotProps } from './JoyPlot';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n} from './utils/defaults';\nimport { DeepPartial } from './utils/types';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const joyPlotD3 = ((): IChartAdaptor<IJoyPlotProps> => {\n  let svg: Selection<any, any, any, any>;;\n  let tipContainer;\n  let tipContent;\n  let dataSets: IGroupData[];\n  let containers: Array<Selection<SVGGElement, any, any, any>>;\n  let xAxisContainer: Selection<SVGGElement, any, any, any>;\n  let yAxisContainer: Selection<SVGGElement, any, any, any>;\n  let gridXContainer: Selection<SVGGElement, any, any, any>;\n  let gridYContainer: Selection<SVGGElement, any, any, any>;\n  const yOuterScaleBand = scaleBand();\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisLeft(yOuterScaleBand)\n      .ticks(ticks);\n  }\n\n  const props: IJoyPlotProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [{\n      bins: [],\n      counts: [],\n    }],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: defaultGrid,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins, i, d, joyTitle): string =>\n      joyTitle + ': ' +\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const JoyPlotD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: DeepPartial<IJoyPlotProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      containers = props.data.map((d, i) => svg\n        .append('g')\n        .attr('class', `histogram-container-${i}`),\n      );\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: DeepPartial<IJoyPlotProps>) {\n      merge(props, newProps);\n      if (newProps.data) {\n        props.data = newProps.data as IJoyPlotProps['data'];\n      }\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData[]): void {\n      const yDomain: number[] = [];\n      const { domain } = props;\n\n      const allCounts: number[] = data.reduce((prev, next) => {\n        const thisCounts: number[] = next.reduce((p, n) => {\n          return [...p, ...n.map((item) => item.value)];\n        }, [] as number[]);\n        return [...prev, ...thisCounts];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : Number(thisExtent[1]);\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : Number(thisExtent[0]);\n      const yRange = [yOuterScaleBand.bandwidth(), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    yAxisWidth() {\n      const { axis } = props;\n      return axis.y.label === ''\n        ? axis.y.width\n        : axis.y.width + 30;\n    },\n\n    xAxisHeight() {\n      const { axis } = props;\n      return axis.x.label === ''\n        ? axis.x.height\n        : axis.x.height + 30;\n    },\n\n    makeScales() {\n      const { axis, margin, height, width } = props;\n      xAxisContainer = svg.append('g').attr('class', 'x-axis');\n      yAxisContainer = svg.append('g').attr('class', 'y-axis');\n\n      if (axis.x.label !== '') {\n        svg.append('text')\n          .attr('class', 'x-axis-label')\n          .attr('transform',\n            'translate(' + (Number(width) / 2) + ' ,' +\n            ((height - this.xAxisHeight() - (margin.left * 2)) + 10 + axis.x.margin) + ')')\n          .style('text-anchor', 'middle')\n          .text(axis.x.label);\n      }\n\n      if (axis.y.label !== '') {\n        svg.append('text')\n          .attr('class', 'y-axis-label')\n          .attr('transform', 'translate(0, -' + this.gridHeight() + ')rotate(-90)')\n          .attr('y', 0 - margin.left)\n          .attr('x', 0 - (height / 2 - (margin.top * 2)))\n          .attr('dy', '1em')\n          .style('text-anchor', 'middle')\n          .text(axis.y.label);\n      }\n    },\n\n    getBins() {\n      return props.data.reduce((prev, next) => {\n        return Array.from(new Set(prev.concat(next.bins)));\n      }, [] as string[]);\n    },\n\n    /**\n     * Draw scales\n     */\n    _drawScales(data: IHistogramData[]) {\n      const { margin, height, axis } = props;\n      const valuesCount = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? c : prev;\n      }, 0);\n      const w = this.gridWidth();\n\n      let xAxis;\n      const dataLabels = data[0].counts.map((c) => c.label);\n\n      const bins = this.getBins();\n      x\n        .domain(bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      innerScaleBand\n        .domain(dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(this.barMargin());\n\n      xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n\n      xAxisContainer\n        .attr('transform', 'translate(' + (this.yAxisWidth() + axis.y.style['stroke-width']) + ',' +\n          (height - this.xAxisHeight() - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      const yLabels = data.map((d) => String(d.title));\n      const yOuterBounds: [number, number] = [height - (margin.top * 2) - this.xAxisHeight(), 0];\n      yOuterScaleBand.domain(yLabels)\n        .rangeRound(yOuterBounds);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft(yOuterScaleBand).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n\n      yAxisContainer\n        .attr('transform', 'translate(' + this.yAxisWidth() + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     */\n    gridWidth(): number {\n      const { width, margin } = props;\n      return Number(width) - (margin.left * 2) - this.yAxisWidth();\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     */\n    gridHeight(): number {\n      const { height, margin } = props;\n      return height - (margin.top * 2) - this.xAxisHeight();\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    /**\n     * Calculate the bar width\n     */\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      groupData: IGroupData[],\n    ) {\n      const bins = this.getBins();\n      const { delay, duration, axis, stroke, tip, tipContentFn } = props;\n      const barWidth = this.barWidth();\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const borderColors = scaleOrdinal(['#FFF']);\n\n      const yAxisWidth = this.yAxisWidth();\n\n      groupData.forEach((data, i) => {\n        const joyTitle = props.data[i].title;\n        const g = containers[i]\n          .selectAll<SVGGElement, {}>('g')\n          .data(data);\n\n        const bars = g.enter()\n          .append<SVGGElement>('g')\n          .merge(g)\n          .attr('transform', (d) => {\n            const xdelta = yAxisWidth\n              + axis.y.style['stroke-width']\n              + (x(d[0].label) || 0);\n\n            const ydelta = yOuterScaleBand(d[0].label);\n            return `translate(${xdelta}, ${ydelta})`;\n          })\n          .selectAll<SVGRectElement, {}>('rect')\n          .data((d) => d);\n\n        bars\n          .enter()\n          .append<SVGRectElement>('rect')\n          .attr('height', 0)\n          .attr('y', (d: IGroupDataItem): number => yOuterScaleBand.bandwidth())\n\n          .attr('class', 'bar')\n          .attr('x', (d) => String(innerScaleBand(d.label)))\n          .attr('width', (d) => barWidth)\n          .attr('fill', (d, ix) => colors(String(ix)))\n\n          .on('mouseover', (d: IGroupDataItem) => {\n            const ix = bins.findIndex((b) => b === d.label);\n            tipContent.html(() => tipContentFn(bins, ix, d.value, joyTitle));\n            tip.fx.in(tipContainer);\n          })\n          .on('mousemove', () => tip.fx.move(tipContainer))\n          .on('mouseout', () => tip.fx.out(tipContainer))\n          .merge(bars)\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('y', (d: IGroupDataItem): number => y(d.value))\n          .attr('stroke', (d, ix) => {\n            if (borderColors) {\n              return borderColors(String(ix));\n            }\n            return '';\n          })\n          .attr('shape-rendering', 'crispEdges')\n          .attr('stroke-width', stroke.width)\n          .attr('stroke-linecap', stroke.linecap)\n\n          // Hide bar's bottom border\n          .attr('stroke-dasharray',\n            (d: IGroupDataItem): string => {\n              const currentHeight = yOuterScaleBand.bandwidth() - y(d.value);\n              return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n            })\n          .attr('height', (d: IGroupDataItem): number =>\n            yOuterScaleBand.bandwidth() - y(d.value),\n          );\n\n        g.exit().remove();\n      });\n    },\n\n    makeGrid() {\n      gridXContainer = svg.append('g')\n        .attr('class', 'grid gridX');\n      gridYContainer = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin } = props;\n      const ticks = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? prev : c;\n      }, 0);\n      const axisWidth = axis.y.style['stroke-width'];\n\n      const offset = {\n        x: this.yAxisWidth() + axisWidth,\n        y: this.gridHeight(),\n      };\n\n      if (grid.x.visible) {\n        // Add the X gridlines\n        gridXContainer.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        gridXContainer.call(make_x_gridlines(get(grid, 'x.ticks', ticks))\n          .tickSize(-height + this.xAxisHeight() + (margin.top * 2))\n          .tickFormat(() => ''));\n\n        attrs(gridXContainer.selectAll('.tick line'), grid.x.style);\n        attrs(gridXContainer.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n      }\n\n      if (grid.y.visible) {\n        // add the Y gridlines\n        gridYContainer.attr('transform', 'translate(' + (this.yAxisWidth() + axisWidth) + ', 0)')\n          .transition()\n          .call(make_y_gridlines(get(grid, 'y.ticks', ticks))\n            .tickSize(-width + (margin.left * 2) + this.yAxisWidth())\n            .tickFormat(() => ''),\n          );\n\n        attrs(gridYContainer.selectAll('.tick line'), grid.y.style);\n\n        // Hide the first horizontal grid line to show axis\n        gridYContainer.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n          .attr('display', 'none');\n        attrs(gridYContainer.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: DeepPartial<IJoyPlotProps>) {\n      this.mergeProps(newProps);\n      const { data, visible } = props;\n\n      dataSets = data.map((d) => {\n        const lineData = [] as IGroupData;\n        d.counts.forEach((count) => {\n          count.data.forEach((value, i) => {\n            if (!lineData[i]) {\n              lineData[i] = [];\n            }\n            lineData[i].push({\n              groupLabel: count.label,\n              joyLabel: d.title,\n              label: d.bins[i],\n              value: visible[d.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n            } as IGroupDataItem);\n          });\n        });\n        return lineData;\n      });\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this.updateChart(dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return JoyPlotD3;\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IChartState,\n  IDomain,\n  IGrid,\n  IHistogramBar,\n  IHistogramData,\n  IMargin,\n  IStroke,\n  TipContentFn,\n} from './Histogram';\nimport { joyPlotD3 } from './JoyplotD3';\nimport { DeepPartial } from './utils/types';\n\nexport interface IJoyPlotProps {\n  axis: IAxes;\n  bar: IHistogramBar;\n  className: string;\n  data: IHistogramData[];\n  delay: number;\n  duration: number;\n  colorScheme: string[];\n  domain: IDomain;\n  grid: IGrid;\n  height: number;\n  margin: IMargin;\n  stroke: IStroke;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * JoyPlot component\n */\nclass JoyPlot extends Component<DeepPartial<IJoyPlotProps>, IChartState> {\n\n  private chart: IChartAdaptor<IJoyPlotProps>;\n  private ref: HTMLDivElement | null = null;\n\n  /**\n   * Constructor\n   */\n  constructor(props: DeepPartial<IJoyPlotProps>) {\n    super(props);\n    this.chart = joyPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): DeepPartial<IJoyPlotProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default JoyPlot;\n","import { IHistogramData } from '../../src';\nimport filterRange from '../../src/colors/filterRange';\nimport { IGrid } from '../../src/Histogram';\nimport { lineStyle } from '../../src/utils/defaults';\n\nexport const grid: IGrid = {\n  x: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n"],"sourceRoot":""}