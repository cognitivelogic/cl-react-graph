{"version":3,"sources":["webpack:///../node_modules/d3-shape/src/curve/step.js","webpack:///../src/utils/domain.ts","webpack:///../src/utils/useMakeLine.ts","webpack:///../src/utils/scales.ts","webpack:///../node_modules/d3-shape/src/area.js","webpack:///./src/pages/scatter.tsx","webpack:///../src/ScatterPlot.tsx","webpack:///../test/fixtures.ts","webpack:///../src/components/Points.tsx"],"names":["Step","context","t","this","_context","_t","stepBefore","stepAfter","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x","_y","_point","lineEnd","lineTo","closePath","point","x","y","moveTo","x1","rangeAffordance","range","axis","inc","undefined","first","scale","getTime","last","diff","percentIncrement","newLast","applyDomainAffordance","Date","e","v","useScales","data","width","height","left","useState","xScale","yScale","scales","setScales","useEffect","scaleSymlog","clamp","scaleTime","scaleLinear","buildScales","ys","xs","forEach","d","parsedY","parsedX","push","yDomain","extent","xDomain","domain","rangeRound","useMakeLine","props","current","setCurrent","previous","setPrevious","line","curveType","curveCatmullRom","next","String","curve","useMakeArea","x0","y0","constant","y1","defined","output","area","i","j","k","buffer","n","length","defined0","x0z","Array","y0z","path","arealine","_","arguments","lineX0","lineY0","lineY1","lineX1","thisArea","initialState","scatterData","Fruit","z","cx","cy","children","fontSize","Scatter","chart","id","PointComponent","title","description","variant","container","spacing","className","item","md","component","ScatterPlot","clampToZero","grid","xAxisHeight","yAxisWidth","axisLabelFormat","useScatterDomain","values","reduce","prev","concat","map","svgProps","style","lines","vertical","ticks","horizontal","key","label","replace","show","radius","fill","showTitle","stroke","labelFormat","top","Math","floor","now","dateValues","setDate","getDate","lineChartData","curveStepBefore","data3","tornadoData","bins","counts","radarData","axes","value","Points","yValue","xValue"],"mappings":"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","file":"component---src-pages-scatter-tsx-06f9ccc5da7dadbb0707.js","sourcesContent":["function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n\n            this._context.lineTo(x1, this._y);\n\n            this._context.lineTo(x1, y);\n          }\n\n          break;\n        }\n    }\n\n    this._x = x, this._y = y;\n  }\n};\nexport default function (context) {\n  return new Step(context, 0.5);\n}\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}","import { extent } from 'd3-array';\nimport { Axis } from 'd3-axis';\nimport { format } from 'd3-format';\nimport { ScaleLinear } from 'd3-scale';\nimport { timeFormat } from 'd3-time-format';\n\nimport { IAxis } from '../components/YAxis';\nimport {\n  EGroupedBarLayout,\n  IBarChartDataSet,\n  IGroupData,\n} from '../Histogram';\nimport { IGroupedProps } from './bars';\nimport { AnyScale } from './scales';\n\nexport interface IDomain {\n  max: number | null;\n  min: number | null;\n}\nexport const isStacked = ({ groupLayout, stacked }: IGroupedProps) => {\n  return stacked || groupLayout === EGroupedBarLayout.STACKED;\n};\n\ninterface IAppendDomainRangeProps {\n  domain: IDomain;\n  scale: ScaleLinear<number, number>,\n  data: IGroupData | number[],\n  range: number[],\n  stacked: boolean,\n}\n\n/**\n * Slightly better attempt from applyDomainAffordance, taking into\n * account axis types.\n */\nexport const rangeAffordance = (\n  range: [any, any],\n  axis: IAxis,\n  inc: boolean = true,\n): [any, any] => {\n  if (range[0] === undefined || range[1] === undefined) {\n    return [0, 0];\n  }\n  try {\n    const first = axis.scale === 'time' ? range[0].getTime() : range[0];\n    const last = axis.scale === 'time' ? range[1].getTime() : range[1];\n    const diff = last - first;\n    const percentIncrement = axis.scale === 'log' ? 100 : 5;\n\n    const incremental = applyDomainAffordance(diff, inc, percentIncrement);\n\n    const newLast = last + (incremental - diff);\n\n    if (axis.scale === 'time') {\n      return [range[0], new Date(newLast)];\n    }\n    // Only apply affordance at the end as line should start from origin.\n    return [range[0], newLast];\n  } catch (e) {\n    return [0, 0];\n  }\n\n}\n\nexport const applyDomainAffordance = (\n  v: number,\n  inc: boolean = true,\n  percentIncrement: number = 5,\n) =>\n  inc ? v + v * percentIncrement / 100\n    : v - v * percentIncrement / 100;\n\n/**\n * Update a linear scale with range and domain values taken either from the compiled\n * group data. If the chart is stacked then sum all bin values first.\n */\nexport const appendDomainRange = (props: IAppendDomainRangeProps): void => {\n  const aDomain: number[] = [];\n  const { domain, data, stacked, scale, range } = props;\n\n  const allCounts: number[] = (data as any).reduce((prev: number[], next): number[] => {\n    return stacked\n      ? [...prev, next.reduce((p: number, n): number => p + (n.value || n), 0)]\n      : [...prev, ...next.map((n) => n.value || n)];\n  }, [0]);\n  const thisExtent = extent<any>(allCounts, (d) => d);\n  aDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n    ? domain.max\n    : applyDomainAffordance(Number(thisExtent[1]));\n  aDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n    ? domain.min\n    : Number(thisExtent[0]);\n\n  scale.range(range)\n    .domain(aDomain)\n    .nice();\n}\n\nexport const shouldFormatTick = (axis: IAxis): boolean => {\n  return (axis.scale === 'time' && axis.hasOwnProperty('dateFormat'))\n    || axis.hasOwnProperty('numberFormat');\n}\n\nexport const formatTick = (axis: IAxis) => (v: string | number) => {\n  if (axis.scale === 'time') {\n    return timeFormat(axis.dateFormat ?? '%B %d, %Y')(new Date(v));\n  }\n  return isNaN(Number(v)) ? v : format(axis.numberFormat ?? \".2s\")(Number(v))\n};\n\ninterface ITickProps {\n  scaleBand: AnyScale;\n  axis: Axis<string> | Axis<number> | Axis<number | { valueOf(): number }> | Axis<number | string>;\n  axisConfig: IAxis;\n  axisLength: number;\n  limitByValues?: boolean;\n  valuesCount: number;\n}\n\nexport const ticks = (props: ITickProps) => {\n  const { axis, axisConfig } = props;\n  tickSize(props);\n  if (shouldFormatTick(axisConfig)) {\n    axis.tickFormat(formatTick(axisConfig) as any);\n  }\n}\n\nexport const tickSize = ({\n  axis,\n  axisConfig,\n  axisLength,\n  limitByValues,\n  scaleBand,\n  valuesCount,\n}: ITickProps) => {\n  const tickSize = axisConfig?.tickSize ?? undefined;\n  const ticks = undefined;\n  if (tickSize !== undefined) {\n    axis.tickSize(tickSize);\n  }\n  if (ticks !== undefined) {\n    axis.ticks(ticks);\n  } else {\n    if (limitByValues && axisLength / valuesCount < 10) {\n      // Show one in 10 axis labels\n      axis.tickValues((scaleBand.domain() as any[]).filter((d, i) => !(i % 10)));\n    }\n  }\n}\n\nexport const maxValueCount = (counts: IBarChartDataSet[]): number => {\n  return counts.reduce((a: number, b: IBarChartDataSet): number => {\n    return b.data.length > a ? b.data.length : a;\n  }, 0);\n};\n","import { extent } from 'd3-array';\nimport {\n  area,\n  curveCatmullRom,\n  CurveFactory,\n  CurveFactoryLineOnly,\n  line,\n} from 'd3-shape';\nimport {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { IAxes } from '../legacy/types';\nimport {\n  IChartPoint,\n  IChartPointValue,\n  ILineProps,\n} from '../LineChart';\nimport { rangeAffordance } from './domain';\nimport {\n  AnyScale,\n  buildScales,\n} from './scales';\n\nconst ZERO_SUBSTITUTE: number = 1e-6;\n\nexport interface IProps<T extends IChartPoint<IChartPointValue, IChartPointValue> = IChartPoint> {\n  data: T[];\n  axis: IAxes;\n  line: ILineProps;\n  curveType?: CurveFactory | CurveFactoryLineOnly;\n  width: number;\n  left?: number;\n  height: number;\n}\n\nexport const useScales: (props: Omit<IProps, 'line' | 'curveType'>) => { xScale: any, yScale: any } = ({\n  data,\n  width,\n  height,\n  axis,\n  left = 0,\n}) => {\n  const [scales, setScales] = useState<{ xScale: any, yScale: any }>({ xScale: null, yScale: null });\n  useEffect(() => {\n    const [xScale, yScale] = buildScales(axis);\n    const ys: any[] = [];\n    const xs: any[] = [];\n    data.forEach((d) => {\n      let parsedY = axis.y.scale === 'log' && d.y === 0 ? ZERO_SUBSTITUTE : d.y;\n      let parsedX = axis.x.scale === 'log' && d.x === 0 ? ZERO_SUBSTITUTE : d.x;\n      ys.push(parsedY);\n      xs.push(parsedX);\n    });\n\n    const yDomain = rangeAffordance(extent(ys), axis.y);\n    const xDomain = rangeAffordance(extent(xs), axis.x);\n\n    (xScale as any)\n      .domain(xDomain)\n      .rangeRound([left, width + left]);\n    (yScale as any).domain(yDomain)\n      .range([height, 0]);\n    setScales({ xScale, yScale })\n\n  }, [data, width, height, left])\n\n  return scales;\n}\n\n\nexport const useMakeLine: (props: IProps) => { previous: string, current: string } = (props) => {\n  const [current, setCurrent] = useState('');\n  const [previous, setPrevious] = useState('');\n  const { xScale, yScale } = useScales(props);\n  useEffect(() => {\n    const { data } = props;\n    const { curveType = curveCatmullRom } = props.line;\n    if (yScale !== null) {\n      const curve = (\n        x: AnyScale,\n        y: AnyScale,\n      ) => line()\n        .curve(curveType)\n        .x((d: any) => {\n          return x(d.x);\n        })\n        .y((d: any) => y(d.y));\n      const next = String(curve(xScale, yScale)(data as any));\n      if (next !== current) {\n        setPrevious(current);\n        setCurrent(next);\n      }\n    }\n\n  }, [xScale, yScale, props.data, props.width, props.line])\n\n  return { previous, current };\n}\n\nexport const useMakeArea: (props: IProps) => { previous: string, current: string } = (props) => {\n  const [current, setCurrent] = useState('');\n  const [previous, setPrevious] = useState('');\n  const { xScale, yScale } = useScales(props);\n  useEffect(() => {\n    const { data, height } = props;\n    const { curveType = curveCatmullRom } = props.line;\n    if (yScale !== null) {\n      const thisArea = () => area()\n        .curve(curveType as CurveFactory)\n        .x((d: any) => xScale(d.x))\n        .y0((d) => height)\n        .y1((d: any) => yScale(d.y));\n      const next = String(thisArea()(data as any));\n      if (next !== current) {\n        setPrevious(current);\n        setCurrent(next);\n      }\n    }\n  }, [xScale, yScale, props.data]);\n  return { previous, current };\n}\n","import {\n  ScaleBand,\n  scaleLinear,\n  ScaleLinear,\n  ScaleLogarithmic,\n  ScalePoint,\n  ScaleSymLog,\n  scaleSymlog,\n  scaleTime,\n  ScaleTime,\n} from 'd3-scale';\n\nimport { IAxes } from '../';\n\nexport type AnyScale = ScaleLinear<number, number>\n  | ScaleTime<any, any>\n  | ScaleLogarithmic<any, any>\n  | ScaleSymLog<any, any>\n  | ScaleBand<string>\n  | ScalePoint<string>;\n\nexport const buildScales = (axis: IAxes) => {\n  let x: AnyScale;\n  let y: AnyScale;\n\n  switch (axis.x.scale) {\n    case 'log':\n      x = scaleSymlog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'time':\n      x = scaleTime();\n      break;\n    default:\n      x = scaleLinear();\n      break;\n  }\n\n  switch (axis.y.scale) {\n    case 'log':\n      y = scaleSymlog().clamp(true); // clamp values below 1 to be equal to 0\n      break;\n    case 'time':\n      y = scaleTime();\n      break;\n    default:\n      y = scaleLinear();\n      break;\n  }\n  return [x, y];\n};\n","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","import React, { FC } from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core';\n\nimport { IPointProps } from '../../../src/components/Points';\nimport ScatterPlot, { IProps } from '../../../src/ScatterPlot';\nimport { scatterData } from '../../../test/fixtures';\nimport JSXToString from '../components/JSXToString';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst initialState: IProps = {\n  axis: {\n    x: {\n      height: 20,\n      width: 400,\n      scale: 'linear',\n    },\n    y: {\n      width: 20,\n      height: 400,\n      scale: 'linear',\n    },\n  },\n  height: 400,\n  width: 400,\n  data: [scatterData],\n}\n\nconst Fruit: FC<IPointProps> = ({\n  x,\n  y,\n  z,\n  cx,\n  cy,\n  children,\n}) => <text x={cx} y={cy} fontSize={z * 4}>\n    {x > 2 ? \"🍎\" : \"🍐\"}\n    {children}\n  </text>\n\nconst Scatter = () => {\n  const chart = <ScatterPlot\n    id=\"scatter-demo\"\n    PointComponent={(props: IPointProps) => <Fruit {...props} />}\n    {...initialState} />\n  return (\n    <Layout>\n      <SEO title=\"Line Chart\" description=\"\" />\n      <Typography variant=\"h2\">Scatter Chart</Typography>\n      <div>\n        <Grid container spacing={5} className=\"wrapper\">\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                {chart}\n              </CardContent>\n            </Card>\n            <br />\n            <Card>\n              <CardContent>\n                <JSXToString component={chart} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n\n          </Grid>\n\n        </Grid>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Scatter;\n","import React, {\n  FC,\n  Fragment,\n} from 'react';\n\nimport Base from './components/Base';\nimport Grid from './components/Grid';\nimport Points, { PointComponentProps } from './components/Points';\nimport XAxis from './components/XAxis';\nimport YAxis, { TAxisLabelFormat } from './components/YAxis';\nimport { IGrid } from './Histogram';\nimport { IAxes } from './legacy/types';\nimport {\n  IChartPoint,\n  IChartPointValue,\n} from './LineChart';\nimport { useScatterDomain } from './utils/useDomain';\n\nexport interface IScatterPlotDataSet<T> {\n  label: string;\n  point: {\n    radius: number;\n    stroke: string;\n    fill: string;\n    show: boolean;\n    showTitle?: boolean;\n  };\n  data: T[];\n}\n\nexport interface IProps<T extends IChartPoint<IChartPointValue, IChartPointValue> = IChartPoint> {\n  axis: IAxes;\n  data: IScatterPlotDataSet<T>[];\n  grid?: IGrid;\n  height: number;\n  id?: string;\n  width: number;\n  xAxisHeight?: number;\n  yAxisWidth?: number;\n  title?: string;\n  description?: string;\n  /**\n   * @description if true then adds a 0 to the data domain. Useful if you don't want your lowest value to appear on top of the x axis\n   */\n  clampToZero?: boolean;\n  axisLabelFormat?: TAxisLabelFormat;\n  /** @description Custom component to override the default <circle /> used to plot points */\n  PointComponent?: FC<PointComponentProps>;\n}\n\nconst ScatterPlot: FC<IProps> = ({\n  axis,\n  clampToZero = true,\n  data,\n  grid,\n  height,\n  width,\n  xAxisHeight = 60,\n  yAxisWidth = 100,\n  title,\n  description,\n  axisLabelFormat,\n  PointComponent,\n}) => {\n  const domain = useScatterDomain({\n    values: data,\n    clampToZero,\n  });\n\n  const values = data.reduce((prev, next) => prev.concat(next.data.map((d) => d.x)), [] as any[])\n\n  return (\n    <Base\n      width={width}\n      height={height}\n      title={title}\n      description={description}>\n\n      {\n        grid && <Grid\n          left={yAxisWidth}\n          height={height - xAxisHeight}\n          svgProps={{ ...grid.x.style }}\n          lines={{\n            vertical: grid.y.ticks,\n            horizontal: grid.x.ticks,\n          }}\n          width={width - yAxisWidth} />\n      }\n      {\n        data.map((item) => <Fragment key={item.label.replace(/[^a-zA-Z0-9-]/, '')}>\n\n          {\n            item.point.show &&\n            <Points\n              axis={axis}\n              label={item.label}\n              key={`points-${item.label}`}\n              width={width - yAxisWidth}\n              left={yAxisWidth}\n              height={height - xAxisHeight}\n              z={item.point.radius}\n              fill={item.point.fill}\n              showTitle={item.point.showTitle}\n              stroke={item.point.stroke}\n              data={item.data}\n              PointComponent={PointComponent} />\n          }\n\n\n        </Fragment>)\n      }\n\n      <YAxis\n        width={yAxisWidth}\n        height={height - xAxisHeight}\n        scale={axis.y.scale ?? 'linear'}\n        domain={domain}\n      />\n\n      <XAxis\n        width={width - yAxisWidth}\n        height={xAxisHeight}\n        labelFormat={axisLabelFormat}\n        scale={axis.x.scale ?? 'band'}\n        top={height - xAxisHeight}\n        left={yAxisWidth}\n        values={\n          values.length > 4\n            ? [values[0], values[Math.floor(values.length / 4)],\n            values[Math.floor(values.length / 2)],\n            values[Math.floor(values.length * (3 / 4))],\n            ] as number[]\n            : values}\n      />\n\n    </Base>\n  )\n}\n\nexport default ScatterPlot;\n","import {\n  curveCatmullRom,\n  curveStepBefore,\n} from 'd3-shape';\n\nimport {\n  IBarChartData,\n  ILineChartDataSet,\n} from '../src';\nimport { IHistogramData } from '../src/Histogram';\nimport { IChartPointValue } from '../src/LineChart';\nimport { IRadarChartData } from '../src/RadarChart';\nimport { IScatterPlotDataSet } from '../src/ScatterPlot';\nimport { ITornadoData } from '../src/Tornado';\n\nconst now = new Date();\nconst xs = new Array(100).fill('').map((_, i) => new Date(new Date().setDate(now.getDate() + i)))\nconst dateValues = xs.map((v, i) => ({\n  x: v, y: i * 1000,\n}));\n\nexport const lineChartData: ILineChartDataSet<any>[] = [\n  {\n    \"label\": \"cdd7c30f-4d9b-433c-a5d4-12bb39df89c6 usage\",\n    \"line\": {\n      \"fill\": {\n        \"fill\": \"rgba(11, 85, 167, 0.7)\",\n        \"show\": true\n      },\n      \"show\": true,\n      \"stroke\": \"#000\",\n      \"strokeDashArray\": \"0\",\n      \"strokeDashOffset\": 0,\n      curveType: curveStepBefore,\n    },\n    \"point\": {\n      \"fill\": \"#000\",\n      \"radius\": 2,\n      \"show\": true,\n      \"stroke\": \"#000\"\n    },\n    \"data\": dateValues\n  }\n]\n\nexport const histogramData: IHistogramData = {\n  bins: [[0, 50], [50, 150], [150, 300]],\n  counts: [\n    {\n      data: [500, 2000, 1500],\n      label: 'Baseline',\n    },\n  ]\n}\n\nexport const barChartData: IBarChartData = {\n  bins: ['Female', 'Male', 'Other', 'sdfdfg', 'dagdsg', 'sfsd', 'ds34fsdf', 'dfsfsd', 'sdfs34dfs', 'ghf34hfg', 'fd33gag', 'jg343hj', 'a343wes', 'ye343ye', 'fd343gjs', 'sdfd343fg', '34', 'sfsd', '433', '45245', '745'],\n  counts: [\n    {\n      data: [58483, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300, 79200, 52400, 13300],\n      label: 'Baseline',\n    },\n    {\n      data: [54932, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000, 60000, 34230, 10000],\n      label: 'Filtered',\n    },\n  ]\n}\n\nexport const data3: ILineChartDataSet<any>[] = [{\n  'label': 'rob Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(11, 85, 167, 0.2)', show: true },\n    show: true,\n    stroke: 'rgb(11, 85, 167)',\n    'strokeDashArray': '0',\n    'strokeDashOffset': 0\n  },\n  'point':\n    { fill: '#000', radius: 4, show: true, stroke: '' },\n  'data': dateValues,\n}, {\n  'label': 'rob\\'',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(11, 85, 167, 0.7)', show: true },\n    show: true, stroke: '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { fill: '', radius: 0, show: false, stroke: '' },\n  'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n},\n{\n  'label': 'Their Allocation',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(0, 169, 123, 0.2)', show: true },\n    show: true, stroke: 'rgb(0, 169, 123)', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { fill: '', radius: 0, show: false, stroke: '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}, {\n  'label': 'Theirs',\n  'line': {\n    'curveType': curveCatmullRom,\n    fill: { fill: 'rgba(0, 169, 123, 0.7)', show: true },\n    show: true, stroke: '#000', 'strokeDashArray': '0', 'strokeDashOffset': 0\n  },\n  'point': { fill: '', radius: 0, show: false, stroke: '' }, 'data': [\n    { x: new Date('2019-08-20T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-21T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-22T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-23T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-24T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-25T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-26T00:00:00.000Z'), y: 0 },\n    { x: new Date('2019-08-27T00:00:00.000Z'), y: 0 }]\n}];\n\nexport const tornadoData: ITornadoData = {\n  bins: ['16-18', '18-25', '25-35', '35-50', '50-65', '65-∞'],\n  counts: [\n    {\n      label: 'Background',\n      data: [\n        [200, 2600, 5100, 9700, 8400, 6700], // Male bin 1, Male bin 2,\n        [2002, 2100, 4700, 8700, 4900, 1400], // Female bin 1, Female bin 2,\n      ],\n    },\n    {\n      label: 'Foreground',\n      data: [\n        [100, 260, 510, 970, 840, 670], // Male bin 1, Male bin 2,\n        [1000, 5500, 470, 870, 490, 140], // Female bin 1, Female bin 2,\n      ],\n    },\n\n  ],\n}\nexport const scatterData: IScatterPlotDataSet<IChartPointValue> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\n\nexport const radarData: IRadarChartData[] = [{\n  label: 'Germany',\n  axes: [\n    { axis: \"strength\", value: 13 },\n    { axis: \"intelligence\", value: 6 },\n    { axis: \"charisma\", value: 5 },\n    { axis: \"dexterity\", value: 9 },\n    { axis: \"luck\", value: 2 }\n  ]\n},\n{\n  label: 'Argentina',\n  axes: [\n    { axis: \"strength\", value: 6 },\n    { axis: \"intelligence\", value: 7 },\n    { axis: \"charisma\", value: 10 },\n    { axis: \"dexterity\", value: 13 },\n    { axis: \"luck\", value: 9 }\n  ]\n}];\n","import React, { FC } from 'react';\n\nimport {\n  IProps,\n  useScales,\n} from '../utils/useMakeLine';\nimport Point, { IPointProps } from './Point';\n\nexport type PointComponentProps = IPointStyle & IPointProps;\n\nexport interface IPointStyle {\n  z?: number;\n  fill?: string;\n  label?: string;\n  stroke?: string;\n  showTitle?: boolean;\n  show?: boolean;\n  /** @description Custom component to override the default <circle /> used to plot points */\n  PointComponent?: FC<PointComponentProps>;\n}\n\nexport type TPoints = Omit<IProps, 'line' | 'curveType'> & IPointStyle;\n\nconst Points: FC<TPoints> = (props) => {\n  const {\n    data,\n    z = 5,\n    fill = '#000',\n    stroke = '#000',\n    showTitle = true,\n    PointComponent,\n  } = props;\n  const { xScale, yScale } = useScales(props);\n  const className = `point-${(props.label ?? '').replace(/[^a-z]/gi, '')}`;\n  if (yScale === null) {\n    return null;\n  }\n  return <>\n    {\n      data.map((d) => {\n        const { x, y, ...rest } = d;\n        const yValue = yScale(y);\n        const xValue = xScale(x);\n        const id = `${className}-${xValue}-${yValue}`;\n        return <Point\n          key={id}\n          id={id}\n          PointComponent={PointComponent}\n          cx={xValue}\n          cy={yValue}\n          x={x}\n          y={y}\n          z={d.z ?? z}\n        >\n          {\n            showTitle && <title>{`${x}, ${y}`}</title>\n          }\n        </Point>\n      })\n    }\n  </>\n}\n\nexport default Points;\n"],"sourceRoot":""}