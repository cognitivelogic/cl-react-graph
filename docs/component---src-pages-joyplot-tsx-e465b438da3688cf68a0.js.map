{"version":3,"sources":["webpack:///./src/pages/joyplot.tsx","webpack:///../src/utils/defaults.ts","webpack:///../src/colors/index.js","webpack:///../src/d3/attrs.ts","webpack:///../src/tip.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///../src/colors/filterRange.ts","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/JoyplotD3.ts","webpack:///../src/JoyPlot.tsx","webpack:///./src/data.ts"],"names":["data3","Object","assign","data2","counts","data","label","title","JoyPlotExample","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","description","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","variant","container","spacing","item","xs","_src_JoyPlot__WEBPACK_IMPORTED_MODULE_3__","colorScheme","width","height","lineStyle","fill","opacity","shape-rendering","stroke","stroke-opacity","stroke-width","visible","axis","curveCatmullRom","x","dateFormat","margin","numberFormat","scale","style","text","dy","transform","y","tickSize","ticks","tickValues","grid","__webpack_exports__","selection","keys","forEach","k","attr","__webpack_require__","d","makeTip","d3_selection__WEBPACK_IMPORTED_MODULE_0__","fx","in","event","pageX","pageY","transition","duration","move","out","selector","tipContainer","remove","select","append","tipContent","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","colors","filter","value","c","Color","hsl","array","length","luminosity","e","v","index","self","indexOf","sort","Math","random","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","join","defaultProps","arrayOf","Header","siteTitle","react_default","index_es","position","color","gatsby_browser_entry","to","Layout","Fragment","header","flexGrow","padding","paddingTop","Date","getFullYear","href","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","joyPlotD3","svg","dataSets","containers","xAxisContainer","yAxisContainer","gridXContainer","gridYContainer","yOuterScaleBand","scaleBand","scaleLinear","innerScaleBand","defaultAxis","bar","groupMargin","overlayMargin","className","bins","delay","domain","max","min","defaultGrid","bottom","left","right","top","dasharray","linecap","tip","tips","tipContentFn","i","joyTitle","create","el","newProps","this","mergeProps","_makeSvg","makeGrid","makeScales","map","update","merge","selectAll","childNodes","getElementsByTagName","removeChild","r","valuesCount","reduce","b","appendDomainRange","yDomain","allCounts","prev","next","thisCounts","p","thisExtent","extent","hasOwnProperty","Number","yRange","bandwidth","range","yAxisWidth","xAxisHeight","gridHeight","getBins","Array","from","Set","_drawScales","xAxis","_this","w","gridWidth","dataLabels","rangeRound","paddingInner","groupedMargin","barMargin","axisBottom","get","undefined","call","yLabels","String","yOuterBounds","yAxis","axisLeft","yTickSize","attrs","barWidth","updateChart","groupData","scaleOrdinal","borderColors","g","bars","enter","ix","on","findIndex","html","currentHeight","exit","_drawGrid","_this2","axisWidth","offset","make_x_gridlines","tickFormat","make_y_gridlines","lineData","count","push","groupLabel","joyLabel","destroy","JoyPlot","_Component","ref","chart","state","parentWidth","handleResize","getDOMNode","offsetWidth","setState","getChartState","componentDidMount","_this3","window","addEventListener","componentDidUpdate","_this$props","rest","objectWithoutPropertiesLoose_default","componentWillUnmount","removeEventListener","ReactDOM","findDOMNode","HTMLElement","_this4","Component","theme","filterRange"],"mappings":"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","file":"component---src-pages-joyplot-tsx-e465b438da3688cf68a0.js","sourcesContent":["import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core';\n\nimport JoyPlot from '../../../src/JoyPlot';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data2 } from '../data';\n\nconst data3 = {\n  ...data2,\n  counts: [{\n    ...data2.counts[0],\n    data: [7, 6, 5, 4, 3, 2, 1],\n    label: 'Data 2',\n  }],\n  title: 'Plot 2',\n};\n\nconst JoyPlotExample = () => {\n  return (\n    <Layout>\n      <SEO title=\"Joy Plot\" description=\"\" />\n      <Typography variant=\"h2\">Joy Plot</Typography>\n      <div>\n        <Grid container spacing={24}>\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <JoyPlot\n                  data={[data2, data3]}\n                  colorScheme={['rgba(0, 0, 0, 0.5)', '#666']}\n                  width={400} \n                  height={400} />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nexport default JoyPlotExample;\n","import { curveCatmullRom } from 'd3-shape';\n\nimport {\n  IAxes,\n  IStroke,\n} from '../';\nimport {\n  IGrid,\n  ISVGLineStyle,\n} from '../Histogram';\nimport { ILineProps } from '../LineChart';\n\nexport const lineStyle: ISVGLineStyle = {\n  'fill': '#000',\n  'opacity': 1,\n  'shape-rendering': 'auto',\n  'stroke': '#000',\n  'stroke-opacity': 1,\n  'stroke-width': 1,\n  'visible': true,\n};\n\nexport const stroke: IStroke = {\n  color: '#000',\n  dasharray: '0',\n  linecap: 'butt',\n  width: 1,\n};\n\nexport const line: ILineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: '#000',\n    show: true,\n  },\n  show: true,\n  stroke: '#000',\n  strokeDashArray: '0',\n  strokeDashOffset: 0,\n};\n\nexport const axis: IAxes = {\n  x: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        dy: '.35em',\n        transform: 'rotate(0)',\n        x: 0,\n        y: 10,\n      },\n    },\n    tickSize: 0,\n    ticks: 3,\n    tickValues: null,\n    visible: true,\n    width: 50,\n  },\n  y: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'LINEAR',\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#666',\n    },\n    text: {\n      style: {\n        fill: '#666',\n      },\n    },\n    tickSize: 20,\n    ticks: 3,\n    tickValues: null,\n    visible: true,\n    width: 50,\n  },\n};\n\nexport const grid: IGrid = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'stroke-opacity': 0.7,\n      'stroke-width': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n","export default ['#4bbcad',\n  '#d54539',\n  '#5ab94d',\n  '#8a5cd3',\n  '#a4b243',\n  '#ba5ccd',\n  '#54995c',\n  '#cf47a1',\n  '#d29f3e',\n  '#5c6fda',\n  '#c36528',\n  '#5fa6dc',\n  '#d74770',\n  '#7d7430',\n  '#8a529e',\n  '#df9273',\n  '#5f74b8',\n  '#ac5450',\n  '#d192d7',\n  '#b26088'];\n","import { ISVGLineStyle } from '../Histogram';\n\n/**\n * Apply style object to a d3 selection\n * @param {Object} selection D3 selection\n * @param {Object} style Css styling\n * @return {Object} selection\n */\nexport default (selection, style: ISVGLineStyle) => {\n  Object.keys(style).forEach((k: string) => {\n    selection.attr(k, style[k]);\n  });\n  return selection;\n};\n","import { event } from 'd3-selection';\nimport { select } from 'd3-selection';\n\nexport default {\n  fx: {\n    in: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n      container.transition()\n        .duration(200)\n        .style('opacity', 0.9);\n    },\n    move: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n    },\n    out: (container) => {\n      container.transition()\n        .duration(100)\n        .style('opacity', 0);\n    },\n  },\n};\n\nexport const makeTip = (selector, tipContainer): { tipContainer: any, tipContent: any } => {\n  if (tipContainer) {\n    // Chart could be rebuilt - remove old tip\n    tipContainer.remove();\n  }\n  tipContainer = select(selector).append('div')\n    .attr('class', 'tooltip top')\n    .style('opacity', 0);\n\n  tipContainer.append('div')\n    .attr('class', 'tooltip-arrow');\n  return {\n    tipContainer,\n    tipContent: tipContainer.append('div')\n      .attr('class', 'tooltip-inner'),\n  };\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"histogram\">Histogram</Link></Button>\n      <Button><Link to=\"line\">Line Chart</Link></Button>\n      <Button><Link to=\"pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { extent } from 'd3-array';\nimport {\n  axisBottom,\n  axisLeft,\n} from 'd3-axis';\nimport {\n  scaleBand,\n  scaleLinear,\n  ScaleLinear,\n  scaleOrdinal,\n} from 'd3-scale';\nimport {\n  select,\n  Selection,\n} from 'd3-selection';\nimport get from 'lodash.get';\nimport merge from 'lodash/merge';\n\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport {\n  IChartAdaptor,\n  IHistogramData,\n  IHistogramDataSet,\n} from './Histogram';\nimport { IJoyPlotProps } from './JoyPlot';\nimport tips, { makeTip } from './tip';\nimport {\n  axis as defaultAxis,\n  grid as defaultGrid,\n} from './utils/defaults';\nimport { DeepPartial } from './utils/types';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const joyPlotD3 = ((): IChartAdaptor<IJoyPlotProps> => {\n  let svg: Selection<any, any, any, any>;;\n  let tipContainer;\n  let tipContent;\n  let dataSets: IGroupData[];\n  let containers: Array<Selection<SVGGElement, any, any, any>>;\n  let xAxisContainer: Selection<SVGGElement, any, any, any>;\n  let yAxisContainer: Selection<SVGGElement, any, any, any>;\n  let gridXContainer: Selection<SVGGElement, any, any, any>;\n  let gridYContainer: Selection<SVGGElement, any, any, any>;\n  const yOuterScaleBand = scaleBand();\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisLeft(yOuterScaleBand)\n      .ticks(ticks);\n  }\n\n  const props: IJoyPlotProps = {\n    axis: defaultAxis,\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      overlayMargin: 5,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [{\n      bins: [],\n      counts: [],\n    }],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: defaultGrid,\n    height: 200,\n    margin: {\n      bottom: 0,\n      left: 5,\n      right: 0,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins, i, d, joyTitle): string =>\n      joyTitle + ': ' +\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const JoyPlotD3 = {\n    /**\n     * Initialization\n     */\n    create(el: Element, newProps: DeepPartial<IJoyPlotProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid();\n      this.makeScales();\n      containers = props.data.map((d, i) => svg\n        .append('g')\n        .attr('class', `histogram-container-${i}`),\n      );\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: DeepPartial<IJoyPlotProps>) {\n      merge(props, newProps);\n      if (newProps.data) {\n        props.data = newProps.data as IJoyPlotProps['data'];\n      }\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     */\n    _makeSvg(el: Element) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData[]): void {\n      const yDomain: number[] = [];\n      const { domain } = props;\n\n      const allCounts: number[] = data.reduce((prev, next) => {\n        const thisCounts: number[] = next.reduce((p, n) => {\n          return [...p, ...n.map((item) => item.value)];\n        }, [] as number[]);\n        return [...prev, ...thisCounts];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : Number(thisExtent[1]);\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : Number(thisExtent[0]);\n      const yRange = [yOuterScaleBand.bandwidth(), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    yAxisWidth() {\n      const { axis } = props;\n      return axis.y.label === ''\n        ? axis.y.width\n        : axis.y.width + 30;\n    },\n\n    xAxisHeight() {\n      const { axis } = props;\n      return axis.x.label === ''\n        ? axis.x.height\n        : axis.x.height + 30;\n    },\n\n    makeScales() {\n      const { axis, margin, height, width } = props;\n      xAxisContainer = svg.append('g').attr('class', 'x-axis');\n      yAxisContainer = svg.append('g').attr('class', 'y-axis');\n\n      if (axis.x.label !== '') {\n        svg.append('text')\n          .attr('class', 'x-axis-label')\n          .attr('transform',\n            'translate(' + (Number(width) / 2) + ' ,' +\n            ((height - this.xAxisHeight() - (margin.left * 2)) + 10 + axis.x.margin) + ')')\n          .style('text-anchor', 'middle')\n          .text(axis.x.label);\n      }\n\n      if (axis.y.label !== '') {\n        svg.append('text')\n          .attr('class', 'y-axis-label')\n          .attr('transform', 'translate(0, -' + this.gridHeight() + ')rotate(-90)')\n          .attr('y', 0 - margin.left)\n          .attr('x', 0 - (height / 2 - (margin.top * 2)))\n          .attr('dy', '1em')\n          .style('text-anchor', 'middle')\n          .text(axis.y.label);\n      }\n    },\n\n    getBins() {\n      return props.data.reduce((prev, next) => {\n        return Array.from(new Set(prev.concat(next.bins)));\n      }, [] as string[]);\n    },\n\n    /**\n     * Draw scales\n     */\n    _drawScales(data: IHistogramData[]) {\n      const { margin, height, axis } = props;\n      const valuesCount = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? c : prev;\n      }, 0);\n      const w = this.gridWidth();\n\n      let xAxis;\n      const dataLabels = data[0].counts.map((c) => c.label);\n\n      const bins = this.getBins();\n      x\n        .domain(bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      innerScaleBand\n        .domain(dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(this.barMargin());\n\n      xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n\n      xAxisContainer\n        .attr('transform', 'translate(' + (this.yAxisWidth() + axis.y.style['stroke-width']) + ',' +\n          (height - this.xAxisHeight() - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      const yLabels = data.map((d) => String(d.title));\n      const yOuterBounds: [number, number] = [height - (margin.top * 2) - this.xAxisHeight(), 0];\n      yOuterScaleBand.domain(yLabels)\n        .rangeRound(yOuterBounds);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft(yOuterScaleBand).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n\n      yAxisContainer\n        .attr('transform', 'translate(' + this.yAxisWidth() + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style as any);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style as any);\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     */\n    gridWidth(): number {\n      const { width, margin } = props;\n      return Number(width) - (margin.left * 2) - this.yAxisWidth();\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     */\n    gridHeight(): number {\n      const { height, margin } = props;\n      return height - (margin.top * 2) - this.xAxisHeight();\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    /**\n     * Calculate the bar width\n     */\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      groupData: IGroupData[],\n    ) {\n      const bins = this.getBins();\n      const { delay, duration, axis, stroke, tip, tipContentFn } = props;\n      const barWidth = this.barWidth();\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const borderColors = scaleOrdinal(['#FFF']);\n\n      const yAxisWidth = this.yAxisWidth();\n\n      groupData.forEach((data, i) => {\n        const joyTitle = props.data[i].title;\n        const g = containers[i]\n          .selectAll<SVGGElement, {}>('g')\n          .data(data);\n\n        const bars = g.enter()\n          .append<SVGGElement>('g')\n          .merge(g)\n          .attr('transform', (d) => {\n            const xdelta = yAxisWidth\n              + axis.y.style['stroke-width']\n              + (x(d[0].label) || 0);\n\n            const ydelta = yOuterScaleBand(d[0].label);\n            return `translate(${xdelta}, ${ydelta})`;\n          })\n          .selectAll<SVGRectElement, {}>('rect')\n          .data((d) => d);\n\n        bars\n          .enter()\n          .append<SVGRectElement>('rect')\n          .attr('height', 0)\n          .attr('y', (d: IGroupDataItem): number => yOuterScaleBand.bandwidth())\n\n          .attr('class', 'bar')\n          .attr('x', (d) => String(innerScaleBand(d.label)))\n          .attr('width', (d) => barWidth)\n          .attr('fill', (d, ix) => colors(String(ix)))\n\n          .on('mouseover', (d: IGroupDataItem) => {\n            const ix = bins.findIndex((b) => b === d.label);\n            tipContent.html(() => tipContentFn(bins, ix, d.value, joyTitle));\n            tip.fx.in(tipContainer);\n          })\n          .on('mousemove', () => tip.fx.move(tipContainer))\n          .on('mouseout', () => tip.fx.out(tipContainer))\n          .merge(bars)\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('y', (d: IGroupDataItem): number => y(d.value))\n          .attr('stroke', (d, ix) => {\n            if (borderColors) {\n              return borderColors(String(ix));\n            }\n            return '';\n          })\n          .attr('shape-rendering', 'crispEdges')\n          .attr('stroke-width', stroke.width)\n          .attr('stroke-linecap', stroke.linecap)\n\n          // Hide bar's bottom border\n          .attr('stroke-dasharray',\n            (d: IGroupDataItem): string => {\n              const currentHeight = yOuterScaleBand.bandwidth() - y(d.value);\n              return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n            })\n          .attr('height', (d: IGroupDataItem): number =>\n            yOuterScaleBand.bandwidth() - y(d.value),\n          );\n\n        g.exit().remove();\n      });\n    },\n\n    makeGrid() {\n      gridXContainer = svg.append('g')\n        .attr('class', 'grid gridX');\n      gridYContainer = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin } = props;\n      const ticks = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? prev : c;\n      }, 0);\n      const axisWidth = axis.y.style['stroke-width'];\n\n      const offset = {\n        x: this.yAxisWidth() + axisWidth,\n        y: this.gridHeight(),\n      };\n\n      if (grid.x.visible) {\n        // Add the X gridlines\n        gridXContainer.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        gridXContainer.call(make_x_gridlines(get(grid, 'x.ticks', ticks))\n          .tickSize(-height + this.xAxisHeight() + (margin.top * 2))\n          .tickFormat(() => ''));\n\n        attrs(gridXContainer.selectAll('.tick line'), grid.x.style);\n        attrs(gridXContainer.selectAll('.domain'), { ...axis.y.style, stroke: 'transparent' });\n      }\n\n      if (grid.y.visible) {\n        // add the Y gridlines\n        gridYContainer.attr('transform', 'translate(' + (this.yAxisWidth() + axisWidth) + ', 0)')\n          .transition()\n          .call(make_y_gridlines(get(grid, 'y.ticks', ticks))\n            .tickSize(-width + (margin.left * 2) + this.yAxisWidth())\n            .tickFormat(() => ''),\n          );\n\n        attrs(gridYContainer.selectAll('.tick line'), grid.y.style);\n\n        // Hide the first horizontal grid line to show axis\n        gridYContainer.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n          .attr('display', 'none');\n        attrs(gridYContainer.selectAll('.domain'), { ...axis.x.style, stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     */\n    update(el: Element, newProps: DeepPartial<IJoyPlotProps>) {\n      this.mergeProps(newProps);\n      const { data, visible } = props;\n\n      dataSets = data.map((d) => {\n        const lineData = [] as IGroupData;\n        d.counts.forEach((count) => {\n          count.data.forEach((value, i) => {\n            if (!lineData[i]) {\n              lineData[i] = [];\n            }\n            lineData[i].push({\n              groupLabel: count.label,\n              joyLabel: d.title,\n              label: d.bins[i],\n              value: visible[d.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n            } as IGroupDataItem);\n          });\n        });\n        return lineData;\n      });\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this.updateChart(dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     */\n    destroy(el: Element) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return JoyPlotD3;\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IChartState,\n  IDomain,\n  IGrid,\n  IHistogramBar,\n  IHistogramData,\n  IMargin,\n  IStroke,\n  TipContentFn,\n} from './Histogram';\nimport { joyPlotD3 } from './JoyplotD3';\nimport { DeepPartial } from './utils/types';\n\nexport interface IJoyPlotProps {\n  axis: IAxes;\n  bar: IHistogramBar;\n  className: string;\n  data: IHistogramData[];\n  delay: number;\n  duration: number;\n  colorScheme: string[];\n  domain: IDomain;\n  grid: IGrid;\n  height: number;\n  margin: IMargin;\n  stroke: IStroke;\n  tip: any;\n  tipContainer: string;\n  tipContentFn: TipContentFn<string>;\n  visible: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * JoyPlot component\n */\nclass JoyPlot extends Component<DeepPartial<IJoyPlotProps>, IChartState> {\n\n  private chart: IChartAdaptor<IJoyPlotProps>;\n  private ref: HTMLDivElement | null = null;\n\n  /**\n   * Constructor\n   */\n  constructor(props: DeepPartial<IJoyPlotProps>) {\n    super(props);\n    this.chart = joyPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.update(el, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.create(el, this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    this.chart.update(el, this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   */\n  public getChartState(): DeepPartial<IJoyPlotProps> {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    const el = this.getDOMNode();\n    if (!el) {\n      return;\n    }\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(el);\n  }\n\n  /**\n   * Get the chart's dom node\n   */\n  private getDOMNode(): Element | undefined {\n    const node = ReactDOM.findDOMNode(this.ref);\n    if (node instanceof HTMLElement) {\n      return node;\n    }\n    return undefined;\n  }\n\n  /**\n   * Render\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default JoyPlot;\n","import { IHistogramData } from '../../src';\nimport filterRange from '../../src/colors/filterRange';\nimport { IGrid } from '../../src/Histogram';\nimport { lineStyle } from '../../src/utils/defaults';\n\nexport const grid: IGrid = {\n  x: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'stroke': '#ccc',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n"],"sourceRoot":""}