{"version":3,"sources":["webpack:///./src/pages/histogram.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/colors/filterRange.ts","webpack:///./src/data.ts"],"names":["initialSate","chartType","data","reducer","state","action","type","Object","assign","Error","HistogramExample","_useState","useState","_useReducer","useReducer","_useState2","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","description","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","variant","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","length","join","defaultProps","arrayOf","array","Header","siteTitle","react_default","index_es","position","color","gatsby_browser_entry","to","Layout","Fragment","header","style","flexGrow","margin","padding","paddingTop","width","Date","getFullYear","href","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","colors","filter","value","c","Color","hsl","luminosity","e","v","index","self","indexOf","sort","Math","random","grid","data2","axis","theme","_src_colors_filterRange__WEBPACK_IMPORTED_MODULE_0__","x","stroke","stroke-opacity","ticks","y","height","bins","counts","label","borderColors","text","dy","text-anchor","transform","tickSize","fill","filterRange"],"mappings":"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","file":"component---src-pages-histogram-tsx-0409df91848b41c32c99.js","sourcesContent":["import React, {\n  useReducer,\n  useState,\n} from 'react';\n\n// import ReactDataSheet from 'react-datasheet';\n// import ReactJson from 'react-json-view';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  MenuItem,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from '@material-ui/core';\n\n// import { HorizontalHistogram } from '../../../src';\nimport Histogram, { IHistogramData } from '../../../src/Histogram';\n// import Legend from '../../../src/Legend';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n// import { TabContainer } from '../components/TabContainer';\nimport {\n  axis,\n  data,\n  grid,\n  theme,\n} from '../data';\n\n// const tipContentFns = [\n//   (bins, i, d) =>\n//     bins[i] + '<br />HI THere ' + d.toFixed(2),\n//   (bins, i, d) =>\n//     bins[i] + '<br />Bookay ' + d.toFixed(2),\n// ];\n\n// const dataLegendData = {\n//   bins: data.counts.map((c) => c.label),\n//   counts: [{\n//     data: data.counts.map((c) => c.data.reduce((p, n) => p + n, 0)),\n//     label: '',\n//   }],\n// };\n\ninterface IInitialState {\n  chartType: 'HorizontalHistogram' | 'Histogram';\n  data: IHistogramData;\n}\nconst initialSate: IInitialState = {\n  chartType: 'Histogram',\n  data,\n};\n\ntype Actions = { type: 'setChartType'; chartType: string }\n  | { type: 'setData', data: IHistogramData };\n\nfunction reducer(state: IInitialState, action: Actions) {\n  switch (action.type) {\n    case 'setChartType':\n      return { ...state, chartType: action.chartType };\n    case 'setData':\n      return { ...state, data: action.data };\n    default:\n      throw new Error();\n  }\n}\n\n// export const dataToSpreadSheet = (datum: IHistogramData): any => {\n//   const speadSheetData: any = [];\n\n//   datum.bins.forEach((b, i) => {\n//     if (!speadSheetData[i]) {\n//       speadSheetData[i] = [];\n//     }\n//     speadSheetData[i][0] = { value: b };\n//   });\n//   datum.counts.forEach((c, i) => {\n//     c.data.forEach((d, x) => {\n//       if (!speadSheetData[x]) {\n//         speadSheetData[x] = [];\n//       }\n//       speadSheetData[x][i + 1] = { value: d };\n//     });\n//   });\n//   return speadSheetData;\n// };\n\nconst HistogramExample = () => {\n  const [tab, setTab] = useState(0);\n  const [state, dispatch] = useReducer(reducer, initialSate);\n  const [visible, setVisible] = useState({});\n\n  // const speadSheetData = dataToSpreadSheet(state.data);\n\n  // const Chart = state.chartType === 'Histogram' ? Histogram : HorizontalHistogram;\n  return (\n    <Layout>\n      <SEO title=\"Histogram\" description=\"\" />\n      <Typography variant=\"h2\">Histogram</Typography>\n      {/* <div>\n        <Grid container spacing={24}>\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <Chart data={state.data}\n                  axis={axis}\n                  grid={grid}\n                  width={'100%'}\n                  height={300}\n                  visible={visible}\n                  colorScheme={theme}\n                  tipContentFn={tipContentFns[0]} />\n                <Legend\n                  theme={theme}\n                  data={dataLegendData}\n                  onSelect={(key) => {\n                    setVisible({ ...visible, [key]: visible.hasOwnProperty(key) ? !visible[key] : false });\n                  }}\n                  visible={visible}\n                />\n              </CardContent>\n            </Card>\n            <br />\n            <Card>\n              <CardContent>\n                <ReactJson src={state} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <Tabs value={tab} onChange={(e, v) => setTab(v)}>\n                  <Tab label=\"Data\" />\n                  <Tab label=\"Styling\" />\n                </Tabs>\n                {\n                  tab === 0 && <TabContainer>\n                    <ReactDataSheet<any, any> data={speadSheetData}\n                      valueRenderer={(cell) => cell.value}\n                      sheetRenderer={(props) => (\n                        <table className={props.className + ' my-awesome-extra-class'}>\n                          <thead>\n                            <tr>\n                              <th className=\"action-cell\">Bin</th>\n                              {\n                                state.data.counts.map((count) => (<th key={count.label} className=\"action-cell\">\n                                  {count.label}\n                                </th>))\n                              }\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {props.children}\n                          </tbody>\n                        </table>\n                      )}\n                      onCellsChanged={(changes) => {\n                        changes.forEach(({ cell, row, col, value }) => {\n                          if (col === 0) {\n                            state.data.bins[row] = value;\n                          } else {\n                            state.data.counts[col - 1].data[row] = Number(value);\n                          }\n                        });\n                        dispatch({ type: 'setData', data: state.data });\n                      }} />\n                  </TabContainer>\n                }\n                {\n                  tab === 1 && <TabContainer>\n                    <Grid container spacing={24}>\n                      <Grid item xs={6}>\n                        <TextField\n                          select\n                          label=\"Chart direction\"\n                          value={state.chartType}\n                          onChange={(e) => {\n                            dispatch({ type: 'setChartType', chartType: e.target.value });\n                          }}\n                        >\n                          <MenuItem value=\"Histogram\">\n                            Histogram\n                            </MenuItem>\n                          <MenuItem value=\"HorizontalHistogram\">\n                            HorizontalHistogram\n                            </MenuItem>\n\n                        </TextField>\n                      </Grid>\n                    </Grid>\n                  </TabContainer>\n                }\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </div> */}\n    </Layout>\n  );\n};\n\n// const HistogramExample: FC<{}> = () => {\n//   return <div>test</div>;\n// };\n\nexport default HistogramExample;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"/histogram\">Histogram</Link></Button>\n      <Button><Link to=\"/line\">Line Chart</Link></Button>\n      <Button><Link to=\"/pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"/joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","import {\n  IAxes,\n  IHistogramData,\n} from '../../src';\nimport filterRange from '../../src/colors/filterRange';\n\nexport const grid = {\n  x: {\n    style: {\n      'stroke': '#eeAA00',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    height: 20,\n    style: {\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n  grid,\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const axis: IAxes = {\n  x: {\n    height: 20,\n    label: 'X Axis',\n    margin: 20,\n    text: {\n      style: {\n        'dy': '.35em',\n        'text-anchor': 'start',\n        'transform': 'rotate(90)',\n        'x': 0,\n        'y': 0,\n      },\n    },\n    tickSize: 0,\n  },\n  y: {\n    label: 'Y Axis!',\n    style: {\n      fill: 'none',\n      stroke: '#eeAA00',\n    },\n    text: {\n      style: {\n        fill: '#eeAA00',\n      },\n    },\n    tickSize: 20,\n    ticks: 3,\n    width: 50,\n  },\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n"],"sourceRoot":""}