{"version":3,"sources":["webpack:///./src/pages/joyplot.tsx","webpack:///../src/colors/index.js","webpack:///../src/d3/attrs.ts","webpack:///../src/tip.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///../src/colors/filterRange.ts","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/JoyplotD3.ts","webpack:///../src/JoyPlot.tsx","webpack:///./src/data.ts"],"names":["data3","Object","assign","data2","counts","data","label","title","JoyPlotExample","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","description","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","variant","container","spacing","item","xs","_src_JoyPlot__WEBPACK_IMPORTED_MODULE_3__","colorScheme","width","height","__webpack_exports__","selection","style","keys","forEach","k","attr","__webpack_require__","d","makeTip","d3_selection__WEBPACK_IMPORTED_MODULE_0__","fx","in","event","pageX","pageY","transition","duration","move","out","selector","tipContainer","remove","select","append","tipContent","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","colors","filter","value","c","Color","hsl","array","length","luminosity","e","v","index","self","indexOf","sort","Math","random","SEO","_ref","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","name","property","author","concat","join","defaultProps","arrayOf","Header","siteTitle","react_default","index_es","position","color","gatsby_browser_entry","to","Layout","Fragment","header","flexGrow","margin","padding","paddingTop","Date","getFullYear","href","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","joyPlotD3","svg","dataSets","yOuterScaleBand","scaleBand","y","scaleLinear","x","innerScaleBand","axis","fill","shape-rendering","stroke","stroke-opacity","stroke-width","text","ticks","bar","groupMargin","className","bins","delay","domain","max","min","grid","visible","left","top","dasharray","linecap","tip","tips","tipContentFn","i","joyTitle","create","el","newProps","this","mergeProps","_makeSvg","makeGrid","makeScales","containers","map","update","merge","selectAll","childNodes","getElementsByTagName","removeChild","_props","r","valuesCount","reduce","b","appendDomainRange","scale","yDomain","allCounts","prev","next","thisCounts","p","thisExtent","extent","hasOwnProperty","yRange","bandwidth","range","yAxisWidth","xAxisHeight","_props5","xAxis","yAxis","Number","gridHeight","getBins","Array","from","Set","_drawScales","_this","_props6","w","gridWidth","dataLabels","rangeRound","paddingInner","groupedMargin","barMargin","axisBottom","tickSize","get","undefined","tickValues","call","yLabels","yOuterBounds","axisLeft","yTickSize","attrs","_props7","_props8","barWidth","updateChart","groupData","_this2","_props9","scaleOrdinal","borderColors","thisMax","g","bars","enter","joyLabel","groupLabel","ix","on","findIndex","html","currentHeight","exit","gridX","gridY","_drawGrid","_this3","_props10","axisWidth","offset","make_x_gridlines","tickFormat","make_y_gridlines","_props11","lineData","count","push","destroy","Histogram","_React$Component","chart","state","parentWidth","handleResize","elem","getDOMNode","ref","offsetWidth","setState","getChartState","componentDidMount","window","addEventListener","componentDidUpdate","_this$props","rest","objectWithoutPropertiesLoose_default","componentWillUnmount","removeEventListener","ReactDOM","_this4","react","rgb","darker","toString","theme","_src_colors_filterRange__WEBPACK_IMPORTED_MODULE_0__","dy","text-anchor","transform","filterRange"],"mappings":"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","file":"component---src-pages-joyplot-tsx-79d87dd4702666fd674e.js","sourcesContent":["import React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core';\n\nimport JoyPlot from '../../../src/JoyPlot';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { data2 } from '../data';\n\nconst data3 = {\n  ...data2,\n  counts: [{\n    ...data2.counts[0],\n    data: [7, 6, 5, 4, 3, 2, 1],\n    label: 'Data 2',\n  }],\n  title: 'Plot 2',\n};\n\nconst JoyPlotExample = () => {\n  return (\n    <Layout>\n      <SEO title=\"Joy Plot\" description=\"\" />\n      <Typography variant=\"h2\">Joy Plot</Typography>\n      <div>\n        <Grid container spacing={24}>\n          <Grid item xs={6}>\n            <Card>\n              <CardContent>\n                <JoyPlot\n                  data={[data2, data3]}\n                  colorScheme={['rgba(0, 0, 0, 0.5)', '#666']}\n                  width={400} height={400} />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nexport default JoyPlotExample;\n","export default ['#4bbcad',\n  '#d54539',\n  '#5ab94d',\n  '#8a5cd3',\n  '#a4b243',\n  '#ba5ccd',\n  '#54995c',\n  '#cf47a1',\n  '#d29f3e',\n  '#5c6fda',\n  '#c36528',\n  '#5fa6dc',\n  '#d74770',\n  '#7d7430',\n  '#8a529e',\n  '#df9273',\n  '#5f74b8',\n  '#ac5450',\n  '#d192d7',\n  '#b26088'];\n","import { ISVGLineStyle } from '../Histogram';\n\n/**\n * Apply style object to a d3 selection\n * @param {Object} selection D3 selection\n * @param {Object} style Css styling\n * @return {Object} selection\n */\nexport default (selection, style: ISVGLineStyle) => {\n  Object.keys(style).forEach((k: string) => {\n    selection.attr(k, style[k]);\n  });\n  return selection;\n};\n","import { event } from 'd3-selection';\nimport { select } from 'd3-selection';\n\nexport default {\n  fx: {\n    in: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n      container.transition()\n        .duration(200)\n        .style('opacity', 0.9);\n    },\n    move: (container) => {\n      container.style('left', (event.pageX) + 'px')\n        .style('top', (event.pageY - 55) + 'px');\n    },\n    out: (container) => {\n      container.transition()\n        .duration(100)\n        .style('opacity', 0);\n    },\n  },\n};\n\nexport const makeTip = (selector, tipContainer): { tipContainer: any, tipContent: any } => {\n  if (tipContainer) {\n    // Chart could be rebuilt - remove old tip\n    tipContainer.remove();\n  }\n  tipContainer = select(selector).append('div')\n    .attr('class', 'tooltip top')\n    .style('opacity', 0);\n\n  tipContainer.append('div')\n    .attr('class', 'tooltip-arrow');\n  return {\n    tipContainer,\n    tipContent: tipContainer.append('div')\n      .attr('class', 'tooltip-inner'),\n  };\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as Color from 'color';\n\nexport default (colors) => {\n  return colors.filter((value) => {\n    try {\n      const c = Color(value);\n      const hsl = c.hsl().array();\n      if (hsl.length > 3) {\n        // remove alpha colours\n        return false;\n      }\n      const luminosity = c.luminosity();\n      return ((luminosity < 0.8 && luminosity > 0.1) && (hsl[2] < 200 && hsl[2] > 20)) // not too light\n        ; // not too dark\n    } catch (e) {\n      return false;\n    }\n  })\n    .filter((v, index, self) => self.indexOf(v) === index)\n    .sort(() => Math.random() - 0.5);\n};\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport {\n  graphql,\n  useStaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              content: keywords.join(`, `),\n              name: `keywords`,\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  keywords: [],\n  lang: `en`,\n  meta: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nconst Header = ({ siteTitle }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\" >\n        <Link to=\"/\">{siteTitle}</Link>\n      </Typography>\n\n      <Button><Link to=\"/histogram\">Histogram</Link></Button>\n      <Button><Link to=\"/line\">Line Chart</Link></Button>\n      <Button><Link to=\"/pie\">Pie Chart</Link></Button>\n      <Button><Link to=\"/joyplot\">Joy Plot</Link></Button>\n      {/* <Button><Link to=\"/map\">Map</Link></Button> */}\n    </Toolbar>\n  </AppBar>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import './layout.css';\n\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\nimport {\n  graphql,\n  StaticQuery,\n} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from './header';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            flexGrow: 2,\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n            width: '100%',\n          }}\n        >\n          <main>{children}</main>\n\n        </div>\n        <footer>\n          © {new Date().getFullYear()}, Built by\n            {` `}\n          <a href=\"https://www.infosum.com\">InfoSum</a>\n        </footer>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { extent } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { scaleBand, scaleLinear, ScaleLinear, scaleOrdinal } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport * as merge from 'deepmerge';\nimport * as get from 'lodash.get';\nimport colorScheme from './colors';\nimport attrs from './d3/attrs';\nimport { IChartAdaptor, IHistogramData, IHistogramDataSet } from './Histogram';\nimport { IJoyPlotProps } from './JoyPlot';\nimport tips, { makeTip } from './tip';\n\ninterface IGroupDataItem {\n  label: string;\n  value: number;\n}\n\ntype IGroupData = IGroupDataItem[][];\n\nexport const joyPlotD3 = ((): IChartAdaptor => {\n  let svg;\n  let tipContainer;\n  let tipContent;\n  let props: IJoyPlotProps;\n  let dataSets: IGroupData[];\n  const yOuterScaleBand = scaleBand();\n  const y = scaleLinear();\n  const x = scaleBand();\n  const innerScaleBand = scaleBand();\n\n  // Gridlines in x axis function\n  function make_x_gridlines(ticks: number = 5) {\n    return axisBottom(x)\n      .ticks(ticks);\n  }\n\n  // Gridlines in y axis function\n  function make_y_gridlines(ticks: number = 5) {\n    return axisLeft(yOuterScaleBand)\n      .ticks(ticks);\n  }\n\n  const defaultProps: IJoyPlotProps = {\n    axis: {\n      x: {\n        height: 20,\n        label: '',\n        margin: 10,\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n      },\n      y: {\n        label: '',\n        style: {\n          'fill': 'none',\n          'shape-rendering': 'crispEdges',\n          'stroke': '#666',\n          'stroke-opacity': 1,\n          'stroke-width': 1,\n        },\n        text: {\n          style: {\n            fill: '#666',\n          },\n        },\n        ticks: 10,\n        width: 25,\n      },\n    },\n    bar: {\n      groupMargin: 0,\n      margin: 0,\n      width: 50,\n    },\n    className: 'histogram-d3',\n    colorScheme,\n    data: [{\n      bins: [],\n      counts: [],\n    }],\n    delay: 0,\n    domain: {\n      max: null,\n      min: null,\n    },\n    duration: 400,\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: '#005870',\n      dasharray: '',\n      linecap: 'butt',\n      width: 0,\n    },\n    tip: tips,\n    tipContainer: 'body',\n    tipContentFn: (bins, i, d, joyTitle): string =>\n      joyTitle + ': ' +\n      bins[i] + '<br />' + d,\n    visible: {},\n    width: 200,\n  };\n\n  const JoyPlotD3 = {\n    /**\n     * Initialization\n     * @param {Node} el Target DOM node\n     * @param {Object} props Chart properties\n     */\n    create(el: HTMLElement, newProps: Partial<IJoyPlotProps> = {}) {\n      this.mergeProps(newProps);\n      this._makeSvg(el);\n      this.makeGrid(props);\n      this.makeScales();\n      this.containers = props.data.map((d, i) => svg\n        .append('g')\n        .attr('class', `histogram-container-${i}`),\n      );\n\n      this.update(el, props);\n    },\n\n    mergeProps(newProps: Partial<IJoyPlotProps>) {\n      props = merge<IJoyPlotProps>(defaultProps, newProps);\n      props.data = newProps.data;\n      if (newProps.colorScheme) {\n        props.colorScheme = newProps.colorScheme;\n      }\n    },\n\n    /**\n     * Make the SVG container element\n     * Recreate if it previously existed\n     * @param {Dom} el Dom container node\n     */\n    _makeSvg(el) {\n      if (svg) {\n        svg.selectAll('svg > *').remove();\n        svg.remove();\n        const childNodes = el.getElementsByTagName('svg');\n        if (childNodes.length > 0) {\n          el.removeChild(childNodes[0]);\n        }\n      }\n      const { margin, width, height, className } = props;\n\n      // Reference to svg element containing chart\n      svg = select(el).append('svg')\n        .attr('class', className)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('viewBox', `0 0 ${width} ${height}`)\n        .append('g')\n        .attr('transform',\n          'translate(' + margin.left + ',' + margin.top + ')');\n      const r = makeTip(props.tipContainer, tipContainer);\n      tipContent = r.tipContent;\n      tipContainer = r.tipContainer;\n    },\n\n    /**\n     * Get a max count of values in each data set\n     * @param {Object} counts Histogram data set values\n     * @return {Number} count\n     */\n    valuesCount(counts: IHistogramDataSet[]): number {\n      return counts.reduce((a: number, b: IHistogramDataSet): number => {\n        return b.data.length > a ? b.data.length : a;\n      }, 0);\n    },\n\n    /**\n     * Update a linear scale with range and domain values taken either from the compiled\n     * group data\n     */\n    appendDomainRange(scale: ScaleLinear<number, number>, data: IGroupData[]): void {\n      const yDomain: number[] = [];\n      const { domain } = props;\n\n      const allCounts: number[] = data.reduce((prev, next) => {\n        const thisCounts: number[] = next.reduce((p, n) => {\n          return [...p, ...n.map((item) => item.value)];\n        }, [] as number[]);\n        return [...prev, ...thisCounts];\n      }, [0]);\n\n      const thisExtent = extent(allCounts, (d) => d);\n      yDomain[1] = domain && domain.hasOwnProperty('max') && domain.max !== null\n        ? domain.max\n        : thisExtent[1];\n      yDomain[0] = domain && domain.hasOwnProperty('min') && domain.min !== null\n        ? domain.min\n        : thisExtent[0];\n      const yRange = [yOuterScaleBand.bandwidth(), 0];\n      scale.range(yRange)\n        .domain(yDomain);\n    },\n\n    yAxisWidth() {\n      const { axis } = props;\n      return axis.y.label === ''\n        ? axis.y.width\n        : axis.y.width + 30;\n    },\n\n    xAxisHeight() {\n      const { axis } = props;\n      return axis.x.label === ''\n        ? axis.x.height\n        : axis.x.height + 30;\n    },\n\n    makeScales() {\n      const { axis, margin, height, width } = props;\n      this.xAxis = svg.append('g').attr('class', 'x-axis');\n      this.yAxis = svg.append('g').attr('class', 'y-axis');\n\n      if (axis.x.label !== '') {\n        svg.append('text')\n          .attr('class', 'x-axis-label')\n          .attr('transform',\n            'translate(' + (Number(width) / 2) + ' ,' +\n            ((height - this.xAxisHeight() - (margin.left * 2)) + 10 + axis.x.margin) + ')')\n          .style('text-anchor', 'middle')\n          .text(axis.x.label);\n      }\n\n      if (axis.y.label !== '') {\n        svg.append('text')\n          .attr('class', 'y-axis-label')\n          .attr('transform', 'translate(0, -' + this.gridHeight() + ')rotate(-90)')\n          .attr('y', 0 - margin.left)\n          .attr('x', 0 - (height / 2 - (margin.top * 2)))\n          .attr('dy', '1em')\n          .style('text-anchor', 'middle')\n          .text(axis.y.label);\n      }\n    },\n\n    getBins() {\n      return props.data.reduce((prev, next) => {\n        return Array.from(new Set(prev.concat(next.bins)));\n      }, [] as string[]);\n    },\n\n    /**\n     * Draw scales\n     * @param {Object} data Chart data\n     */\n    _drawScales(data: IHistogramData[]) {\n      const { bar, domain, margin, width, height, axis } = props;\n      const valuesCount = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? c : prev;\n      }, 0);\n      const w = this.gridWidth();\n\n      let xAxis;\n      const dataLabels = data[0].counts.map((c) => c.label);\n\n      const bins = this.getBins();\n      x\n        .domain(bins)\n        .rangeRound([0, w])\n        .paddingInner(this.groupedMargin());\n\n      innerScaleBand\n        .domain(dataLabels)\n        .rangeRound([0, x.bandwidth()])\n        .paddingInner(this.barMargin());\n\n      xAxis = axisBottom(x);\n\n      const tickSize = get(axis, 'x.tickSize', undefined);\n      if (tickSize !== undefined) {\n        xAxis.tickSize(tickSize);\n      } else {\n        if (w / valuesCount < 10) {\n          // Show one in 10 x axis labels\n          xAxis.tickValues(x.domain().filter((d, i) => !(i % 10)));\n        }\n      }\n\n      this.xAxis\n        .attr('transform', 'translate(' + (this.yAxisWidth() + axis.y.style['stroke-width']) + ',' +\n          (height - this.xAxisHeight() - (margin.left * 2)) + ')')\n        .call(xAxis);\n\n      const yLabels = data.map((d) => d.title);\n      const yOuterBounds: [number, number] = [height - (margin.top * 2) - this.xAxisHeight(), 0];\n      yOuterScaleBand.domain(yLabels)\n        .rangeRound(yOuterBounds);\n\n      this.appendDomainRange(y, dataSets);\n\n      const yAxis = axisLeft(yOuterScaleBand).ticks(axis.y.ticks);\n\n      const yTickSize = get(axis, 'y.tickSize', undefined);\n      if (yTickSize !== undefined) {\n        yAxis.tickSize(yTickSize);\n      }\n\n      this.yAxis\n        .attr('transform', 'translate(' + this.yAxisWidth() + ', 0)')\n        .transition()\n        .call(yAxis);\n\n      const { ...xLabelStyle } = axis.x.text.style;\n      const { ...yLabelStyle } = axis.y.text.style;\n      attrs(svg.selectAll('.y-axis .domain, .y-axis .tick line'), axis.y.style);\n      attrs(svg.selectAll('.y-axis .tick text'), axis.y.text.style);\n\n      attrs(svg.selectAll('.x-axis .domain, .x-axis .tick line'), axis.x.style);\n      attrs(svg.selectAll('.x-axis .tick text'), axis.x.text.style);\n    },\n\n    /**\n     * Calculate the width of the area used to display the\n     * chart bars. Removes chart margins and Y axis from\n     * chart total width.\n     * @return {number} width\n     */\n    gridWidth(): number {\n      const { axis, width, margin } = props;\n      return Number(width) - (margin.left * 2) - this.yAxisWidth();\n    },\n\n    /**\n     * Calculate the height of the area used to display the\n     * chart bars. Removes chart margins and X axis from\n     * chart total height.\n     * @return {number} width\n     */\n    gridHeight(): number {\n      const { height, margin, axis } = props;\n      return height - (margin.top * 2) - this.xAxisHeight();\n    },\n\n    /**\n     * Returns the margin between similar bars in different data sets\n     * @return {Number} Margin\n     */\n    groupedMargin(): number {\n      const m = get(props.bar, 'groupMargin', 0.1);\n      return m >= 0 && m <= 1\n        ? m\n        : 0;\n    },\n\n    barMargin(): number {\n      const m = get(props.bar, 'margin', 0);\n      return m >= 0 && m <= 1\n        ? m\n        : 0.1;\n    },\n\n    /**\n     * Calculate the bar width\n     * @return {number} bar width\n     */\n    barWidth() {\n      return innerScaleBand.bandwidth();\n    },\n\n    /**\n     * Draw a single data set into the chart\n     */\n    updateChart(\n      groupData: IGroupData[],\n    ) {\n      const bins = this.getBins();\n      const { height, width, margin, bar, delay, duration,\n        axis, stroke, tip, tipContentFn } = props;\n      const barWidth = this.barWidth();\n\n      const colors = scaleOrdinal(props.colorScheme);\n      const borderColors = scaleOrdinal(['#FFF']);\n\n      const yAxisWidth = this.yAxisWidth();\n      const groupedMargin = this.groupedMargin();\n\n      const maxItems = groupData.reduce((prev, next) => {\n        const thisMax = next.reduce((p, n) => n.length > p ? n.length : p, 0);\n        return thisMax > prev ? thisMax : prev;\n      }, 0);\n      groupData.forEach((data, i) => {\n        const joyTitle = props.data[i].title;\n        const g = this.containers[i]\n          .selectAll('g')\n          .data(data);\n\n        const bars = g.enter()\n          .append('g')\n          .merge(g)\n          .attr('transform', (d) => {\n            const xdelta = yAxisWidth\n              + axis.y.style['stroke-width']\n              + x(d[0].label);\n\n            const ydelta = yOuterScaleBand(d[0].joyLabel);\n            return `translate(${xdelta}, ${ydelta})`;\n          })\n          .selectAll('rect')\n          .data((d) => d);\n\n        bars\n          .enter()\n          .append('rect')\n          .attr('height', 0)\n          .attr('y', (d: IGroupDataItem): number => yOuterScaleBand.bandwidth())\n\n          .attr('class', 'bar')\n          .attr('x', (d) => innerScaleBand(d.groupLabel))\n          .attr('width', (d) => barWidth)\n          .attr('fill', (d, ix) => colors(ix))\n\n          .on('mouseover', (d: IGroupDataItem) => {\n            const ix = bins.findIndex((b) => b === d.label);\n            tipContent.html(() => tipContentFn(bins, ix, d.value, joyTitle));\n            tip.fx.in(tipContainer);\n          })\n          .on('mousemove', () => tip.fx.move(tipContainer))\n          .on('mouseout', () => tip.fx.out(tipContainer))\n          .merge(bars)\n          .transition()\n          .duration(duration)\n          .delay(delay)\n          .attr('y', (d: IGroupDataItem): number => y(d.value))\n          .attr('stroke', (d, ix) => {\n            if (borderColors) {\n              return borderColors(ix);\n            }\n          })\n          .attr('shape-rendering', 'crispEdges')\n          .attr('stroke-width', stroke.width)\n          .attr('stroke-linecap', stroke.linecap)\n\n          // Hide bar's bottom border\n          .attr('stroke-dasharray',\n            (d: IGroupDataItem): string => {\n              const currentHeight = yOuterScaleBand.bandwidth() - y(d.value);\n              return `${barWidth} 0 ${currentHeight} ${barWidth}`;\n            })\n          .attr('height', (d: IGroupDataItem): number =>\n            yOuterScaleBand.bandwidth() - y(d.value),\n        );\n\n        g.exit().remove();\n      });\n    },\n\n    makeGrid(props: IJoyPlotProps) {\n      const { grid } = props;\n      this.gridX = svg.append('g')\n        .attr('class', 'grid gridX');\n      this.gridY = svg.append('g')\n        .attr('class', 'grid gridY');\n    },\n\n    /**\n     * Draw a grid onto the chart background\n     * @param {Object} props Props\n     */\n    _drawGrid() {\n      const { data, height, width, axis, grid, margin, bar } = props;\n      const ticks = data.reduce((prev, next) => {\n        const c = this.valuesCount(next.counts);\n        return c > prev ? prev : c;\n      }, 0);\n      const axisWidth = axis.y.style['stroke-width'];\n\n      const offset = {\n        x: this.yAxisWidth() + axisWidth,\n        y: this.gridHeight(),\n      };\n\n      if (grid.x.visible) {\n        // Add the X gridlines\n        this.gridX.attr('transform', `translate(${offset.x}, ${offset.y})`);\n\n        this.gridX.call(make_x_gridlines(get(grid, 'x.ticks', ticks))\n          .tickSize(-height + this.xAxisHeight() + (margin.top * 2))\n          .tickFormat(() => ''));\n\n        attrs(this.gridX.selectAll('.tick line'), grid.x.style);\n        attrs(this.gridX.selectAll('.domain'), { stroke: 'transparent' });\n      }\n\n      if (grid.y.visible) {\n        // add the Y gridlines\n        this.gridY.attr('transform', 'translate(' + (this.yAxisWidth() + axisWidth) + ', 0)')\n          .transition()\n          .call(make_y_gridlines(get(grid, 'y.ticks', ticks))\n            .tickSize(-width + (margin.left * 2) + this.yAxisWidth())\n            .tickFormat(() => ''),\n        );\n\n        attrs(this.gridY.selectAll('.tick line'), grid.y.style);\n\n        // Hide the first horizontal grid line to show axis\n        this.gridY.selectAll('.gridY .tick line').filter((d, i) => i === 0)\n          .attr('display', 'none');\n        attrs(this.gridY.selectAll('.domain'), { stroke: 'transparent' });\n      }\n    },\n\n    /**\n     * Update chart\n     * @param {HTMLElement} el Chart element\n     * @param {Object} props Chart props\n     */\n    update(el: HTMLElement, newProps: IJoyPlotProps) {\n      if (!props.data) {\n        return;\n      }\n      this.mergeProps(newProps);\n      const { data, visible } = props;\n\n      dataSets = data.map((d) => {\n        const lineData = [] as IGroupData;\n        d.counts.forEach((count) => {\n          count.data.forEach((value, i) => {\n            if (!lineData[i]) {\n              lineData[i] = [];\n            }\n            lineData[i].push({\n              groupLabel: count.label,\n              joyLabel: d.title,\n              label: d.bins[i],\n              value: visible[d.bins[i]] !== false && visible[count.label] !== false ? value : 0,\n            } as IGroupDataItem);\n          });\n        });\n        return lineData;\n      });\n\n      this._drawScales(props.data);\n      this._drawGrid();\n      this.updateChart(dataSets);\n    },\n\n    /**\n     * Any necessary clean up\n     * @param {Element} el To remove\n     */\n    destroy(el: HTMLElement) {\n      svg.selectAll('svg > *').remove();\n    },\n  };\n  return JoyPlotD3;\n});\n","import { rgb } from 'd3-color';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport {\n  IAxes,\n  IChartAdaptor,\n  IChartState,\n  IDomain,\n  IGrid,\n  IHistogramBar,\n  IHistogramData,\n  IMargin,\n  IStroke,\n  TipContentFn,\n} from './Histogram';\nimport { joyPlotD3 } from './JoyplotD3';\n\nexport interface IJoyPlotProps {\n  axis?: IAxes;\n  bar?: IHistogramBar;\n  className?: string;\n  data: IHistogramData[];\n  delay?: number;\n  duration?: number;\n  colorScheme?: string[];\n  domain?: IDomain;\n  grid?: IGrid;\n  height: number;\n  margin?: IMargin;\n  stroke?: IStroke;\n  tip?: any;\n  tipContainer?: string;\n  tipContentFn?: TipContentFn<string>;\n  visible?: { [key: string]: boolean };\n  width: number | string;\n}\n\n/**\n * Histogram component\n */\nclass Histogram extends React.Component<IJoyPlotProps, IChartState> {\n\n  private chart: IChartAdaptor;\n  private ref;\n\n  public static defaultProps: Partial<IJoyPlotProps> = {\n    axis: {},\n    bar: {\n      margin: 0,\n      width: 10,\n    },\n    grid: {\n      x: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n      y: {\n        style: {\n          'fill': 'none',\n          'stroke': '#bbb',\n          'stroke-opacity': 0.7,\n          'stroke-width': 1,\n        },\n        ticks: 5,\n        visible: true,\n      },\n    },\n    height: 200,\n    margin: {\n      left: 5,\n      top: 5,\n    },\n    stroke: {\n      color: (d, i, colors) => rgb(colors(i)).darker(1).toString(),\n      width: 1,\n    },\n    width: '100%',\n  };\n\n  /**\n   * Constructor\n   * @param {Object} props\n   */\n  constructor(props: IJoyPlotProps) {\n    super(props);\n    this.chart = joyPlotD3();\n    this.state = {\n      parentWidth: 300,\n    };\n  }\n\n  /**\n   * Handle the page resize\n   */\n  private handleResize() {\n    const elem = this.getDOMNode();\n    const width = (this.ref && this.ref.offsetWidth) ? this.ref.offsetWidth : 0;\n\n    this.setState({\n      parentWidth: width,\n    }, () => this.chart.create(elem, this.getChartState()));\n  }\n\n  /**\n   * Component mounted\n   */\n  public componentDidMount() {\n    this.chart.create(this.getDOMNode(), this.getChartState());\n    if (this.props.width === '100%') {\n      window.addEventListener('resize', (e) => this.handleResize());\n      this.handleResize();\n    }\n  }\n\n  /**\n   * Component updated\n   */\n  public componentDidUpdate() {\n    this.chart.update(this.getDOMNode(), this.getChartState());\n  }\n\n  /**\n   * Get the chart state\n   * @return {Object} ChartState\n   */\n  public getChartState(): IJoyPlotProps {\n    let { width } = this.props;\n    const { children, ...rest } = this.props;\n    if (width === '100%') {\n      width = this.state.parentWidth || 300;\n    }\n    return {\n      ...rest,\n      width,\n    };\n  }\n\n  /**\n   * Component will un mount, remove the chart and\n   * any event listeners\n   */\n  public componentWillUnmount() {\n    if (this.props.width === '100%') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n    this.chart.destroy(this.getDOMNode());\n  }\n\n  /**\n   * Get the chart's dom node\n   * @return {Element} dom noe\n   */\n  private getDOMNode() {\n    return ReactDOM.findDOMNode(this.ref);\n  }\n\n  /**\n   * Render\n   * @return {Dom} node\n   */\n  public render(): JSX.Element {\n    return (<div ref={(ref) => this.ref = ref} className=\"histogram-chart-container\"></div>);\n  }\n}\n\nexport default Histogram;\n","import {\n  IAxes,\n  IHistogramData,\n} from '../../src';\nimport filterRange from '../../src/colors/filterRange';\n\nexport const grid = {\n  x: {\n    style: {\n      'stroke': '#eeAA00',\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n  y: {\n    height: 20,\n    style: {\n      'stroke-opacity': 0.4,\n    },\n    ticks: 5,\n  },\n};\n\nexport const data: IHistogramData = {\n  bins: ['Data 1', 'Data 6', 'Data 3', 'Dat 4'],\n  counts: [\n    {\n      data: [1, 2, 3, 4],\n      label: 'DataSet 1',\n    },\n    {\n      data: [13, 14, 15, 16],\n      label: 'DataSet 2',\n    },\n  ],\n  grid,\n};\n\nexport const data2 = {\n  bins: ['bin 1', 'bin 2', 'bin 3 with a long name', 'bin 4', 'bin 5', 'bin 6', 'bin 7'],\n  counts: [\n    {\n      borderColors: ['red'],\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: 'Data 1',\n    },\n  ],\n  title: 'Plot 1',\n};\n\nexport const data3 = {\n  bins: ['bin 1', 'bin 2', 'bin 3'],\n  counts: [\n    {\n      borderColors: ['red'],\n      colors: ['red'],\n      data: [100, 50, 40],\n      label: 'Data 1',\n    },\n    {\n      borderColors: ['red'],\n      colors: ['blue'],\n      data: [32, 1, 5, 0],\n      label: 'Data 2',\n    },\n  ],\n};\n\nexport const axis: IAxes = {\n  x: {\n    height: 20,\n    label: 'X Axis',\n    margin: 20,\n    text: {\n      style: {\n        'dy': '.35em',\n        'text-anchor': 'start',\n        'transform': 'rotate(90)',\n        'x': 0,\n        'y': 0,\n      },\n    },\n    tickSize: 0,\n  },\n  y: {\n    label: 'Y Axis!',\n    style: {\n      fill: 'none',\n      stroke: '#eeAA00',\n    },\n    text: {\n      style: {\n        fill: '#eeAA00',\n      },\n    },\n    tickSize: 20,\n    ticks: 3,\n    width: 50,\n  },\n};\n\nexport const theme = filterRange(['rgba(255, 113, 1, 0.5)', '#fff6ef', 'rgba(0, 169, 123, 0.5)', '#f6fffd',\n  '#D7263D', 'rgba(215, 38, 61, 0.05)',\n  '#0f2629', '#ededed', 'rgba(86, 180, 191, 0.5)', '#f5fbfb', '#000000', '#0f2629', '#D7263D', '#FBD7D9',\n  '#ffebec', '#963540', '#22545a', '#56b4bf', '#56b4bf', '#56b4bf', '#FF7101', '#449098', '#77c3cb', '#d4eef8',\n  '#ff7101', '#FF7101', '#cc5a00', '#ff8d33', '#fef9e5', '#7d5d2e', '#00a97b', '#008762', '#33ba95', '#dbf1d6',\n  '#227839', '#0f5e7b', '#d4eef8', '#0f5e7b', '#F9C80E', '#007656', '#c5e5e9', '#f9c80e', '#a9a9a9',\n  '#dbdbdb', '#cccccc', '#e6e6e6', '#56b4bf', '#449098', '#77c3cb', '#22545a', '#ff7101', '#cdcdcd', '#ffffff',\n  '#d7263d', '#00a97b', '#888888', '#e6e6e6', '#f2f2f2', '#f4f4f4']);\n"],"sourceRoot":""}